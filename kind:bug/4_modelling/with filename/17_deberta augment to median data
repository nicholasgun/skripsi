{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5e72d42f",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-04-29T15:11:32.460506Z",
     "iopub.status.busy": "2025-04-29T15:11:32.460256Z",
     "iopub.status.idle": "2025-04-29T15:12:03.325904Z",
     "shell.execute_reply": "2025-04-29T15:12:03.325286Z"
    },
    "papermill": {
     "duration": 30.878825,
     "end_time": "2025-04-29T15:12:03.327371",
     "exception": false,
     "start_time": "2025-04-29T15:11:32.448546",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-04-29 15:11:51.110378: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1745939511.355583      19 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1745939511.423077      19 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "from transformers import DebertaTokenizer, DebertaModel\n",
    "import torch\n",
    "from torch import nn\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "from sklearn.preprocessing import MultiLabelBinarizer\n",
    "from tqdm import tqdm\n",
    "from sklearn.metrics import (\n",
    "    accuracy_score, precision_score, recall_score, f1_score,\n",
    "    multilabel_confusion_matrix\n",
    ")\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "from collections import Counter\n",
    "import argparse\n",
    "import os\n",
    "import json\n",
    "from datetime import datetime\n",
    "from sklearn.feature_selection import SelectKBest, chi2, mutual_info_classif\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "\n",
    "# Suppress expected warnings\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore', category=UserWarning, module='sklearn.metrics.cluster._supervised')\n",
    "warnings.filterwarnings('ignore', category=UserWarning, module='sklearn.feature_selection')\n",
    "\n",
    "# Add GPU count check at the top level\n",
    "def get_available_gpus():\n",
    "    \"\"\"Get the number of available GPUs and their IDs\"\"\"\n",
    "    if not torch.cuda.is_available():\n",
    "        return 0, []\n",
    "    \n",
    "    n_gpus = torch.cuda.device_count()\n",
    "    gpu_ids = list(range(n_gpus))\n",
    "    return n_gpus, gpu_ids\n",
    "\n",
    "def reduce_tokens_simple_truncation(text, tokenizer, max_length=512):\n",
    "    \"\"\"\n",
    "    Simply truncate text to the maximum allowed token length.\n",
    "    \n",
    "    Args:\n",
    "        text (str): Input text\n",
    "        tokenizer: Tokenizer to use\n",
    "        max_length (int): Maximum token length\n",
    "        \n",
    "    Returns:\n",
    "        str: Truncated text\n",
    "    \"\"\"\n",
    "    tokens = tokenizer(text, truncation=True, max_length=max_length)\n",
    "    return tokenizer.decode(tokens['input_ids'], skip_special_tokens=True)\n",
    "\n",
    "def reduce_tokens_smart_truncation(text, tokenizer, max_length=512):\n",
    "    \"\"\"\n",
    "    Intelligently truncate text by keeping the beginning and end portions.\n",
    "    \n",
    "    Args:\n",
    "        text (str): Input text\n",
    "        tokenizer: Tokenizer to use\n",
    "        max_length (int): Maximum token length\n",
    "        \n",
    "    Returns:\n",
    "        str: Truncated text with beginning and end portions\n",
    "    \"\"\"\n",
    "    tokens = tokenizer(text, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "    \n",
    "    if len(tokens) <= max_length:\n",
    "        return text\n",
    "    \n",
    "    # Keep beginning and end portions (prioritize beginning slightly)\n",
    "    beginning_length = max_length // 2 + 50  # Keep slightly more from beginning\n",
    "    end_length = max_length - beginning_length - 1  # Reserve 1 for separator\n",
    "    \n",
    "    beginning_tokens = tokens[:beginning_length]\n",
    "    end_tokens = tokens[-end_length:]\n",
    "    \n",
    "    # Combine with a separator token\n",
    "    beginning_text = tokenizer.decode(beginning_tokens, skip_special_tokens=True)\n",
    "    end_text = tokenizer.decode(end_tokens, skip_special_tokens=True)\n",
    "    \n",
    "    return f\"{beginning_text} [...] {end_text}\"\n",
    "\n",
    "def reduce_tokens_extractive_summarization(text, tokenizer, max_length=512):\n",
    "    \"\"\"\n",
    "    Reduce text length using extractive summarization techniques.\n",
    "    \n",
    "    Args:\n",
    "        text (str): Input text\n",
    "        tokenizer: Tokenizer to use\n",
    "        max_length (int): Maximum token length\n",
    "        \n",
    "    Returns:\n",
    "        str: Summarized text\n",
    "    \"\"\"\n",
    "    tokens = tokenizer(text, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "    \n",
    "    if len(tokens) <= max_length:\n",
    "        return text\n",
    "    \n",
    "    # Import NLTK for sentence tokenization\n",
    "    try:\n",
    "        import nltk\n",
    "        from nltk.tokenize import sent_tokenize\n",
    "        try:\n",
    "            nltk.data.find('tokenizers/punkt')\n",
    "        except LookupError:\n",
    "            nltk.download('punkt')\n",
    "    except ImportError:\n",
    "        # If NLTK is not available, fall back to smart truncation\n",
    "        return reduce_tokens_smart_truncation(text, tokenizer, max_length)\n",
    "    \n",
    "    # Split text into sentences\n",
    "    sentences = sent_tokenize(text)\n",
    "    \n",
    "    if len(sentences) <= 3:\n",
    "        # Not enough sentences to summarize meaningfully, use smart truncation\n",
    "        return reduce_tokens_smart_truncation(text, tokenizer, max_length)\n",
    "    \n",
    "    # Get sentence token lengths\n",
    "    sentence_tokens = []\n",
    "    for sentence in sentences:\n",
    "        tokens = tokenizer(sentence, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "        sentence_tokens.append((sentence, len(tokens)))\n",
    "    \n",
    "    # Calculate target ratio based on max length vs total length\n",
    "    tokens = tokenizer(text, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "    reduction_ratio = max_length / len(tokens)\n",
    "    \n",
    "    # Always keep first and last sentences\n",
    "    first_sentence, first_len = sentence_tokens[0]\n",
    "    last_sentence, last_len = sentence_tokens[-1]\n",
    "    \n",
    "    remaining_length = max_length - first_len - last_len - 10  # Reserve some tokens for separators\n",
    "    \n",
    "    # If can't even fit first and last sentences, use smart truncation\n",
    "    if remaining_length <= 0:\n",
    "        return reduce_tokens_smart_truncation(text, tokenizer, max_length)\n",
    "    \n",
    "    # Choose middle sentences based on importance (for now, just choose evenly distributed sentences)\n",
    "    middle_sentences = sentence_tokens[1:-1]\n",
    "    \n",
    "    # Calculate how many middle sentences we can include\n",
    "    middle_sentences_to_keep = []\n",
    "    current_length = 0\n",
    "    \n",
    "    # Select sentences in a distributed manner\n",
    "    if len(middle_sentences) > 0:\n",
    "        # Fix: Add a check to prevent division by zero\n",
    "        sentences_to_keep = int(reduction_ratio * len(middle_sentences))\n",
    "        if sentences_to_keep <= 0:\n",
    "            step = len(middle_sentences) + 1  # This will select only the first sentence if any\n",
    "        else:\n",
    "            step = max(1, len(middle_sentences) // sentences_to_keep)\n",
    "            \n",
    "        for i in range(0, len(middle_sentences), step):\n",
    "            sentence, length = middle_sentences[i]\n",
    "            if current_length + length <= remaining_length:\n",
    "                middle_sentences_to_keep.append(sentence)\n",
    "                current_length += length\n",
    "            else:\n",
    "                break\n",
    "    \n",
    "    # Combine sentences\n",
    "    summarized_text = first_sentence\n",
    "    \n",
    "    if middle_sentences_to_keep:\n",
    "        summarized_text += \" \" + \" \".join(middle_sentences_to_keep)\n",
    "    \n",
    "    summarized_text += \" \" + last_sentence\n",
    "    \n",
    "    # Verify final length is within limit\n",
    "    final_tokens = tokenizer(summarized_text, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "    if len(final_tokens) > max_length:\n",
    "        # Fall back to smart truncation if still too long\n",
    "        return reduce_tokens_smart_truncation(summarized_text, tokenizer, max_length)\n",
    "    \n",
    "    return summarized_text\n",
    "\n",
    "def reduce_tokens_hybrid(text, tokenizer, max_length=512):\n",
    "    \"\"\"\n",
    "    Use a hybrid approach combining extractive summarization and smart truncation.\n",
    "    \n",
    "    Args:\n",
    "        text (str): Input text\n",
    "        tokenizer: Tokenizer to use\n",
    "        max_length (int): Maximum token length\n",
    "        \n",
    "    Returns:\n",
    "        str: Processed text\n",
    "    \"\"\"\n",
    "    tokens = tokenizer(text, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "    \n",
    "    if len(tokens) <= max_length:\n",
    "        return text\n",
    "    \n",
    "    # For very long documents, use extractive summarization first\n",
    "    if len(tokens) > max_length * 2:\n",
    "        summarized = reduce_tokens_extractive_summarization(text, tokenizer, max_length)\n",
    "        summarized_tokens = tokenizer(summarized, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "        \n",
    "        # If still too long, apply smart truncation\n",
    "        if len(summarized_tokens) > max_length:\n",
    "            return reduce_tokens_smart_truncation(summarized, tokenizer, max_length)\n",
    "        return summarized\n",
    "    \n",
    "    # For moderately long documents, use smart truncation directly\n",
    "    return reduce_tokens_smart_truncation(text, tokenizer, max_length)\n",
    "\n",
    "def process_with_token_reduction(texts, tokenizer, max_length=512, strategy=\"smart_truncation\"):\n",
    "    \"\"\"\n",
    "    Process a series of texts by applying token reduction where necessary.\n",
    "    \n",
    "    Args:\n",
    "        texts (pd.Series): Series of input texts\n",
    "        tokenizer: Tokenizer to use for tokenization\n",
    "        max_length (int): Maximum token length (default: 512)\n",
    "        strategy (str): Token reduction strategy, one of:\n",
    "            - \"simple\": Simple truncation at max_length\n",
    "            - \"smart_truncation\": Keep beginning and end portions\n",
    "            - \"extractive_summarization\": Use extractive summarization\n",
    "            - \"hybrid\": Combine summarization and smart truncation\n",
    "            \n",
    "    Returns:\n",
    "        pd.Series: Series with processed texts\n",
    "    \"\"\"\n",
    "    processed_texts = []\n",
    "    token_lengths_before = []\n",
    "    token_lengths_after = []\n",
    "    \n",
    "    for text in tqdm(texts, desc=f\"Applying token reduction ({strategy})\"):\n",
    "        # Calculate original token length\n",
    "        tokens = tokenizer(text, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "        token_lengths_before.append(len(tokens))\n",
    "        \n",
    "        # Only process if longer than max_length\n",
    "        if len(tokens) <= max_length:\n",
    "            processed_texts.append(text)\n",
    "            token_lengths_after.append(len(tokens))\n",
    "            continue\n",
    "        \n",
    "        # Apply selected strategy\n",
    "        if strategy == \"simple\":\n",
    "            processed_text = reduce_tokens_simple_truncation(text, tokenizer, max_length)\n",
    "        elif strategy == \"smart_truncation\":\n",
    "            processed_text = reduce_tokens_smart_truncation(text, tokenizer, max_length)\n",
    "        elif strategy == \"extractive_summarization\":\n",
    "            processed_text = reduce_tokens_extractive_summarization(text, tokenizer, max_length)\n",
    "        elif strategy == \"hybrid\":\n",
    "            processed_text = reduce_tokens_hybrid(text, tokenizer, max_length)\n",
    "        else:\n",
    "            # Default to smart truncation\n",
    "            processed_text = reduce_tokens_smart_truncation(text, tokenizer, max_length)\n",
    "        \n",
    "        processed_texts.append(processed_text)\n",
    "        \n",
    "        # Calculate new token length\n",
    "        new_tokens = tokenizer(processed_text, truncation=False, return_tensors=\"pt\")[\"input_ids\"][0]\n",
    "        token_lengths_after.append(len(new_tokens))\n",
    "    \n",
    "    # Print statistics\n",
    "    print(f\"\\nToken reduction statistics using {strategy} strategy:\")\n",
    "    print(f\"  Before:\")\n",
    "    print(f\"    Mean length: {np.mean(token_lengths_before):.2f}\")\n",
    "    print(f\"    Median length: {np.median(token_lengths_before):.2f}\")\n",
    "    print(f\"    Max length: {max(token_lengths_before)}\")\n",
    "    print(f\"    Docs exceeding {max_length} tokens: {sum(1 for l in token_lengths_before if l > max_length)} ({sum(1 for l in token_lengths_before if l > max_length)/len(token_lengths_before)*100:.2f}%)\")\n",
    "    \n",
    "    print(f\"  After:\")\n",
    "    print(f\"    Mean length: {np.mean(token_lengths_after):.2f}\")\n",
    "    print(f\"    Median length: {np.median(token_lengths_after):.2f}\")\n",
    "    print(f\"    Max length: {max(token_lengths_after)}\")\n",
    "    print(f\"    Docs exceeding {max_length} tokens: {sum(1 for l in token_lengths_after if l > max_length)} ({sum(1 for l in token_lengths_after if l > max_length)/len(token_lengths_after)*100:.2f}%)\")\n",
    "    \n",
    "    # Optional: Create histogram plot\n",
    "    try:\n",
    "        plt.figure(figsize=(10, 6))\n",
    "        plt.hist([token_lengths_before, token_lengths_after], bins=30, \n",
    "                 label=['Before reduction', 'After reduction'], alpha=0.7)\n",
    "        plt.axvline(x=max_length, color='r', linestyle='--', label=f'Max length ({max_length})')\n",
    "        plt.title(f'Token Length Distribution Before and After {strategy}')\n",
    "        plt.xlabel('Number of Tokens')\n",
    "        plt.ylabel('Frequency')\n",
    "        plt.legend()\n",
    "        plt.savefig(f'token_reduction_{strategy}.png')\n",
    "        plt.close()\n",
    "        print(f\"  Distribution plot saved as token_reduction_{strategy}.png\")\n",
    "    except Exception as e:\n",
    "        print(f\"  Could not create distribution plot: {str(e)}\")\n",
    "    \n",
    "    return pd.Series(processed_texts, index=texts.index)\n",
    "\n",
    "def calculate_token_lengths(texts, tokenizer):\n",
    "    \"\"\"\n",
    "    Calculate the token length for each text sample using the specified tokenizer.\n",
    "    \n",
    "    Args:\n",
    "        texts (pd.Series): Series of input texts\n",
    "        tokenizer: Tokenizer to use for tokenization\n",
    "        \n",
    "    Returns:\n",
    "        pd.Series: Series containing the token length of each text\n",
    "    \"\"\"\n",
    "    token_lengths = []\n",
    "    for text in tqdm(texts, desc=\"Calculating token lengths\"):\n",
    "        tokens = tokenizer(str(text), truncation=False, return_tensors=\"pt\")\n",
    "        token_lengths.append(len(tokens['input_ids'][0]))\n",
    "    \n",
    "    return pd.Series(token_lengths, index=texts.index)\n",
    "\n",
    "def filter_outliers_by_token_length(texts, token_lengths, std_threshold=3.0, min_token_threshold=None):\n",
    "    \"\"\"\n",
    "    Filter out text samples with token lengths beyond a certain standard deviation threshold.\n",
    "    \n",
    "    Args:\n",
    "        texts (pd.Series): Series of input texts\n",
    "        token_lengths (pd.Series): Series containing token length of each text\n",
    "        std_threshold (float): Standard deviation threshold (default: 3.0)\n",
    "        min_token_threshold (int, optional): Minimum number of tokens required (default: None)\n",
    "        \n",
    "    Returns:\n",
    "        tuple: Filtered texts and boolean mask to apply to original data\n",
    "    \"\"\"\n",
    "    mean_length = token_lengths.mean()\n",
    "    std_length = token_lengths.std()\n",
    "    \n",
    "    # Print original token statistics\n",
    "    print(f\"Token length statistics before filtering:\")\n",
    "    print(f\"  Mean: {mean_length:.2f}, Std Dev: {std_length:.2f}\")\n",
    "    print(f\"  Min: {token_lengths.min()}, Max: {token_lengths.max()}\")\n",
    "    print(f\"  25th percentile: {token_lengths.quantile(0.25):.2f}\")\n",
    "    print(f\"  50th percentile (median): {token_lengths.quantile(0.5):.2f}\")\n",
    "    print(f\"  75th percentile: {token_lengths.quantile(0.75):.2f}\")\n",
    "    \n",
    "    # Original data size\n",
    "    original_size = len(texts)\n",
    "    \n",
    "    # Start with all True mask for the original data\n",
    "    final_mask = pd.Series(True, index=texts.index)\n",
    "    \n",
    "    # Step 1: Apply standard deviation filtering if std_threshold is provided\n",
    "    if std_threshold < float('inf'):\n",
    "        # Define upper and lower bounds\n",
    "        upper_bound = mean_length + std_threshold * std_length\n",
    "        lower_bound = mean_length - std_threshold * std_length\n",
    "        lower_bound = max(1, lower_bound)  # Ensure lower bound is at least 1\n",
    "        \n",
    "        # Create mask for samples within bounds\n",
    "        std_mask = (token_lengths >= lower_bound) & (token_lengths <= upper_bound)\n",
    "        \n",
    "        # Update final mask with standard deviation condition\n",
    "        final_mask = final_mask & std_mask\n",
    "        \n",
    "        std_removed = (~std_mask).sum()\n",
    "        print(f\"Applied {std_threshold} std dev threshold: ({lower_bound:.2f}, {upper_bound:.2f})\")\n",
    "        print(f\"Removed {std_removed} samples by std dev filtering ({std_removed/original_size*100:.2f}% of data)\")\n",
    "    \n",
    "    # Step 2: Apply minimum token threshold if specified\n",
    "    if min_token_threshold is not None:\n",
    "        # Create mask for minimum token threshold\n",
    "        min_token_mask = token_lengths >= min_token_threshold\n",
    "        \n",
    "        # Track how many would be removed by this filter\n",
    "        min_token_removed = (~min_token_mask).sum()\n",
    "        \n",
    "        # Track how many would be removed by this filter that weren't already filtered by std\n",
    "        additional_removed = ((~min_token_mask) & final_mask).sum()\n",
    "        \n",
    "        # Update final mask with minimum token threshold condition\n",
    "        final_mask = final_mask & min_token_mask\n",
    "        \n",
    "        print(f\"Applied minimum token threshold of {min_token_threshold}\")\n",
    "        print(f\"Removed {min_token_removed} samples below minimum token threshold ({min_token_removed/original_size*100:.2f}% of original data)\")\n",
    "        print(f\"Of which {additional_removed} weren't already filtered by std deviation ({additional_removed/original_size*100:.2f}% of original data)\")\n",
    "    \n",
    "    # Apply final mask to get filtered data\n",
    "    filtered_texts = texts[final_mask]\n",
    "    filtered_token_lengths = token_lengths[final_mask]\n",
    "    \n",
    "    # Calculate total removed\n",
    "    total_removed = (~final_mask).sum()\n",
    "    print(f\"Total removed: {total_removed} samples ({total_removed/original_size*100:.2f}% of original data)\")\n",
    "    print(f\"Remaining: {final_mask.sum()} samples ({final_mask.sum()/original_size*100:.2f}% of original data)\")\n",
    "\n",
    "    # Print final statistics\n",
    "    print(f\"\\nToken length statistics after all filtering:\")\n",
    "    print(f\"  Mean: {filtered_token_lengths.mean():.2f}, Std Dev: {filtered_token_lengths.std():.2f}\")\n",
    "    print(f\"  Min: {filtered_token_lengths.min()}, Max: {filtered_token_lengths.max()}\")\n",
    "    print(f\"  25th percentile: {filtered_token_lengths.quantile(0.25):.2f}\")\n",
    "    print(f\"  50th percentile (median): {filtered_token_lengths.quantile(0.5):.2f}\")\n",
    "    print(f\"  75th percentile: {filtered_token_lengths.quantile(0.75):.2f}\")\n",
    "    \n",
    "    return filtered_texts, final_mask\n",
    "\n",
    "class IssueDataset(Dataset):\n",
    "    \"\"\"\n",
    "    Dataset for processing text data and multi-label classification.\n",
    "\n",
    "    Args:\n",
    "        texts (pd.Series): Series of input texts.\n",
    "        labels (list or pd.Series): Corresponding labels (one-hot encoded for multi-label).\n",
    "        tokenizer (transformers.PreTrainedTokenizer): Tokenizer for converting text to tokens.\n",
    "        max_length (int): Maximum length of tokenized sequences (default is 512).\n",
    "    \"\"\"\n",
    "    def __init__(self, texts, labels, tokenizer, max_length=512):\n",
    "        self.texts = texts.reset_index(drop=True)\n",
    "        # Reset index for labels if it's a pandas Series.\n",
    "        if isinstance(labels, pd.Series):\n",
    "            self.labels = labels.reset_index(drop=True)\n",
    "        else:\n",
    "            self.labels = labels\n",
    "        self.tokenizer = tokenizer\n",
    "        self.max_length = max_length\n",
    "\n",
    "    def __len__(self):\n",
    "        return len(self.texts)\n",
    "    \n",
    "    def __getitem__(self, idx):\n",
    "        text = str(self.texts.iloc[idx])\n",
    "        encodings = self.tokenizer(\n",
    "            text,\n",
    "            truncation=True,\n",
    "            max_length=self.max_length,\n",
    "            padding='max_length',\n",
    "            return_tensors='pt'\n",
    "        )\n",
    "        \n",
    "        # For multi-label classification, ensure we're passing the full label array\n",
    "        # and not just a single value\n",
    "        label = self.labels[idx]\n",
    "        \n",
    "        # Make sure we're getting a proper multi-dimensional label array\n",
    "        # and not flattening it incorrectly\n",
    "        if isinstance(label, (list, np.ndarray)):\n",
    "            # Convert directly to tensor without modifying shape\n",
    "            label = torch.tensor(label, dtype=torch.float)\n",
    "        else:\n",
    "            # If it's not already an array-like structure, this is likely a mistake\n",
    "            # as we expect multi-label one-hot encoded data\n",
    "            raise ValueError(f\"Expected multi-dimensional label array but got {type(label)}\")\n",
    "        \n",
    "        return {\n",
    "            'input_ids': encodings['input_ids'].flatten(),\n",
    "            'attention_mask': encodings['attention_mask'].flatten(),\n",
    "            'labels': label\n",
    "        }\n",
    "    \n",
    "class DeBERTaClassifier(nn.Module):\n",
    "    \"\"\"\n",
    "    A classifier model based on DeBERTa for multi-label classification.\n",
    "    \n",
    "    This model uses a pre-trained DeBERTa model as the encoder and adds a \n",
    "    classification head on top with sigmoid activation for multi-label output.\n",
    "    \n",
    "    Args:\n",
    "        num_labels (int): Number of classes in the multi-label classification task.\n",
    "    \"\"\"\n",
    "    def __init__(self, num_labels):\n",
    "        super().__init__()\n",
    "        self.deberta = DebertaModel.from_pretrained('microsoft/deberta-base')\n",
    "        self.dropout = nn.Dropout(0.1)\n",
    "        self.classifier = nn.Linear(768, num_labels)\n",
    "        # Freeze all parameters in DeBERTa\n",
    "        for param in self.deberta.parameters():\n",
    "            param.requires_grad = False\n",
    "        # Unfreeze encoder parameters for fine-tuning\n",
    "        # Note: DeBERTa has a different architecture than BERT/RoBERTa\n",
    "        # We'll unfreeze the last 3 encoder layers\n",
    "        for layer in self.deberta.encoder.layer[-3:]:\n",
    "            for param in layer.parameters():\n",
    "                param.requires_grad = True\n",
    "\n",
    "    def forward(self, input_ids, attention_mask):\n",
    "        outputs = self.deberta(input_ids=input_ids, attention_mask=attention_mask)\n",
    "        # Unlike BERT, DeBERTa doesn't have a pooler, so we need to take the last hidden state\n",
    "        # and either use the [CLS] token (first token) or do mean pooling\n",
    "        # Here we'll use the [CLS] token (first token) representation\n",
    "        cls_output = outputs.last_hidden_state[:, 0, :]\n",
    "        cls_output = self.dropout(cls_output)\n",
    "        # Return raw logits for BCEWithLogitsLoss (sigmoid will be applied in the loss function)\n",
    "        return self.classifier(cls_output)\n",
    "    \n",
    "class EarlyStopping:\n",
    "    \"\"\"\n",
    "    Early stopping to stop training when the validation loss does not improve sufficiently.\n",
    "    \n",
    "    For multi-label classification, we consider a loss improvement when \n",
    "    the validation loss decreases by at least min_delta.\n",
    "    \n",
    "    Args:\n",
    "        patience (int): Number of epochs to wait for an improvement before stopping.\n",
    "        min_delta (float): Minimum decrease in the monitored loss to qualify as an improvement.\n",
    "    \"\"\"\n",
    "    def __init__(self, patience=3, min_delta=0):\n",
    "        self.patience = patience\n",
    "        self.min_delta = min_delta\n",
    "        self.counter = 0\n",
    "        self.best_loss = None\n",
    "        self.early_stop = False\n",
    "\n",
    "    def __call__(self, val_loss):\n",
    "        if self.best_loss is None:\n",
    "            self.best_loss = val_loss\n",
    "        elif val_loss < self.best_loss - self.min_delta:\n",
    "            self.best_loss = val_loss\n",
    "            self.counter = 0\n",
    "        else:\n",
    "            self.counter += 1\n",
    "            if self.counter >= self.patience:\n",
    "                self.early_stop = True\n",
    "\n",
    "    def reset(self):\n",
    "        \"\"\"Reset the early stopping state.\"\"\"\n",
    "        self.counter = 0\n",
    "        self.best_loss = None\n",
    "        self.early_stop = False\n",
    "\n",
    "\n",
    "def train_epoch(model, loader, criterion, optimizer, device, threshold=0.5, early_stopping=None):\n",
    "    \"\"\"\n",
    "    Train the model for one epoch, computing loss and metrics for multi-label classification.\n",
    "\n",
    "    Args:\n",
    "        model (nn.Module): The multi-label classification model.\n",
    "        loader (DataLoader): Training DataLoader.\n",
    "        criterion: Loss function (BCEWithLogitsLoss).\n",
    "        optimizer: Optimization algorithm.\n",
    "        device: Device to perform training (CPU or GPU).\n",
    "        threshold (float): Threshold for binary predictions (default is 0.5).\n",
    "        early_stopping (EarlyStopping, optional): Instance to monitor improvement in loss.\n",
    "\n",
    "    Returns:\n",
    "        tuple: Average loss, Hamming accuracy, and a flag indicating if early stopping was triggered.\n",
    "    \"\"\"\n",
    "    model.train()\n",
    "    total_loss = 0\n",
    "    all_preds = []\n",
    "    all_labels = []\n",
    "    \n",
    "    for batch in tqdm(loader, desc=\"Training\"):\n",
    "        input_ids = batch['input_ids'].to(device)\n",
    "        attention_mask = batch['attention_mask'].to(device)\n",
    "        labels = batch['labels'].to(device)\n",
    "        \n",
    "        optimizer.zero_grad()\n",
    "        outputs = model(input_ids, attention_mask)\n",
    "        loss = criterion(outputs, labels)\n",
    "        loss.backward()\n",
    "        optimizer.step()\n",
    "        \n",
    "        total_loss += loss.item()\n",
    "        # Apply sigmoid and threshold for predictions\n",
    "        predictions = torch.sigmoid(outputs) >= threshold\n",
    "        all_preds.append(predictions.cpu().detach().numpy())\n",
    "        all_labels.append(labels.cpu().detach().numpy())\n",
    "    \n",
    "    # Calculate metrics for multi-label classification\n",
    "    all_preds = np.vstack(all_preds)\n",
    "    all_labels = np.vstack(all_labels)\n",
    "    \n",
    "    # Use subset accuracy (exact match) for a strict measure\n",
    "    exact_match = (all_preds == all_labels).all(axis=1).mean()\n",
    "    \n",
    "    avg_loss = total_loss / len(loader)\n",
    "    \n",
    "    if early_stopping:\n",
    "        early_stopping(avg_loss)\n",
    "        if early_stopping.early_stop:\n",
    "            print(\"Early stopping triggered\")\n",
    "            return avg_loss, exact_match, True\n",
    "            \n",
    "    return avg_loss, exact_match, False\n",
    "    \n",
    "\n",
    "def validate(model, loader, criterion, device, threshold=0.5):\n",
    "    \"\"\"\n",
    "    Evaluate the model on provided validation data for multi-label classification.\n",
    "\n",
    "    Args:\n",
    "        model (nn.Module): The multi-label classification model.\n",
    "        loader (DataLoader): Validation DataLoader.\n",
    "        criterion: Loss function (BCEWithLogitsLoss).\n",
    "        device: Device to perform evaluation.\n",
    "        threshold (float): Threshold for binary predictions (default is 0.5).\n",
    "\n",
    "    Returns:\n",
    "        tuple: Average loss, various accuracy metrics, precision, recall, and F1 score.\n",
    "    \"\"\"\n",
    "    model.eval()\n",
    "    total_loss = 0\n",
    "    all_preds = []\n",
    "    all_labels = []\n",
    "    \n",
    "    with torch.no_grad():\n",
    "        for batch in loader:\n",
    "            input_ids = batch['input_ids'].to(device)\n",
    "            attention_mask = batch['attention_mask'].to(device)\n",
    "            labels = batch['labels'].to(device)\n",
    "            \n",
    "            outputs = model(input_ids, attention_mask)\n",
    "            loss = criterion(outputs, labels)\n",
    "            total_loss += loss.item()\n",
    "            \n",
    "            # Apply sigmoid and threshold for predictions\n",
    "            predictions = (torch.sigmoid(outputs) >= threshold).float()\n",
    "            all_preds.append(predictions.cpu().numpy())\n",
    "            all_labels.append(labels.cpu().numpy())\n",
    "    \n",
    "    all_preds = np.vstack(all_preds)\n",
    "    all_labels = np.vstack(all_labels)\n",
    "    \n",
    "    # Calculate different multi-label metrics\n",
    "    \n",
    "    # 1. Exact Match / Subset Accuracy (all labels must be correct)\n",
    "    exact_match = (all_preds == all_labels).all(axis=1).mean()\n",
    "    \n",
    "    # 2. Partial Match Accuracy (only count correctly predicted 1s, ignore 0s)\n",
    "    # Calculate true positives per sample\n",
    "    true_positives = np.logical_and(all_preds == 1, all_labels == 1).sum(axis=1)\n",
    "    # Calculate total actual positives per sample\n",
    "    total_positives = (all_labels == 1).sum(axis=1)\n",
    "    # Handle division by zero - samples with no positive labels get a score of 0\n",
    "    partial_match = np.zeros_like(true_positives, dtype=float)\n",
    "    # Only calculate ratio for samples with at least one positive label\n",
    "    mask = total_positives > 0\n",
    "    partial_match[mask] = true_positives[mask] / total_positives[mask]\n",
    "    partial_match_accuracy = partial_match.mean()\n",
    "    \n",
    "    # 3. Jaccard Similarity (intersection over union)\n",
    "    def jaccard_score(y_true, y_pred):\n",
    "        intersection = np.logical_and(y_true, y_pred).sum(axis=1)\n",
    "        union = np.logical_or(y_true, y_pred).sum(axis=1)\n",
    "        # Create a float array for output to avoid type casting error\n",
    "        result = np.zeros_like(intersection, dtype=float)\n",
    "        # Avoid division by zero\n",
    "        np.divide(intersection, union, out=result, where=union!=0)\n",
    "        return np.mean(result)\n",
    "    \n",
    "    jaccard_sim = jaccard_score(all_labels.astype(bool), all_preds.astype(bool))\n",
    "    \n",
    "    # Add Hamming metric - this is the same as partial_match_accuracy\n",
    "    hamming_sim = partial_match_accuracy\n",
    "    \n",
    "    # Sample-based metrics - Each sample contributes equally regardless of number of labels\n",
    "    precision = precision_score(all_labels, all_preds, average='samples', zero_division=0)\n",
    "    recall = recall_score(all_labels, all_preds, average='samples', zero_division=0)\n",
    "    f1 = f1_score(all_labels, all_preds, average='samples', zero_division=0)\n",
    "    \n",
    "    return (total_loss / len(loader), \n",
    "            {\"exact_match\": exact_match, \n",
    "             \"partial_match\": partial_match_accuracy,\n",
    "             \"hamming\": hamming_sim,\n",
    "             \"jaccard\": jaccard_sim}, \n",
    "            precision, recall, f1)\n",
    "\n",
    "def plot_multilabel_confusion_matrix(y_true, y_pred, class_names):\n",
    "    \"\"\"\n",
    "    Plot confusion matrices for each label in a multi-label classification problem.\n",
    "    \n",
    "    Args:\n",
    "        y_true (numpy.ndarray): True binary labels.\n",
    "        y_pred (numpy.ndarray): Predicted binary labels.\n",
    "        class_names (list): Names of the classes/labels.\n",
    "    \"\"\"\n",
    "    confusion_matrices = multilabel_confusion_matrix(y_true, y_pred)\n",
    "    \n",
    "    num_classes = len(class_names)\n",
    "    fig, axes = plt.subplots(nrows=(num_classes + 3) // 4, ncols=min(4, num_classes), \n",
    "                             figsize=(20, 5 * ((num_classes + 3) // 4)))\n",
    "    if num_classes == 1:\n",
    "        axes = np.array([axes])  # Make it indexable for single class\n",
    "    axes = axes.flatten()\n",
    "    \n",
    "    for i, matrix in enumerate(confusion_matrices):\n",
    "        if i < num_classes:  # Ensure we don't exceed the number of classes\n",
    "            ax = axes[i]\n",
    "            sns.heatmap(matrix, annot=True, fmt='d', cmap='Blues', ax=ax)\n",
    "            ax.set_title(f'Label: {class_names[i]}')\n",
    "            ax.set_xlabel('Predicted')\n",
    "            ax.set_ylabel('True')\n",
    "            ax.set_xticklabels(['Negative', 'Positive'])\n",
    "            ax.set_yticklabels(['Negative', 'Positive'])\n",
    "    \n",
    "    # Hide any unused subplots\n",
    "    for i in range(num_classes, len(axes)):\n",
    "        fig.delaxes(axes[i])\n",
    "        \n",
    "    plt.tight_layout()\n",
    "    return fig\n",
    "\n",
    "def prepare_data(df, text_column='all_text', min_label_freq=0, max_label_len=100, min_label_comb_freq=0, tokenizer=None, token_std_threshold=None, min_token_threshold=None):\n",
    "    \"\"\"\n",
    "    Filter out infrequent labels, samples with too many labels, and token length outliers.\n",
    "    \n",
    "    Args:\n",
    "        df (pd.DataFrame): DataFrame with text column and 'labels'\n",
    "        text_column (str): Name of the column containing the text data to use\n",
    "        min_label_freq (int): Minimum frequency for a label to be considered frequent.\n",
    "        max_label_len (int): Maximum number of labels per sample.\n",
    "        min_label_comb_freq (int): Minimum frequency for a label combination to be kept.\n",
    "        tokenizer: Tokenizer to use for token length calculation (required if token_std_threshold is provided)\n",
    "        token_std_threshold (float, optional): Standard deviation threshold for filtering token length outliers.\n",
    "            If None, no token length filtering is applied. Common values are 2.0 or 3.0.\n",
    "        min_token_threshold (int, optional): Minimum number of tokens required for a sample.\n",
    "            If None, no minimum token threshold is applied.\n",
    "\n",
    "    Returns:\n",
    "        tuple: Filtered texts and labels.\n",
    "    \"\"\"\n",
    "    # Print initial dataset size\n",
    "    initial_size = len(df)\n",
    "    print(f\"\\n=== DATA PREPROCESSING STATISTICS ===\")\n",
    "    print(f\"Initial dataset size: {initial_size}\")\n",
    "    \n",
    "    # Only keep text column and 'labels' columns\n",
    "    if text_column in df.columns:\n",
    "        df = df[[text_column, 'labels']]\n",
    "        # Filter out rows with 'nan' text\n",
    "        before_nan_filter = len(df)\n",
    "        df = df[~df[text_column].apply(lambda x: x.startswith('nan') if isinstance(x, str) else False)]\n",
    "        nan_removed = before_nan_filter - len(df)\n",
    "        if nan_removed > 0:\n",
    "            print(f\"Step 1: Removed {nan_removed} rows with 'nan' text ({nan_removed/before_nan_filter*100:.2f}% of data)\")\n",
    "    else:\n",
    "        raise ValueError(f\"Text column '{text_column}' not found in the DataFrame. Available columns: {df.columns.tolist()}\")\n",
    "    \n",
    "    # Drop rows with missing labels\n",
    "    before_na_drop = len(df)\n",
    "    df = df.dropna()\n",
    "    na_removed = before_na_drop - len(df)\n",
    "    if na_removed > 0:\n",
    "        print(f\"Step 2: Removed {na_removed} rows with missing labels ({na_removed/before_na_drop*100:.2f}% of data)\")\n",
    "    \n",
    "    # Extract issue texts and labels\n",
    "    texts = df[text_column]\n",
    "    labels = df['labels'].apply(lambda x: x if isinstance(x, list) else [])  # Ensure labels are lists\n",
    "    current_size = len(texts)\n",
    "    print(f\"Dataset size after basic cleaning: {current_size} ({current_size/initial_size*100:.2f}% of original data)\")\n",
    "\n",
    "    # Filter by token length if requested\n",
    "    if (token_std_threshold is not None or min_token_threshold is not None) and tokenizer is not None:\n",
    "        print(f\"\\nStep 3: Filtering by token length...\")\n",
    "        if token_std_threshold is not None:\n",
    "            print(f\"Using {token_std_threshold} standard deviation threshold\")\n",
    "        if min_token_threshold is not None:\n",
    "            print(f\"Using minimum token threshold of {min_token_threshold}\")\n",
    "        \n",
    "        # Calculate token lengths\n",
    "        token_lengths = calculate_token_lengths(texts, tokenizer)\n",
    "        \n",
    "        # Apply token length filtering\n",
    "        before_token_filter = len(texts)\n",
    "        filtered_texts, token_mask = filter_outliers_by_token_length(\n",
    "            texts, \n",
    "            token_lengths, \n",
    "            std_threshold=token_std_threshold if token_std_threshold is not None else float('inf'),\n",
    "            min_token_threshold=min_token_threshold\n",
    "        )\n",
    "        # Apply same filter to labels\n",
    "        filtered_labels = labels[token_mask].reset_index(drop=True)\n",
    "        token_removed = before_token_filter - len(filtered_texts)\n",
    "        print(f\"Removed {token_removed} samples by token length filtering ({token_removed/before_token_filter*100:.2f}% of data)\")\n",
    "        print(f\"Texts after token length filtering: {len(filtered_texts)} ({len(filtered_texts)/initial_size*100:.2f}% of original data)\")\n",
    "\n",
    "    # Get labels count distribution\n",
    "    label_distribution = Counter([label for labels in labels for label in labels])\n",
    "    total_labels_before = len(label_distribution)\n",
    "    print(f\"\\nStep 4: Filtering infrequent labels (min frequency: {min_label_freq})\")\n",
    "    print(f\"Total unique labels before filtering: {total_labels_before}\")\n",
    "\n",
    "    # Labels to keep based on frequency\n",
    "    frequent_labels = [label for label, count in label_distribution.items() if count >= min_label_freq]\n",
    "    labels_removed = total_labels_before - len(frequent_labels)\n",
    "    print(f\"Removed {labels_removed} infrequent labels ({labels_removed/total_labels_before*100:.2f}% of labels)\")\n",
    "    print(f\"Number of labels remaining: {len(frequent_labels)} ({len(frequent_labels)/total_labels_before*100:.2f}% of labels)\")\n",
    "\n",
    "    # Filter out infrequent labels\n",
    "    before_label_filter = len(labels)\n",
    "    filtered_labels = labels.apply(lambda x: [label for label in x if label in frequent_labels])\n",
    "    \n",
    "    # Count samples that have no labels after filtering\n",
    "    empty_labels_mask = filtered_labels.apply(len) > 0\n",
    "    empty_labels_count = (~empty_labels_mask).sum()\n",
    "    if empty_labels_count > 0:\n",
    "        print(f\"Warning: {empty_labels_count} samples ({empty_labels_count/before_label_filter*100:.2f}%) now have no labels due to label frequency filtering\")\n",
    "        # Remove samples with no labels\n",
    "        filtered_labels = filtered_labels[empty_labels_mask]\n",
    "        texts = texts[empty_labels_mask]\n",
    "        print(f\"Removed {empty_labels_count} samples with no labels\")\n",
    "    \n",
    "    print(f\"Samples remaining after label filtering: {len(filtered_labels)} ({len(filtered_labels)/before_label_filter*100:.2f}% of data)\")\n",
    "\n",
    "    # Get label combinations distribution\n",
    "    label_combinations = Counter([tuple(sorted(labels)) for labels in filtered_labels])\n",
    "    total_combinations_before = len(label_combinations)\n",
    "    \n",
    "    print(f\"\\nStep 5: Filtering infrequent label combinations (min frequency: {min_label_comb_freq})\")\n",
    "    print(f\"Total unique label combinations before filtering: {total_combinations_before}\")\n",
    "    \n",
    "    frequent_combinations = {labels: count for labels, count in label_combinations.items() if count >= min_label_comb_freq}\n",
    "    combinations_removed = total_combinations_before - len(frequent_combinations)\n",
    "    print(f\"Removed {combinations_removed} infrequent label combinations ({combinations_removed/total_combinations_before*100:.2f}% of combinations)\")\n",
    "    print(f\"Number of label combinations remaining: {len(frequent_combinations)} ({len(frequent_combinations)/total_combinations_before*100:.2f}% of combinations)\")\n",
    "    \n",
    "    # Create mask for samples with frequent label combinations (if min_label_comb_freq > 0)\n",
    "    if min_label_comb_freq > 0:\n",
    "        before_comb_filter = len(filtered_labels)\n",
    "        comb_mask = filtered_labels.apply(lambda x: tuple(sorted(x)) in frequent_combinations)\n",
    "        samples_removed_by_comb = before_comb_filter - comb_mask.sum()\n",
    "        print(f\"Removed {samples_removed_by_comb} samples with infrequent label combinations ({samples_removed_by_comb/before_comb_filter*100:.2f}% of data)\")\n",
    "        print(f\"Samples remaining after combination filtering: {comb_mask.sum()} ({comb_mask.sum()/before_comb_filter*100:.2f}% of data)\")\n",
    "    else:\n",
    "        comb_mask = pd.Series([True] * len(filtered_labels))\n",
    "    \n",
    "    # Filter by label length\n",
    "    print(f\"\\nStep 6: Filtering samples with too many labels (max labels per sample: {max_label_len})\")\n",
    "    before_length_filter = len(filtered_labels)\n",
    "    label_length = filtered_labels.apply(len)\n",
    "    length_mask = (label_length > 0) & (label_length <= max_label_len)\n",
    "    samples_removed_by_length = before_length_filter - length_mask.sum()\n",
    "    print(f\"Removed {samples_removed_by_length} samples with too many or zero labels ({samples_removed_by_length/before_length_filter*100:.2f}% of data)\")\n",
    "    \n",
    "    # Combine both masks\n",
    "    final_mask = comb_mask & length_mask\n",
    "    \n",
    "    # Now get the final filtered texts and labels\n",
    "    texts = texts[final_mask].reset_index(drop=True)\n",
    "    filtered_labels = filtered_labels[final_mask].reset_index(drop=True)\n",
    "    \n",
    "    print(f\"\\n=== FINAL PREPROCESSING RESULTS ===\")\n",
    "    print(f\"Original dataset size: {initial_size}\")\n",
    "    print(f\"Final dataset size: {len(filtered_labels)} ({len(filtered_labels)/initial_size*100:.2f}% of original data)\")\n",
    "    print(f\"Total samples removed: {initial_size - len(filtered_labels)} ({(initial_size - len(filtered_labels))/initial_size*100:.2f}% of original data)\")\n",
    "    \n",
    "    return texts, filtered_labels\n",
    "\n",
    "# Add hybrid feature selection function\n",
    "def hybrid_feature_selection(texts, labels_encoded, mlb, top_k_filter=20, top_k_final=10, vectorizer=None, random_seed=42, wrapper_method='rf'):\n",
    "    \"\"\"\n",
    "    Perform hybrid feature selection using both filter and wrapper methods.\n",
    "    \n",
    "    Args:\n",
    "        texts (pd.Series): Series of text data\n",
    "        labels_encoded (np.array): One-hot encoded labels\n",
    "        mlb (MultiLabelBinarizer): Label encoder used for transforming labels\n",
    "        top_k_filter (int): Number of labels to retain after filter stage\n",
    "        top_k_final (int): Final number of labels to select\n",
    "        vectorizer (object): Text vectorizer with fit_transform method. If None, uses simple word count\n",
    "        random_seed (int): Random seed for reproducibility\n",
    "        wrapper_method (str): Wrapper method to use ('rf' for Random Forest or 'lr' for Logistic Regression)\n",
    "        \n",
    "    Returns:\n",
    "        tuple: Selected indices, selected label names, and feature importance scores\n",
    "    \"\"\"\n",
    "    print(f\"Starting hybrid feature selection to select {top_k_final} out of {labels_encoded.shape[1]} labels...\")\n",
    "    \n",
    "    # If no vectorizer provided, create a simple one using sklearn's CountVectorizer\n",
    "    if vectorizer is None:\n",
    "        from sklearn.feature_extraction.text import CountVectorizer\n",
    "        vectorizer = CountVectorizer(max_features=5000)\n",
    "    \n",
    "    # Transform texts to feature vectors\n",
    "    print(\"Vectorizing text data...\")\n",
    "    X_vec = vectorizer.fit_transform(texts)\n",
    "    \n",
    "    # STEP 1: Filter Method - Use chi-square test and mutual information\n",
    "    print(\"Applying filter methods...\")\n",
    "    \n",
    "    # Store scores from multiple filter methods\n",
    "    feature_scores = np.zeros(labels_encoded.shape[1])\n",
    "    \n",
    "    # Chi-square test for each label\n",
    "    for i in range(labels_encoded.shape[1]):\n",
    "        chi_scores = chi2(X_vec, labels_encoded[:, i])\n",
    "        feature_scores[i] += chi_scores[0].mean()  # Add chi-square statistic\n",
    "    \n",
    "    # Mutual information for each label\n",
    "    for i in range(labels_encoded.shape[1]):\n",
    "        mi_score = mutual_info_classif(X_vec, labels_encoded[:, i], random_state=random_seed)\n",
    "        feature_scores[i] += mi_score.mean() * 10  # Scale and add MI score\n",
    "    \n",
    "    # Get top-k features from filter methods\n",
    "    filter_selected_indices = np.argsort(-feature_scores)[:top_k_filter]\n",
    "    filter_selected_labels = np.array(mlb.classes_)[filter_selected_indices]\n",
    "    \n",
    "    print(f\"Filter stage selected {len(filter_selected_indices)} labels\")\n",
    "    \n",
    "    # STEP 2: Wrapper Method - Use specified model to evaluate feature subsets\n",
    "    print(f\"Applying wrapper method using {wrapper_method.upper()}...\")\n",
    "    \n",
    "    # Initialize the appropriate model based on wrapper_method\n",
    "    if wrapper_method.lower() == 'rf':\n",
    "        model = RandomForestClassifier(n_estimators=100, random_state=random_seed, n_jobs=-1)\n",
    "    elif wrapper_method.lower() == 'lr':\n",
    "        model = LogisticRegression(random_state=random_seed, max_iter=1000)\n",
    "    else:\n",
    "        raise ValueError(f\"Unsupported wrapper method: {wrapper_method}. Use 'rf' or 'lr'.\")\n",
    "    \n",
    "    X_filtered = labels_encoded[:, filter_selected_indices]\n",
    "    \n",
    "    # For wrapper method, we'll create a matrix where each sample is label presence/absence\n",
    "    # and the target is other labels - a proxy for how well each label predicts others\n",
    "    importance_scores = np.zeros(len(filter_selected_indices))\n",
    "    \n",
    "    # For each label, train a model to predict it using the other labels\n",
    "    for i in tqdm(range(len(filter_selected_indices)), desc=\"Wrapper evaluation\"):\n",
    "        # Current target label\n",
    "        y = X_filtered[:, i]\n",
    "        \n",
    "        # Features (other labels)\n",
    "        X_others = np.delete(X_filtered, i, axis=1)\n",
    "        \n",
    "        # Train model\n",
    "        model.fit(X_others, y)\n",
    "        \n",
    "        # Score based on model performance\n",
    "        accuracy = model.score(X_others, y)\n",
    "        importance_scores[i] = accuracy\n",
    "    \n",
    "    # STEP 3: Combine scores to select final features\n",
    "    final_scores = 0.6 * feature_scores[filter_selected_indices] + 0.4 * importance_scores\n",
    "    final_selected_indices = filter_selected_indices[np.argsort(-final_scores)[:top_k_final]]\n",
    "    final_selected_labels = np.array(mlb.classes_)[final_selected_indices]\n",
    "    \n",
    "    print(f\"Final selection: {len(final_selected_labels)} labels\")\n",
    "    print(\"Selected labels:\", final_selected_labels)\n",
    "    \n",
    "    return final_selected_indices, final_selected_labels, final_scores\n",
    "\n",
    "def main(args):\n",
    "    \"\"\"\n",
    "    Main function to run the multi-label classification pipeline with DeBERTa.\n",
    "    This function loads both training and testing data from CSV files, preprocesses them, \n",
    "    trains the model, and evaluates performance.\n",
    "    \"\"\"\n",
    "    # Set random seeds for reproducibility\n",
    "    torch.manual_seed(42)\n",
    "    np.random.seed(42)\n",
    "    \n",
    "    # Check for GPU availability\n",
    "    n_gpus, gpu_ids = get_available_gpus()\n",
    "    if n_gpus >= 2:\n",
    "        print(f\"Using {n_gpus} GPUs: {gpu_ids}\")\n",
    "        device = torch.device(\"cuda\")\n",
    "        use_multi_gpu = True\n",
    "    elif n_gpus == 1:\n",
    "        print(\"Using 1 GPU\")\n",
    "        device = torch.device(\"cuda\")\n",
    "        use_multi_gpu = False\n",
    "    else:\n",
    "        print(\"No GPUs available, using CPU\")\n",
    "        device = torch.device(\"cpu\")\n",
    "        use_multi_gpu = False\n",
    "    \n",
    "    # Make results directory if it doesn't exist\n",
    "    results_dir = args.results_dir\n",
    "    os.makedirs(results_dir, exist_ok=True)\n",
    "    \n",
    "    # Create a timestamped directory for this run\n",
    "    timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")\n",
    "    run_dir = os.path.join(results_dir, f\"run_{timestamp}_{args.text_column}\")\n",
    "    os.makedirs(run_dir, exist_ok=True)\n",
    "    \n",
    "    # Initialize tokenizer early\n",
    "    print(\"Loading tokenizer...\")\n",
    "    tokenizer = DebertaTokenizer.from_pretrained('microsoft/deberta-base')\n",
    "\n",
    "    # Determine token standard deviation threshold from argument\n",
    "    token_std_threshold = None\n",
    "    if args.token_length_filter == '2std':\n",
    "        token_std_threshold = 2.0\n",
    "    elif args.token_length_filter == '3std':\n",
    "        token_std_threshold = 3.0\n",
    "\n",
    "    # Load training data\n",
    "    print(f\"Loading training data from {args.train_data_path}...\")\n",
    "    train_df = pd.read_csv(args.train_data_path)\n",
    "    \n",
    "    # Convert string representation of list to actual list for labels column\n",
    "    if 'labels' in train_df.columns:\n",
    "        try:\n",
    "            # Safe evaluation for string representations of lists\n",
    "            train_df['labels'] = train_df['labels'].apply(\n",
    "                lambda x: eval(x) if isinstance(x, str) and x.strip() not in ('', 'nan', 'None', 'NaN') else \n",
    "                          ([] if pd.isna(x) else x)\n",
    "            )\n",
    "        except Exception as e:\n",
    "            print(f\"Error processing training labels: {e}\")\n",
    "            print(\"First few labels for inspection:\", train_df['labels'].head())\n",
    "            raise\n",
    "    else:\n",
    "        raise ValueError(f\"'labels' column not found in training data. Available columns: {train_df.columns.tolist()}\")\n",
    "    \n",
    "    print(f\"Loading testing data from {args.test_data_path}...\")\n",
    "    test_df = pd.read_csv(args.test_data_path)\n",
    "    \n",
    "    # Convert string representation of list to actual list for labels column\n",
    "    if 'labels' in test_df.columns:\n",
    "        try:\n",
    "            # Safe evaluation for string representations of lists\n",
    "            test_df['labels'] = test_df['labels'].apply(\n",
    "                lambda x: eval(x) if isinstance(x, str) and x.strip() not in ('', 'nan', 'None', 'NaN') else \n",
    "                          ([] if pd.isna(x) else x)\n",
    "            )\n",
    "        except Exception as e:\n",
    "            print(f\"Error processing testing labels: {e}\")\n",
    "            print(\"First few labels for inspection:\", test_df['labels'].head())\n",
    "            raise\n",
    "    else:\n",
    "        raise ValueError(f\"'labels' column not found in testing data. Available columns: {test_df.columns.tolist()}\")\n",
    "    \n",
    "    # Check if the text column exists in both datasets\n",
    "    if args.text_column not in train_df.columns or args.text_column not in test_df.columns:\n",
    "        available_columns_train = [col for col in train_df.columns if col.startswith('all_text')]\n",
    "        available_columns_test = [col for col in test_df.columns if col.startswith('all_text')]\n",
    "        common_columns = list(set(available_columns_train) & set(available_columns_test))\n",
    "        \n",
    "        print(f\"Text column '{args.text_column}' not found in both datasets.\")\n",
    "        print(f\"Common text columns: {common_columns}\")\n",
    "        \n",
    "        if len(common_columns) == 0:\n",
    "            raise ValueError(\"No common text columns found in both datasets\")\n",
    "        \n",
    "        args.text_column = common_columns[0]\n",
    "        print(f\"Using '{args.text_column}' instead\")\n",
    "    \n",
    "    # Process training data\n",
    "    print(\"\\n=== PROCESSING TRAINING DATA ===\")\n",
    "    \n",
    "    # Extract issue texts and labels from training data\n",
    "    train_texts = train_df[args.text_column]\n",
    "    train_labels = train_df['labels'].apply(lambda x: x if isinstance(x, list) else [])  # Ensure labels are lists\n",
    "    \n",
    "    # Apply token length filtering to training data if requested\n",
    "    if token_std_threshold is not None or args.min_token_threshold is not None:\n",
    "        print(f\"\\nApplying token length filtering to training data...\")\n",
    "        token_lengths = calculate_token_lengths(train_texts, tokenizer)\n",
    "        \n",
    "        # Filter by standard deviation, then by min threshold (in sequence)\n",
    "        filtered_train_texts, token_mask = filter_outliers_by_token_length(\n",
    "            train_texts, \n",
    "            token_lengths, \n",
    "            std_threshold=token_std_threshold if token_std_threshold is not None else float('inf'),\n",
    "            min_token_threshold=args.min_token_threshold\n",
    "        )\n",
    "        \n",
    "        # Apply same filter to labels and dataframe\n",
    "        filtered_train_labels = train_labels[token_mask]\n",
    "        filtered_train_df = train_df[token_mask]\n",
    "        \n",
    "        # Reset indices for further processing\n",
    "        train_texts = filtered_train_texts.reset_index(drop=True)\n",
    "        train_labels = filtered_train_labels.reset_index(drop=True)\n",
    "        filtered_train_df = filtered_train_df.reset_index(drop=True)\n",
    "    else:\n",
    "        filtered_train_df = train_df\n",
    "    \n",
    "    # Apply token reduction to training data if requested\n",
    "    if args.token_reduction_strategy:\n",
    "        print(f\"\\nApplying token reduction strategy to training data: {args.token_reduction_strategy}\")\n",
    "        train_texts = process_with_token_reduction(\n",
    "            train_texts, \n",
    "            tokenizer, \n",
    "            max_length=args.max_length, \n",
    "            strategy=args.token_reduction_strategy\n",
    "        )\n",
    "        # Update filtered_train_df with the reduced texts\n",
    "        filtered_train_df[args.text_column] = train_texts\n",
    "    \n",
    "    # Use prepare_data to filter and prepare training data\n",
    "    train_texts, train_filtered_labels = prepare_data(\n",
    "        filtered_train_df,\n",
    "        text_column=args.text_column,\n",
    "        min_label_freq=args.min_label_freq, \n",
    "        max_label_len=args.max_label_len, \n",
    "        min_label_comb_freq=args.min_label_comb_freq,\n",
    "        tokenizer=tokenizer,\n",
    "        token_std_threshold=None,  # Skip token filtering as we've done it\n",
    "        min_token_threshold=None   # Skip token threshold as we've done it\n",
    "    )\n",
    "    \n",
    "    # Print training dataset statistics\n",
    "    print(\"\\n=== TRAINING DATASET STATISTICS ===\")\n",
    "    print(f\"Initial training dataset size: {len(train_df)}\")\n",
    "    print(f\"Final training dataset size: {len(train_texts)}\")\n",
    "    print(f\"Total samples removed: {len(train_df) - len(train_texts)} ({(len(train_df) - len(train_texts))/len(train_df)*100:.2f}% of original training data)\")\n",
    "    \n",
    "    # Count the number of labels distribution in training data\n",
    "    train_label_distribution = Counter([label for labels in train_filtered_labels for label in labels])\n",
    "    print('\\nTraining Label Distribution:')\n",
    "    for i, (label, count) in enumerate(sorted(train_label_distribution.items(), key=lambda x: x[1], reverse=True)):\n",
    "        print(f'{i}. {label}: {count}')\n",
    "    \n",
    "    # Process testing data\n",
    "    print(\"\\n=== PROCESSING TESTING DATA ===\")\n",
    "    \n",
    "    # Extract issue texts and labels from testing data\n",
    "    test_texts = test_df[args.text_column]\n",
    "    test_labels = test_df['labels'].apply(lambda x: x if isinstance(x, list) else [])  # Ensure labels are lists\n",
    "    \n",
    "    # Apply token length filtering to testing data if requested\n",
    "    if token_std_threshold is not None or args.min_token_threshold is not None:\n",
    "        print(f\"\\nApplying token length filtering to testing data...\")\n",
    "        token_lengths = calculate_token_lengths(test_texts, tokenizer)\n",
    "        \n",
    "        # Use the same filtering parameters as for training data\n",
    "        filtered_test_texts, token_mask = filter_outliers_by_token_length(\n",
    "            test_texts, \n",
    "            token_lengths, \n",
    "            std_threshold=token_std_threshold if token_std_threshold is not None else float('inf'),\n",
    "            min_token_threshold=args.min_token_threshold\n",
    "        )\n",
    "        \n",
    "        # Apply same filter to labels and dataframe\n",
    "        filtered_test_labels = test_labels[token_mask]\n",
    "        filtered_test_df = test_df[token_mask]\n",
    "        \n",
    "        # Reset indices for further processing\n",
    "        test_texts = filtered_test_texts.reset_index(drop=True)\n",
    "        test_labels = filtered_test_labels.reset_index(drop=True)\n",
    "        filtered_test_df = filtered_test_df.reset_index(drop=True)\n",
    "    else:\n",
    "        filtered_test_df = test_df\n",
    "    \n",
    "    # Apply token reduction to testing data if requested\n",
    "    if args.token_reduction_strategy:\n",
    "        print(f\"\\nApplying token reduction strategy to testing data: {args.token_reduction_strategy}\")\n",
    "        test_texts = process_with_token_reduction(\n",
    "            test_texts, \n",
    "            tokenizer, \n",
    "            max_length=args.max_length, \n",
    "            strategy=args.token_reduction_strategy\n",
    "        )\n",
    "        # Update filtered_test_df with the reduced texts\n",
    "        filtered_test_df[args.text_column] = test_texts\n",
    "    \n",
    "    # Use prepare_data to filter and prepare testing data\n",
    "    # Note: We use the same min_label_freq, max_label_len etc. as training data for consistency\n",
    "    test_texts, test_filtered_labels = prepare_data(\n",
    "        filtered_test_df,\n",
    "        text_column=args.text_column,\n",
    "        min_label_freq=args.min_label_freq, \n",
    "        max_label_len=args.max_label_len, \n",
    "        min_label_comb_freq=args.min_label_comb_freq,\n",
    "        tokenizer=tokenizer,\n",
    "        token_std_threshold=None,  # Skip token filtering as we've done it\n",
    "        min_token_threshold=None   # Skip token threshold as we've done it\n",
    "    )\n",
    "    \n",
    "    # Print testing dataset statistics\n",
    "    print(\"\\n=== TESTING DATASET STATISTICS ===\")\n",
    "    print(f\"Initial testing dataset size: {len(test_df)}\")\n",
    "    print(f\"Final testing dataset size: {len(test_texts)}\")\n",
    "    print(f\"Total samples removed: {len(test_df) - len(test_texts)} ({(len(test_df) - len(test_texts))/len(test_df)*100:.2f}% of original testing data)\")\n",
    "    \n",
    "    # Save preprocessing metadata\n",
    "    preprocessing_metadata = {\n",
    "        'data_format': 'csv',\n",
    "        'data_paths': {\n",
    "            'train': args.train_data_path,\n",
    "            'test': args.test_data_path\n",
    "        },\n",
    "        'initial_dataset_sizes': {\n",
    "            'train': len(train_df),\n",
    "            'test': len(test_df)\n",
    "        },\n",
    "        'final_dataset_sizes': {\n",
    "            'train': len(train_texts),\n",
    "            'test': len(test_texts)\n",
    "        },\n",
    "        'token_reduction': {\n",
    "            'applied': args.token_reduction_strategy is not None,\n",
    "            'strategy': args.token_reduction_strategy if args.token_reduction_strategy else None,\n",
    "            'max_length': args.max_length\n",
    "        },\n",
    "        'token_length_filtering': {\n",
    "            'applied': token_std_threshold is not None,\n",
    "            'threshold': token_std_threshold\n",
    "        },\n",
    "        'label_filtering': {\n",
    "            'min_label_freq': args.min_label_freq,\n",
    "            'max_label_len': args.max_label_len,\n",
    "            'min_label_comb_freq': args.min_label_comb_freq\n",
    "        },\n",
    "        'min_token_threshold': {\n",
    "            'applied': args.min_token_threshold is not None,\n",
    "            'threshold': args.min_token_threshold\n",
    "        }\n",
    "    }\n",
    "    \n",
    "    # Explicitly calculate token lengths after preparation for metadata\n",
    "    print(\"Calculating final token lengths for metadata...\")\n",
    "    train_token_lengths = calculate_token_lengths(train_texts, tokenizer)\n",
    "    test_token_lengths = calculate_token_lengths(test_texts, tokenizer)\n",
    "    \n",
    "    # Calculate and add token statistics to metadata\n",
    "    if tokenizer is not None:\n",
    "        preprocessing_metadata['token_stats'] = {\n",
    "            'train': {\n",
    "                'max_token_length': int(train_token_lengths.max()),\n",
    "                'mean_token_length': float(train_token_lengths.mean()),\n",
    "                'median_token_length': float(train_token_lengths.median())\n",
    "            },\n",
    "            'test': {\n",
    "                'max_token_length': int(test_token_lengths.max()),\n",
    "                'mean_token_length': float(test_token_lengths.mean()),\n",
    "                'median_token_length': float(test_token_lengths.median())\n",
    "            }\n",
    "        }\n",
    "        \n",
    "        print(f\"\\n=== TOKEN LENGTH SUMMARY ===\")\n",
    "        print(f\"Training set:\")\n",
    "        print(f\"  Maximum token length: {train_token_lengths.max()}\")\n",
    "        print(f\"  Mean token length: {train_token_lengths.mean():.2f}\")\n",
    "        print(f\"  Median token length: {train_token_lengths.median():.2f}\")\n",
    "        \n",
    "        print(f\"Testing set:\")\n",
    "        print(f\"  Maximum token length: {test_token_lengths.max()}\")\n",
    "        print(f\"  Mean token length: {test_token_lengths.mean():.2f}\")\n",
    "        print(f\"  Median token length: {test_token_lengths.median():.2f}\")\n",
    "    \n",
    "    with open(os.path.join(run_dir, 'preprocessing_metadata.json'), 'w') as f:\n",
    "        json.dump(preprocessing_metadata, f, indent=4)\n",
    "    \n",
    "    # Encode multi-labels using MultiLabelBinarizer - fit on training data only\n",
    "    print(\"Encoding labels...\")\n",
    "    mlb = MultiLabelBinarizer()\n",
    "    train_labels_encoded = mlb.fit_transform(train_filtered_labels)\n",
    "    \n",
    "    # Transform test labels using the same encoder\n",
    "    test_labels_encoded = mlb.transform(test_filtered_labels)\n",
    "    \n",
    "    # Save all original label classes\n",
    "    all_classes = mlb.classes_.tolist()\n",
    "    \n",
    "    # Save label encoder for future use\n",
    "    with open(os.path.join(run_dir, 'label_encoder.json'), 'w') as f:\n",
    "        json.dump({\n",
    "            'classes': all_classes\n",
    "        }, f)\n",
    "    \n",
    "    # Calculate label distribution\n",
    "    label_counts = train_labels_encoded.sum(axis=0)\n",
    "    \n",
    "    # Log class imbalance metrics for training set\n",
    "    label_density = label_counts.sum() / (train_labels_encoded.shape[0] * train_labels_encoded.shape[1])\n",
    "    print(f\"Training set label density: {label_density:.4f}\")\n",
    "    print(f\"Average labels per sample: {label_counts.sum() / train_labels_encoded.shape[0]:.2f}\")\n",
    "    \n",
    "    # Print hybrid feature selection args\n",
    "    print(f\"Feature selection enabled: {args.feature_selection}\")\n",
    "    if args.feature_selection:\n",
    "        print(f\"Filter top-k: {args.filter_k}, Final top-k: {args.final_k}\")\n",
    "        print(f\"Wrapper method: {args.wrapper_method.upper()}\")\n",
    "    else:\n",
    "        print(\"Feature selection disabled\")\n",
    "        \n",
    "    # Perform hybrid feature selection if enabled (using training data only)\n",
    "    if args.feature_selection:\n",
    "        print(f\"\\nPerforming hybrid feature selection...\")\n",
    "        \n",
    "        # Create appropriate vectorizer based on argument\n",
    "        if args.vectorizer == 'tfidf':\n",
    "            from sklearn.feature_extraction.text import TfidfVectorizer\n",
    "            vectorizer = TfidfVectorizer(max_features=5000)\n",
    "            print(\"Using TF-IDF vectorizer for feature selection\")\n",
    "        else:  # default to count\n",
    "            from sklearn.feature_extraction.text import CountVectorizer\n",
    "            vectorizer = CountVectorizer(max_features=5000)\n",
    "            print(\"Using Count vectorizer for feature selection\")\n",
    "        \n",
    "        selected_indices, selected_labels, feature_scores = hybrid_feature_selection(\n",
    "            train_texts, train_labels_encoded, mlb, \n",
    "            top_k_filter=args.filter_k,\n",
    "            top_k_final=args.final_k,\n",
    "            vectorizer=vectorizer,\n",
    "            random_seed=42,\n",
    "            wrapper_method=args.wrapper_method\n",
    "        )\n",
    "        \n",
    "        # Filter labels_encoded to keep only selected labels\n",
    "        train_labels_encoded = train_labels_encoded[:, selected_indices]\n",
    "        test_labels_encoded = test_labels_encoded[:, selected_indices]\n",
    "        \n",
    "        # Save selected labels to file\n",
    "        with open(os.path.join(run_dir, 'selected_labels.json'), 'w') as f:\n",
    "            json.dump({\n",
    "                'selected_labels': selected_labels.tolist(),\n",
    "                'feature_scores': feature_scores.tolist(),\n",
    "                'selected_indices': selected_indices.tolist(),\n",
    "                'vectorizer_type': args.vectorizer,\n",
    "                'wrapper_method': args.wrapper_method\n",
    "            }, f)\n",
    "        \n",
    "        # Update mlb.classes_ to only contain selected classes\n",
    "        mlb.classes_ = np.array(selected_labels)\n",
    "        \n",
    "        # Recalculate label counts with selected labels\n",
    "        label_counts = train_labels_encoded.sum(axis=0)\n",
    "        print(f\"Training with {len(selected_labels)} selected labels: {selected_labels}\")\n",
    "    else:\n",
    "        print(\"Feature selection disabled, using all labels\")\n",
    "    \n",
    "    print(f\"Training samples: {len(train_texts)}, Testing samples: {len(test_texts)}\")\n",
    "    \n",
    "    # Implement class weights for loss function to handle imbalance\n",
    "    pos_weights = None\n",
    "    if args.use_class_weights and label_counts.min() < label_counts.max() / 5:  # If there's significant imbalance\n",
    "        print(\"Computing class weights for imbalanced labels...\")\n",
    "        pos_weights = torch.FloatTensor(\n",
    "            (train_labels_encoded.shape[0] - label_counts) / label_counts\n",
    "        ).clamp(0.5, 10).to(device)  # Limit range to prevent extreme weights\n",
    "    \n",
    "    # Create datasets and dataloaders\n",
    "    batch_size = args.batch_size\n",
    "    train_dataset = IssueDataset(train_texts, train_labels_encoded, tokenizer, max_length=args.max_length)\n",
    "    test_dataset = IssueDataset(test_texts, test_labels_encoded, tokenizer, max_length=args.max_length)\n",
    "    \n",
    "    # Increase batch size for DataParallel if multiple GPUs\n",
    "    if use_multi_gpu:\n",
    "        batch_size = batch_size * n_gpus\n",
    "        print(f\"Using larger batch size of {batch_size} for {n_gpus} GPUs\")\n",
    "    \n",
    "    train_loader = DataLoader(train_dataset, batch_size=batch_size, shuffle=True)\n",
    "    test_loader = DataLoader(test_dataset, batch_size=batch_size)\n",
    "    \n",
    "    # Initialize model, loss function, and optimizer\n",
    "    print(\"Initializing model...\")\n",
    "    model = DeBERTaClassifier(num_labels=len(mlb.classes_)).to(device)\n",
    "    \n",
    "    # Use DataParallel for multiple GPUs\n",
    "    if use_multi_gpu:\n",
    "        model = nn.DataParallel(model)\n",
    "        print(\"Model wrapped in DataParallel\")\n",
    "    \n",
    "    # Use weighted loss if we have weights\n",
    "    if pos_weights is not None:\n",
    "        criterion = nn.BCEWithLogitsLoss(pos_weight=pos_weights)\n",
    "        print(\"Using weighted BCE loss\")\n",
    "    else:\n",
    "        criterion = nn.BCEWithLogitsLoss()\n",
    "    \n",
    "    optimizer = torch.optim.AdamW(model.parameters(), lr=args.learning_rate)\n",
    "    \n",
    "    # Initialize early stopping\n",
    "    early_stopping = EarlyStopping(patience=args.patience, min_delta=0.01)\n",
    "    \n",
    "    # Training loop\n",
    "    num_epochs = args.epochs\n",
    "    print(f\"Starting training for {num_epochs} epochs...\")\n",
    "    \n",
    "    train_losses = []\n",
    "    test_losses = []\n",
    "    best_f1 = 0.0\n",
    "    best_model_saved = False  # Flag to track if we've saved at least one model\n",
    "    \n",
    "    for epoch in range(num_epochs):\n",
    "        print(f\"\\nEpoch {epoch+1}/{num_epochs}\")\n",
    "        \n",
    "        # Train for one epoch\n",
    "        train_loss, train_acc, stop_early = train_epoch(\n",
    "            model, train_loader, criterion, optimizer, device, early_stopping=early_stopping\n",
    "        )\n",
    "        \n",
    "        # Evaluate on test data\n",
    "        test_loss, accuracy_metrics, test_precision, test_recall, test_f1 = validate(\n",
    "            model, test_loader, criterion, device\n",
    "        )\n",
    "        \n",
    "        # Save metrics\n",
    "        train_losses.append(train_loss)\n",
    "        test_losses.append(test_loss)\n",
    "        \n",
    "        print(f\"Train Loss: {train_loss:.4f}, Train Accuracy (Exact Match): {train_acc:.4f}\")\n",
    "        print(f\"Test Loss: {test_loss:.4f}\")\n",
    "        print(f\"Test Accuracy (Exact Match): {accuracy_metrics['exact_match']:.4f}\")\n",
    "        print(f\"Test Accuracy (Partial Match): {accuracy_metrics['partial_match']:.4f}\")\n",
    "        print(f\"Test Accuracy (Jaccard): {accuracy_metrics['jaccard']:.4f}\")\n",
    "        print(f\"Test Precision: {test_precision:.4f}, Test Recall: {test_recall:.4f}, Test F1: {test_f1:.4f}\")\n",
    "        \n",
    "        # Save best model based on F1 score\n",
    "        model_path = os.path.join(run_dir, f'best_model_{args.text_column}.pt')\n",
    "        \n",
    "        if test_f1 > best_f1:\n",
    "            best_f1 = test_f1\n",
    "            \n",
    "            # Save the model state_dict (handle DataParallel wrapper if needed)\n",
    "            if use_multi_gpu:\n",
    "                torch.save(model.module.state_dict(), model_path)\n",
    "            else:\n",
    "                torch.save(model.state_dict(), model_path)\n",
    "                \n",
    "            print(f\"Saved new best model to {model_path}\")\n",
    "            best_model_saved = True\n",
    "        \n",
    "        # Always save a model for the first epoch if no model has been saved yet\n",
    "        # This ensures we have at least one model if early stopping occurs\n",
    "        if epoch == 0 and not best_model_saved:\n",
    "            if use_multi_gpu:\n",
    "                torch.save(model.module.state_dict(), model_path)\n",
    "            else:\n",
    "                torch.save(model.state_dict(), model_path)\n",
    "            print(f\"Saved initial model to {model_path} as baseline\")\n",
    "            best_model_saved = True\n",
    "            \n",
    "        # Check for early stopping\n",
    "        if stop_early:\n",
    "            print(\"Early stopping triggered. Terminating training.\")\n",
    "            break\n",
    "    \n",
    "    # Save training history\n",
    "    history = {\n",
    "        'train_losses': train_losses,\n",
    "        'test_losses': test_losses\n",
    "    }\n",
    "    with open(os.path.join(run_dir, 'training_history.json'), 'w') as f:\n",
    "        json.dump(history, f)\n",
    "    \n",
    "    # Load best model for final evaluation\n",
    "    print(\"\\nLoading best model for final evaluation...\")\n",
    "    best_model_path = os.path.join(run_dir, f'best_model_{args.text_column}.pt')\n",
    "    \n",
    "    # Handle loading for DataParallel model\n",
    "    if use_multi_gpu:\n",
    "        model.module.load_state_dict(torch.load(best_model_path))\n",
    "    else:\n",
    "        model.load_state_dict(torch.load(best_model_path))\n",
    "    \n",
    "    # Evaluate the model with default threshold\n",
    "    print(\"\\nFinal evaluation with default threshold (0.5):\")\n",
    "    final_loss, final_acc_metrics, final_precision, final_recall, final_f1 = validate(\n",
    "        model, test_loader, criterion, device\n",
    "    )\n",
    "    \n",
    "    print(f\"Exact Match Accuracy: {final_acc_metrics['exact_match']:.4f}\")\n",
    "    print(f\"Partial Match Accuracy: {final_acc_metrics['partial_match']:.4f}\")\n",
    "    print(f\"Jaccard Similarity: {final_acc_metrics['jaccard']:.4f}\")\n",
    "    print(f\"Precision: {final_precision:.4f}\")\n",
    "    print(f\"Recall: {final_recall:.4f}\")\n",
    "    print(f\"F1 Score: {final_f1:.4f}\")\n",
    "    \n",
    "    # Save results\n",
    "    results = {\n",
    "        'data_format': 'csv',\n",
    "        'train_data': os.path.basename(args.train_data_path),\n",
    "        'test_data': os.path.basename(args.test_data_path),\n",
    "        'text_column': args.text_column,\n",
    "        'token_length_filter': args.token_length_filter,\n",
    "        'token_reduction_strategy': args.token_reduction_strategy,\n",
    "        'metrics': {\n",
    "            'exact_match': float(final_acc_metrics['exact_match']),\n",
    "            'partial_match': float(final_acc_metrics['partial_match']),\n",
    "            'jaccard': float(final_acc_metrics['jaccard']),\n",
    "            'precision': float(final_precision),\n",
    "            'recall': float(final_recall), \n",
    "            'f1': float(final_f1),\n",
    "        }\n",
    "    }\n",
    "    with open(os.path.join(run_dir, 'results.json'), 'w') as f:\n",
    "        json.dump(results, f, indent=4)\n",
    "    \n",
    "    # Collect predictions with default threshold for confusion matrices\n",
    "    model.eval()\n",
    "    all_preds = []\n",
    "    all_test_labels = []\n",
    "    \n",
    "    with torch.no_grad():\n",
    "        for batch in test_loader:\n",
    "            input_ids = batch['input_ids'].to(device)\n",
    "            attention_mask = batch['attention_mask'].to(device)\n",
    "            \n",
    "            outputs = model(input_ids, attention_mask)\n",
    "            preds = (torch.sigmoid(outputs) >= 0.5).float()\n",
    "            \n",
    "            all_preds.append(preds.cpu().numpy())\n",
    "            all_test_labels.append(batch['labels'].numpy())\n",
    "    \n",
    "    all_preds = np.vstack(all_preds)\n",
    "    all_test_labels = np.vstack(all_test_labels)\n",
    "    \n",
    "    # Plot and save confusion matrices (up to 20 labels to avoid too many plots)\n",
    "    num_labels_to_plot = min(20, len(mlb.classes_))\n",
    "    fig = plot_multilabel_confusion_matrix(\n",
    "        all_test_labels[:, :num_labels_to_plot], \n",
    "        all_preds[:, :num_labels_to_plot], \n",
    "        mlb.classes_[:num_labels_to_plot]\n",
    "    )\n",
    "    plt.savefig(os.path.join(run_dir, 'confusion_matrices.png'))\n",
    "    \n",
    "    # Plot training history\n",
    "    plt.figure(figsize=(10, 5))\n",
    "    plt.plot(train_losses, label='Training Loss')\n",
    "    plt.plot(test_losses, label='Testing Loss')\n",
    "    plt.xlabel('Epoch')\n",
    "    plt.ylabel('Loss')\n",
    "    plt.title(f'Training History - {args.text_column}')\n",
    "    plt.legend()\n",
    "    plt.savefig(os.path.join(run_dir, 'training_history.png'))\n",
    "    \n",
    "    print(f\"\\nTraining completed! Results saved to {run_dir}\")\n",
    "    \n",
    "    return {\n",
    "        'metrics': results['metrics'],\n",
    "        'model': model,\n",
    "        'label_encoder': mlb,\n",
    "        'results_dir': run_dir\n",
    "    }"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "44d32d46",
   "metadata": {
    "papermill": {
     "duration": 0.004894,
     "end_time": "2025-04-29T15:12:03.345474",
     "exception": false,
     "start_time": "2025-04-29T15:12:03.340580",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Augment to Median Data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c02ba0ae",
   "metadata": {
    "papermill": {
     "duration": 0.003422,
     "end_time": "2025-04-29T15:12:03.352950",
     "exception": false,
     "start_time": "2025-04-29T15:12:03.349528",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### No limit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e8c241f",
   "metadata": {
    "papermill": {
     "duration": 0.003423,
     "end_time": "2025-04-29T15:12:03.361069",
     "exception": false,
     "start_time": "2025-04-29T15:12:03.357646",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "with weighted class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "551a536a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T15:12:03.371421Z",
     "iopub.status.busy": "2025-04-29T15:12:03.370886Z",
     "iopub.status.idle": "2025-04-29T15:35:18.690230Z",
     "shell.execute_reply": "2025-04-29T15:35:18.689463Z"
    },
    "papermill": {
     "duration": 1395.325668,
     "end_time": "2025-04-29T15:35:18.691425",
     "exception": false,
     "start_time": "2025-04-29T15:12:03.365757",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using 2 GPUs: [0, 1]\n",
      "Loading tokenizer...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f46b3661dcfa4deea1da1aa5ea93058f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json:   0%|          | 0.00/52.0 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "65f0c851d934445da7c1c1117508bd9d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.json:   0%|          | 0.00/899k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "d5add57c2ba148c48e57e69f1e3cbf63",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "merges.txt:   0%|          | 0.00/456k [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bd05b0ea7b7c472299b4194a9aabcee1",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/474 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Loading training data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv...\n",
      "Loading testing data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv...\n",
      "\n",
      "=== PROCESSING TRAINING DATA ===\n",
      "\n",
      "Applying token length filtering to training data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1268/1268 [00:03<00:00, 369.37it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 268.78, Std Dev: 229.74\n",
      "  Min: 26, Max: 3448\n",
      "  25th percentile: 120.75\n",
      "  50th percentile (median): 209.50\n",
      "  75th percentile: 349.25\n",
      "Applied 3.0 std dev threshold: (1.00, 957.99)\n",
      "Removed 17 samples by std dev filtering (1.34% of data)\n",
      "Total removed: 17 samples (1.34% of original data)\n",
      "Remaining: 1251 samples (98.66% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 252.85, Std Dev: 168.56\n",
      "  Min: 26, Max: 951\n",
      "  25th percentile: 120.00\n",
      "  50th percentile (median): 207.00\n",
      "  75th percentile: 346.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 1251\n",
      "Dataset size after basic cleaning: 1251 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 25\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 25 (100.00% of labels)\n",
      "Samples remaining after label filtering: 1251 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 107\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 107 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 100000)\n",
      "Removed 0 samples with too many or zero labels (0.00% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 1251\n",
      "Final dataset size: 1251 (100.00% of original data)\n",
      "Total samples removed: 0 (0.00% of original data)\n",
      "\n",
      "=== TRAINING DATASET STATISTICS ===\n",
      "Initial training dataset size: 1268\n",
      "Final training dataset size: 1251\n",
      "Total samples removed: 17 (1.34% of original training data)\n",
      "\n",
      "Training Label Distribution:\n",
      "0. area/test: 305\n",
      "1. area/kubelet: 301\n",
      "2. area/apiserver: 191\n",
      "3. area/cloudprovider: 164\n",
      "4. area/kubectl: 128\n",
      "5. area/dependency: 76\n",
      "6. area/provider/azure: 63\n",
      "7. area/code-generation: 59\n",
      "8. area/ipvs: 37\n",
      "9. area/kubeadm: 33\n",
      "10. area/provider/gcp: 32\n",
      "11. area/api: 28\n",
      "12. area/e2e-test-framework: 28\n",
      "13. area/release-eng: 28\n",
      "14. area/conformance: 28\n",
      "15. area/batch: 28\n",
      "16. area/deflake: 28\n",
      "17. area/network-policy: 28\n",
      "18. area/client-libraries: 28\n",
      "19. area/code-organization: 28\n",
      "20. area/security: 28\n",
      "21. area/etcd: 28\n",
      "22. area/custom-resources: 28\n",
      "23. area/provider/aws: 28\n",
      "24. area/kube-proxy: 26\n",
      "\n",
      "=== PROCESSING TESTING DATA ===\n",
      "\n",
      "Applying token length filtering to testing data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 245/245 [00:00<00:00, 624.11it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 229.49, Std Dev: 206.61\n",
      "  Min: 31, Max: 1604\n",
      "  25th percentile: 102.00\n",
      "  50th percentile (median): 161.00\n",
      "  75th percentile: 287.00\n",
      "Applied 3.0 std dev threshold: (1.00, 849.30)\n",
      "Removed 4 samples by std dev filtering (1.63% of data)\n",
      "Total removed: 4 samples (1.63% of original data)\n",
      "Remaining: 241 samples (98.37% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 213.93, Std Dev: 164.74\n",
      "  Min: 31, Max: 810\n",
      "  25th percentile: 101.00\n",
      "  50th percentile (median): 160.00\n",
      "  75th percentile: 271.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 241\n",
      "Dataset size after basic cleaning: 241 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 18\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 18 (100.00% of labels)\n",
      "Samples remaining after label filtering: 241 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 47\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 47 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 100000)\n",
      "Removed 0 samples with too many or zero labels (0.00% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 241\n",
      "Final dataset size: 241 (100.00% of original data)\n",
      "Total samples removed: 0 (0.00% of original data)\n",
      "\n",
      "=== TESTING DATASET STATISTICS ===\n",
      "Initial testing dataset size: 245\n",
      "Final testing dataset size: 241\n",
      "Total samples removed: 4 (1.63% of original testing data)\n",
      "Calculating final token lengths for metadata...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1251/1251 [00:01<00:00, 647.52it/s]\n",
      "Calculating token lengths: 100%|██████████| 241/241 [00:00<00:00, 738.43it/s]\n",
      "/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_label.py:895: UserWarning: unknown class(es) ['area/provider/openstack', 'area/provider/vmware'] will be ignored\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== TOKEN LENGTH SUMMARY ===\n",
      "Training set:\n",
      "  Maximum token length: 951\n",
      "  Mean token length: 252.85\n",
      "  Median token length: 207.00\n",
      "Testing set:\n",
      "  Maximum token length: 810\n",
      "  Mean token length: 213.93\n",
      "  Median token length: 160.00\n",
      "Encoding labels...\n",
      "Training set label density: 0.0569\n",
      "Average labels per sample: 1.42\n",
      "Feature selection enabled: False\n",
      "Feature selection disabled\n",
      "Feature selection disabled, using all labels\n",
      "Training samples: 1251, Testing samples: 241\n",
      "Computing class weights for imbalanced labels...\n",
      "Using larger batch size of 32 for 2 GPUs\n",
      "Initializing model...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "23490e806d4f4d068edc9ab52429537b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "pytorch_model.bin:   0%|          | 0.00/559M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model wrapped in DataParallel\n",
      "Using weighted BCE loss\n",
      "Starting training for 20 epochs...\n",
      "\n",
      "Epoch 1/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training:   0%|          | 0/40 [00:00<?, ?it/s]"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b84d9b7893b849709194a223d481a0b8",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/559M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:52<00:00,  1.32s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.8364, Train Accuracy (Exact Match): 0.0224\n",
      "Test Loss: 0.5992\n",
      "Test Accuracy (Exact Match): 0.0415\n",
      "Test Accuracy (Partial Match): 0.3280\n",
      "Test Accuracy (Jaccard): 0.1660\n",
      "Test Precision: 0.1798, Test Recall: 0.3280, Test F1: 0.2195\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 2/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:55<00:00,  1.39s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.6662, Train Accuracy (Exact Match): 0.0368\n",
      "Test Loss: 0.5923\n",
      "Test Accuracy (Exact Match): 0.0124\n",
      "Test Accuracy (Partial Match): 0.6803\n",
      "Test Accuracy (Jaccard): 0.1929\n",
      "Test Precision: 0.2004, Test Recall: 0.6803, Test F1: 0.2947\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 3/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [01:00<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.5705, Train Accuracy (Exact Match): 0.0687\n",
      "Test Loss: 0.5543\n",
      "Test Accuracy (Exact Match): 0.0041\n",
      "Test Accuracy (Partial Match): 0.7268\n",
      "Test Accuracy (Jaccard): 0.1996\n",
      "Test Precision: 0.2046, Test Recall: 0.7268, Test F1: 0.3085\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 4/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.4986, Train Accuracy (Exact Match): 0.1375\n",
      "Test Loss: 0.4904\n",
      "Test Accuracy (Exact Match): 0.1245\n",
      "Test Accuracy (Partial Match): 0.7115\n",
      "Test Accuracy (Jaccard): 0.3342\n",
      "Test Precision: 0.3427, Test Recall: 0.7115, Test F1: 0.4331\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 5/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.4103, Train Accuracy (Exact Match): 0.2686\n",
      "Test Loss: 0.4341\n",
      "Test Accuracy (Exact Match): 0.2324\n",
      "Test Accuracy (Partial Match): 0.7302\n",
      "Test Accuracy (Jaccard): 0.4511\n",
      "Test Precision: 0.4682, Test Recall: 0.7302, Test F1: 0.5386\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 6/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.3415, Train Accuracy (Exact Match): 0.3541\n",
      "Test Loss: 0.3818\n",
      "Test Accuracy (Exact Match): 0.2946\n",
      "Test Accuracy (Partial Match): 0.7734\n",
      "Test Accuracy (Jaccard): 0.5238\n",
      "Test Precision: 0.5461, Test Recall: 0.7734, Test F1: 0.6107\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 7/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2902, Train Accuracy (Exact Match): 0.4532\n",
      "Test Loss: 0.3508\n",
      "Test Accuracy (Exact Match): 0.3278\n",
      "Test Accuracy (Partial Match): 0.8050\n",
      "Test Accuracy (Jaccard): 0.5674\n",
      "Test Precision: 0.5919, Test Recall: 0.8050, Test F1: 0.6533\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 8/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2577, Train Accuracy (Exact Match): 0.5108\n",
      "Test Loss: 0.3394\n",
      "Test Accuracy (Exact Match): 0.3610\n",
      "Test Accuracy (Partial Match): 0.8062\n",
      "Test Accuracy (Jaccard): 0.5982\n",
      "Test Precision: 0.6294, Test Recall: 0.8062, Test F1: 0.6796\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 9/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2363, Train Accuracy (Exact Match): 0.5524\n",
      "Test Loss: 0.3200\n",
      "Test Accuracy (Exact Match): 0.4357\n",
      "Test Accuracy (Partial Match): 0.8220\n",
      "Test Accuracy (Jaccard): 0.6369\n",
      "Test Precision: 0.6680, Test Recall: 0.8220, Test F1: 0.7080\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 10/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2081, Train Accuracy (Exact Match): 0.6003\n",
      "Test Loss: 0.3110\n",
      "Test Accuracy (Exact Match): 0.4315\n",
      "Test Accuracy (Partial Match): 0.8220\n",
      "Test Accuracy (Jaccard): 0.6382\n",
      "Test Precision: 0.6678, Test Recall: 0.8220, Test F1: 0.7099\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 11/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1895, Train Accuracy (Exact Match): 0.6539\n",
      "Test Loss: 0.3153\n",
      "Test Accuracy (Exact Match): 0.4481\n",
      "Test Accuracy (Partial Match): 0.8261\n",
      "Test Accuracy (Jaccard): 0.6449\n",
      "Test Precision: 0.6717, Test Recall: 0.8261, Test F1: 0.7147\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 12/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1768, Train Accuracy (Exact Match): 0.6539\n",
      "Test Loss: 0.3144\n",
      "Test Accuracy (Exact Match): 0.4564\n",
      "Test Accuracy (Partial Match): 0.8261\n",
      "Test Accuracy (Jaccard): 0.6530\n",
      "Test Precision: 0.6829, Test Recall: 0.8261, Test F1: 0.7209\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 13/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1624, Train Accuracy (Exact Match): 0.6970\n",
      "Test Loss: 0.3050\n",
      "Test Accuracy (Exact Match): 0.4564\n",
      "Test Accuracy (Partial Match): 0.8317\n",
      "Test Accuracy (Jaccard): 0.6512\n",
      "Test Precision: 0.6800, Test Recall: 0.8317, Test F1: 0.7201\n",
      "\n",
      "Epoch 14/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1508, Train Accuracy (Exact Match): 0.7122\n",
      "Test Loss: 0.3036\n",
      "Test Accuracy (Exact Match): 0.4689\n",
      "Test Accuracy (Partial Match): 0.8303\n",
      "Test Accuracy (Jaccard): 0.6606\n",
      "Test Precision: 0.6909, Test Recall: 0.8303, Test F1: 0.7277\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 15/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1404, Train Accuracy (Exact Match): 0.7226\n",
      "Test Loss: 0.2986\n",
      "Test Accuracy (Exact Match): 0.4813\n",
      "Test Accuracy (Partial Match): 0.8407\n",
      "Test Accuracy (Jaccard): 0.6712\n",
      "Test Precision: 0.6987, Test Recall: 0.8407, Test F1: 0.7374\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 16/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1310, Train Accuracy (Exact Match): 0.7474\n",
      "Test Loss: 0.3064\n",
      "Test Accuracy (Exact Match): 0.4523\n",
      "Test Accuracy (Partial Match): 0.8373\n",
      "Test Accuracy (Jaccard): 0.6518\n",
      "Test Precision: 0.6766, Test Recall: 0.8373, Test F1: 0.7220\n",
      "\n",
      "Epoch 17/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.48s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1324, Train Accuracy (Exact Match): 0.7490\n",
      "Test Loss: 0.3047\n",
      "Test Accuracy (Exact Match): 0.5021\n",
      "Test Accuracy (Partial Match): 0.8332\n",
      "Test Accuracy (Jaccard): 0.6757\n",
      "Test Precision: 0.7026, Test Recall: 0.8332, Test F1: 0.7368\n",
      "\n",
      "Epoch 18/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1244, Train Accuracy (Exact Match): 0.7594\n",
      "Test Loss: 0.3060\n",
      "Test Accuracy (Exact Match): 0.5145\n",
      "Test Accuracy (Partial Match): 0.8332\n",
      "Test Accuracy (Jaccard): 0.6828\n",
      "Test Precision: 0.7113, Test Recall: 0.8332, Test F1: 0.7421\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 19/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1170, Train Accuracy (Exact Match): 0.7842\n",
      "Test Loss: 0.3009\n",
      "Test Accuracy (Exact Match): 0.5394\n",
      "Test Accuracy (Partial Match): 0.8311\n",
      "Test Accuracy (Jaccard): 0.6989\n",
      "Test Precision: 0.7317, Test Recall: 0.8311, Test F1: 0.7546\n",
      "Saved new best model to ./results/run_20250429_151203_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 20/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 40/40 [00:59<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1072, Train Accuracy (Exact Match): 0.7770\n",
      "Test Loss: 0.3085\n",
      "Test Accuracy (Exact Match): 0.5311\n",
      "Test Accuracy (Partial Match): 0.8353\n",
      "Test Accuracy (Jaccard): 0.6956\n",
      "Test Precision: 0.7237, Test Recall: 0.8353, Test F1: 0.7523\n",
      "\n",
      "Loading best model for final evaluation...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_19/3276856348.py:1425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n",
      "  model.module.load_state_dict(torch.load(best_model_path))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Final evaluation with default threshold (0.5):\n",
      "Exact Match Accuracy: 0.5394\n",
      "Partial Match Accuracy: 0.8311\n",
      "Jaccard Similarity: 0.6989\n",
      "Precision: 0.7317\n",
      "Recall: 0.8311\n",
      "F1 Score: 0.7546\n",
      "\n",
      "Training completed! Results saved to ./results/run_20250429_151203_all_text\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x2500 with 40 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA04AAAHWCAYAAABACtmGAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAACBuElEQVR4nOzdd3hUZd7G8e/MpPeQTgiE3gk9AoINBUUEbKhIU8CGrou+q7gKllVEWZdVFBQVRFGxILKKDQQLoiBF6UVCqEkIkN5nzvvHhCGBkEaSSbk/13WumTnznDO/GQ7J3Hme8xyTYRgGIiIiIiIicl5mZxcgIiIiIiJS2yk4iYiIiIiIlEHBSUREREREpAwKTiIiIiIiImVQcBIRERERESmDgpOIiIiIiEgZFJxERERERETKoOAkIiIiIiJSBgUnERERERGRMig4iYjUA+PGjSM6OrpS2z755JOYTKaqLaiaHDhwAJPJxMKFC51dSq0WHR3NuHHjHI/XrFmDyWRizZo1TqtJRKSuU3ASEalGJpOpXEtD/UI7btw4fHx8zvu8yWRi8uTJF/w6r732msJWBe3YsYMnn3ySAwcOVPtrPffccyxbtqzaX0dE5EK4OLsAEZH67N133y32eNGiRXz33XfnrG/fvv0Fvc78+fOx2WyV2vbxxx/n0UcfvaDXrynNmjUjOzsbV1fXCm332muvERwcXKwXRkq3Y8cOnnrqKS699NJK92aW13PPPceNN97I8OHDq/V1REQuhIKTiEg1uv3224s9/vXXX/nuu+/OWX+2rKwsvLy8yv06FQ0SRbm4uODiUjd+HZhMJjw8PJxdBgA5OTm4ublhNmvwhohIQ6Cf9iIiTnbppZfSqVMnNm7cyIABA/Dy8uKxxx4D4PPPP2fIkCE0btwYd3d3WrZsyTPPPIPVai22j7PPcTp9LtCsWbN44403aNmyJe7u7vTq1YsNGzYU27akc5xOD5FbtmwZnTp1wt3dnY4dO/L111+fU/+aNWvo2bMnHh4etGzZktdff73azpsq6RynhIQExo8fT5MmTXB3dyciIoJhw4Y5hphFR0ezfft2fvjhB8fQyEsvvdSx/f79+7npppto1KgRXl5eXHTRRXz55ZfnvEeTycSHH37I448/TmRkJF5eXmzZsgWTycR//vOfc2r95ZdfMJlMfPDBB1X2/mfNmkXfvn0JCgrC09OTHj168Mknn1TZ/k9buHAhN910EwCXXXZZiUNKv/rqK/r374+3tze+vr4MGTKE7du3O57//vvvMZvNTJs2rdi+33//fUwmE3PnzgXsx1pmZibvvPOO43XUMygitVHd+BOjiEg9d+LECa6++mpuueUWbr/9dsLCwgD7F1gfHx+mTJmCj48P33//PdOmTSMtLY0XX3yxzP2+//77pKenc9ddd2EymXjhhRe4/vrr2b9/f5m9VD///DNLly7l3nvvxdfXl5dffpkbbriBgwcPEhQUBMDmzZsZPHgwERERPPXUU1itVp5++mlCQkIq9P6Tk5Mr1L6oG264ge3bt3P//fcTHR1NUlIS3333HQcPHiQ6OprZs2dz//334+Pjwz//+U8Ax+ebmJhI3759ycrK4oEHHiAoKIh33nmH6667jk8++YQRI0YUe61nnnkGNzc3Hn74YXJzc2nXrh39+vVj8eLF/P3vfy/WdvHixfj6+jJs2LBKv7ez/fe//+W6665j1KhR5OXl8eGHH3LTTTfxxRdfMGTIkCp7nQEDBvDAAw/w8ssv89hjjzmGkp6+fffddxk7diyDBg1i5syZZGVlMXfuXC6++GI2b95MdHQ0l19+Offeey8zZsxg+PDhdO/enWPHjnH//fczcOBA7r77bse+JkyYQO/evZk0aRIALVu2rLL3IiJSZQwREakx9913n3H2j95LLrnEAIx58+ad0z4rK+ucdXfddZfh5eVl5OTkONaNHTvWaNasmeNxXFycARhBQUHGyZMnHes///xzAzD+97//OdZNnz79nJoAw83Nzdi3b59j3R9//GEAxiuvvOJYN3ToUMPLy8s4cuSIY93evXsNFxeXc/ZZkrFjxxpAqct99913zvtasGCBYRiGcerUKQMwXnzxxVJfp2PHjsYll1xyzvoHH3zQAIyffvrJsS49Pd1o3ry5ER0dbVitVsMwDGP16tUGYLRo0eKcf5PXX3/dAIydO3c61uXl5RnBwcHG2LFjy/wMKuLs187LyzM6depkXH755cXWN2vWrNhrn65/9erV5X6tjz/+uMRt0tPTjYCAAGPixInF1ickJBj+/v7F1mdmZhqtWrUyOnbsaOTk5BhDhgwx/Pz8jPj4+GLbent7V/lnJSJS1TRUT0SkFnB3d2f8+PHnrPf09HTcT09PJzk5mf79+5OVlcWuXbvK3O/IkSMJDAx0PO7fvz9gH55WloEDBxb7y3+XLl3w8/NzbGu1Wlm5ciXDhw+ncePGjnatWrXi6quvLnP/p3l4ePDdd9+VuJTF09MTNzc31qxZw6lTp8r9mqetWLGC3r17c/HFFzvW+fj4MGnSJA4cOMCOHTuKtR87dmyxfxOAm2++GQ8PDxYvXuxY980335CcnFzmuWwVVfS1T506RWpqKv3792fTpk1V+jql+e6770hJSeHWW28lOTnZsVgsFmJjY1m9erWjrZeXFwsXLmTnzp0MGDCAL7/8kv/85z80bdq0xuoVEakqGqonIlILREZG4ubmds767du38/jjj/P999+TlpZW7LnU1NQy93v2F9TTIao8IaOkL7eBgYGObZOSksjOzqZVq1bntCtp3flYLBYGDhxY7vZFubu7M3PmTB566CHCwsK46KKLuPbaaxkzZgzh4eFlbh8fH09sbOw5608PSYuPj6dTp06O9c2bNz+nbUBAAEOHDuX999/nmWeeAezD9CIjI7n88stLff2EhIRij/39/c8JZkV98cUX/Otf/2LLli3k5uY61tfkdbj27t0LcN735ufnV+xxv379uOeee3j11VcZNGgQd9xxR7XXKCJSHRScRERqgZK+LKekpHDJJZfg5+fH008/TcuWLfHw8GDTpk088sgj5Zp+3GKxlLjeMIxq3bYmPfjggwwdOpRly5bxzTff8MQTTzBjxgy+//57unXrVqWvdb5QM2bMGD7++GN++eUXOnfuzPLly7n33nvLnHEvIiKi2OMFCxacd2KEn376ieuuu44BAwbw2muvERERgaurKwsWLOD999+v1PupjNPH3bvvvltiOD17hsbc3FzHpBJ//fVXhWeMFBGpLRScRERqqTVr1nDixAmWLl3KgAEDHOvj4uKcWNUZoaGheHh4sG/fvnOeK2lddWrZsiUPPfQQDz30EHv37qVr1678+9//5r333gPO3yPTrFkzdu/efc7608MgmzVrVq7XHzx4MCEhISxevJjY2FiysrIYPXp0mdudPRyxY8eO52376aef4uHhwTfffIO7u7tj/YIFC8pVY0Wd7zM7PXwzNDS0XD2F06dPZ+fOncyaNYtHHnmERx99lJdffrlcryUiUpsoOImI1FKne3yK9vDk5eXx2muvOaukYk4PsVu2bBlHjx51nOe0b98+vvrqqxqpISsrC7PZXOzaTi1btsTX17fYUDZvb29SUlLO2f6aa65h9uzZrFu3jj59+gCQmZnJG2+8QXR0NB06dChXHS4uLtx66628//777Ny5k86dO9OlS5cyt6vIEEWLxYLJZCo2Ff2BAwdYtmxZufdREd7e3gDnfG6DBg3Cz8+P5557jssuu+yc2RmPHz/umFXxt99+Y9asWTz44IM89NBDJCcnM3PmTG644QYuueSSYq9V0r+PiEhtouAkIlJL9e3bl8DAQMaOHcsDDzyAyWTi3XffrVVD5Z588km+/fZbx3ksVquVOXPm0KlTJ7Zs2VLtr79nzx6uuOIKbr75Zjp06ICLiwufffYZiYmJ3HLLLY52PXr0YO7cufzrX/+iVatWhIaGcvnll/Poo4/ywQcfcPXVV/PAAw/QqFEj3nnnHeLi4vj0008rdHHbMWPG8PLLL7N69WpmzpxZ5e91yJAhvPTSSwwePJjbbruNpKQkXn31VVq1asWff/5Z5a/XtWtXLBYLM2fOJDU1FXd3dy6//HJCQ0OZO3cuo0ePpnv37txyyy2EhIRw8OBBvvzyS/r168ecOXPIyclh7NixtG7dmmeffRaAp556iv/973+MHz+erVu3OsJZjx49WLlyJS+99BKNGzemefPmJZ57JiLiTApOIiK1VFBQEF988QUPPfQQjz/+OIGBgdx+++1cccUVDBo0yNnlAfYvvF999RUPP/wwTzzxBFFRUTz99NPs3LmzXLP+XaioqChuvfVWVq1axbvvvouLiwvt2rXjo48+4oYbbnC0mzZtGvHx8bzwwgukp6dzySWXcPnllxMWFsYvv/zCI488wiuvvEJOTg5dunThf//7X4Wvi9SjRw86duzIzp07GTVqVFW/VS6//HLeeustnn/+eR588EGaN2/OzJkzOXDgQLUEp/DwcObNm8eMGTO48847sVqtrF69mtDQUG677TYaN27M888/z4svvkhubi6RkZH079/fMTvkY489xr59+/jll18cPYJubm688847XHTRRfzf//2fo/f0pZdeYtKkSTz++ONkZ2czduxYBScRqXVMRm3606WIiNQLw4cPZ/v27Y4Z2BqKbt260ahRI1atWuXsUkREpIrpOk4iInJBsrOziz3eu3cvK1as4NJLL3VOQU7y+++/s2XLFsaMGePsUkREpBqox0lERC5IREQE48aNo0WLFsTHxzN37lxyc3PZvHkzrVu3dnZ51W7btm1s3LiRf//73yQnJ7N///5ik1XUNtnZ2WVeA6xRo0YlXldMRKQh0zlOIiJyQQYPHswHH3xAQkIC7u7u9OnTh+eee65BhCaATz75hKeffpq2bdvywQcf1OrQBLBkyRLHeUjns3r16gbXYygiUhb1OImIiDQgx44dY/v27aW26dGjB4GBgTVUkYhI3aDgJCIiIiIiUgZNDiEiIiIiIlKGBneOk81m4+jRo/j6+mIymZxdjoiIiIiIOIlhGKSnp9O4ceMyL3re4ILT0aNHiYqKcnYZIiIiIiJSSxw6dIgmTZqU2qbBBSdfX1/A/uH4+fk5uRoREREREXGWtLQ0oqKiHBmhNA0uOJ0enufn56fgJCIiIiIi5TqFR5NDiIiIiIiIlEHBSUREREREpAwKTiIiIiIiImVocOc4iYiIiEj9YbVayc/Pd3YZUou5urpisVgueD8KTiIiIiJSJ2VkZHD48GEMw3B2KVKLmUwmmjRpgo+PzwXtR8FJREREROocq9XK4cOH8fLyIiQkpFyzoknDYxgGx48f5/Dhw7Ru3fqCep4UnERERESkzsnPz8cwDEJCQvD09HR2OVKLhYSEcODAAfLz8y8oOGlyCBERERGps9TTJGWpqmNEwUlERERERKQMCk4iIiIiIiJlUHASEREREanDoqOjmT17drnbr1mzBpPJREpKSrXVVB8pOImIiIiI1ACTyVTq8uSTT1Zqvxs2bGDSpEnlbt+3b1+OHTuGv79/pV6vvOpbQNOsek6WW2DFxWzGYtaJjSIiIiL12bFjxxz3lyxZwrRp09i9e7djXdHrDBmGgdVqxcWl7K/rISEhFarDzc2N8PDwCm0j6nFyqkXrDtB/5mq+25Hg7FJERERE6jTDMMjKK3DKUt4L8IaHhzsWf39/TCaT4/GuXbvw9fXlq6++okePHri7u/Pzzz/z119/MWzYMMLCwvDx8aFXr16sXLmy2H7PHqpnMpl48803GTFiBF5eXrRu3Zrly5c7nj+7J2jhwoUEBATwzTff0L59e3x8fBg8eHCxoFdQUMADDzxAQEAAQUFBPPLII4wdO5bhw4dX+t/s1KlTjBkzhsDAQLy8vLj66qvZu3ev4/n4+HiGDh1KYGAg3t7edOzYkRUrVji2HTVqlGM6+tatW7NgwYJK11Ie6nFyoqS0XJLSc3njx/0M7hTh7HJERERE6qzsfCsdpn3jlNfe8fQgvNyq5mv1o48+yqxZs2jRogWBgYEcOnSIa665hmeffRZ3d3cWLVrE0KFD2b17N02bNj3vfp566ileeOEFXnzxRV555RVGjRpFfHw8jRo1KrF9VlYWs2bN4t1338VsNnP77bfz8MMPs3jxYgBmzpzJ4sWLWbBgAe3bt+e///0vy5Yt47LLLqv0ex03bhx79+5l+fLl+Pn58cgjj3DNNdewY8cOXF1due+++8jLy+PHH3/E29ubHTt2OHrlnnjiCXbs2MFXX31FcHAw+/btIzs7u9K1lIeCkxON6duMN37cz6aDKWyMP0mPZiUfyCIiIiLSMDz99NNceeWVjseNGjUiJibG8fiZZ57hs88+Y/ny5UyePPm8+xk3bhy33norAM899xwvv/wy69evZ/DgwSW2z8/PZ968ebRs2RKAyZMn8/TTTzuef+WVV5g6dSojRowAYM6cOY7en8o4HZjWrl1L3759AVi8eDFRUVEsW7aMm266iYMHD3LDDTfQuXNnAFq0aOHY/uDBg3Tr1o2ePXsC9l636qbg5EShvh6M6BbJkt8P8foP+3ljjIKTiIiISGV4ulrY8fQgp712VTkdBE7LyMjgySef5Msvv+TYsWMUFBSQnZ3NwYMHS91Ply5dHPe9vb3x8/MjKSnpvO29vLwcoQkgIiLC0T41NZXExER69+7teN5isdCjRw9sNluF3t9pO3fuxMXFhdjYWMe6oKAg2rZty86dOwF44IEHuOeee/j2228ZOHAgN9xwg+N93XPPPdxwww1s2rSJq666iuHDhzsCWHXROU5ONnFAcwC+25nI/uMZTq5GREREpG4ymUx4ubk4ZTGZqm6SL29v72KPH374YT777DOee+45fvrpJ7Zs2ULnzp3Jy8srdT+urq7nfD6lhZyS2pf33K3qMmHCBPbv38/o0aPZunUrPXv25JVXXgHg6quvJj4+nr///e8cPXqUK664gocffrha61FwcrJWob5c0S4Uw4C3fo5zdjkiIiIiUousXbuWcePGMWLECDp37kx4eDgHDhyo0Rr8/f0JCwtjw4YNjnVWq5VNmzZVep/t27enoKCA3377zbHuxIkT7N69mw4dOjjWRUVFcffdd7N06VIeeugh5s+f73guJCSEsWPH8t57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pHfv3syePZvMzEzGjx8P2P/hIiMjHWl66NChvPTSS3Tr1o3Y2Fj27dvHE088wdChQ0s9QOoyH3cXRl3UjLlr/mL+T/sVnERERETqoenTp/Pvf/+b66+/HoDmzZuzY8cOXn/9dcaOHcvBgwdp3bo1F198MSaTiWbNmjm2DQkJASAgIOC8I7dOCwwMZM6cOVgsFtq1a8eQIUNYtWoVEydOZNeuXaxcuZINGzbQs2dPAN58801at25d6ff1/vvvk5OTw6JFi/D2tofLOXPmMHToUGbOnImrqyupqalce+21tGxpn1W6ffv2ju0PHjzI//3f/9GuXTuAC6rlQjk1OI0cOZLjx48zbdo0EhIS6Nq1K19//bVjwoiDBw8W62F6/PHHMZlMPP744xw5coSQkBCGDh3Ks88+66y3UCPG9Y3mzZ/2s+HAKTYdPEX3poHOLklERESkdnH1svf8OOu1L0BmZiZ//fUXd955p6PnB6CgoAB/f3/APszuyiuvpG3btgwePJhrr72Wq666qsKv1bFjx2IdDhEREWzduhWA3bt34+LiQvfu3R3Pt2rVisDAyn/33LlzJzExMY7QBNCvXz9sNhu7d+9mwIABjBs3jkGDBnHllVcycOBAbr75ZiIiIgB7R8uECRN49913GThwIDfddJMjYNU0p08OMXnyZOLj48nNzeW3334jNjbW8dyaNWtYuHCh47GLiwvTp09n3759ZGdnc/DgQV599VUCAgJqvvAaFObnwfCukQDM/1EXxBURERE5h8lkHy7njKVwWFllnT7fZ/78+WzZssWxbNu2jV9//RWA7t27ExcXxzPPPEN2djY333wzN954Y4Vf6+xhbiaT6bxzBdSUBQsWsG7dOvr27cuSJUto06aN430/+eSTbN++nSFDhvD999/ToUMHPvvsM6fU6fTgJOVzemryr7cnEH8i08nViIiIiEhVCQsLo3Hjxuzfv59WrVoVW5o3b+5o5+fnx8iRI5k/fz5Llizh008/5eTJk4A9EFmtF3b5mrZt21JQUMDmzZsd6/bt28epU6cqvc/27dvzxx9/kJl55vvr2rVrMZvNtG3b1rGuW7duTJ06lV9++YVOnTrx/vvvO55r06YNf//73/n222+5/vrrWbBgQaXruRAKTnVEmzBfLm0bgmHAWz/HObscEREREalCTz31FDNmzODll19mz549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\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    # Create parser and handle Jupyter/Colab environment by ignoring unknown args\n",
    "    parser = argparse.ArgumentParser(description='Train DeBERTa for multi-label classification')\n",
    "    \n",
    "    # Data parameters\n",
    "    parser.add_argument('--train_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv\",\n",
    "                        help='Path to the JSON training data file')\n",
    "    parser.add_argument('--test_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv\",\n",
    "                        help='Path to the JSON testing data file')\n",
    "    parser.add_argument('--text_column', type=str, default='all_text',\n",
    "                        help='Column name with the text data to use for training (e.g., all_text, all_text_0.5)')\n",
    "    parser.add_argument('--results_dir', type=str, default='./results',\n",
    "                        help='Directory to save results')\n",
    "    \n",
    "    # Label filtering parameters\n",
    "    parser.add_argument('--min_label_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label to be considered')\n",
    "    parser.add_argument('--max_label_len', type=int, default=100000,\n",
    "                        help='Maximum number of labels per sample (default: 5)')\n",
    "    parser.add_argument('--min_label_comb_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label combination')\n",
    "    \n",
    "    # Training parameters\n",
    "    parser.add_argument('--batch_size', type=int, default=16, help='Training batch size')\n",
    "    parser.add_argument('--epochs', type=int, default=20, help='Number of training epochs')\n",
    "    parser.add_argument('--learning_rate', type=float, default=2e-5, help='Learning rate')\n",
    "    parser.add_argument('--patience', type=int, default=3, help='Early stopping patience')\n",
    "    parser.add_argument('--use_class_weights', action='store_true', default=True, help='Use class weights for imbalanced data')\n",
    "    \n",
    "    # Token length parameters\n",
    "    parser.add_argument('--max_length', type=int, default=512, help='Maximum token length for model input')\n",
    "    \n",
    "    # Token length filtering parameters\n",
    "    parser.add_argument('--token_length_filter', type=str, choices=['2std', '3std', None], default='3std',\n",
    "                        help='Remove token length outliers based on standard deviation threshold')\n",
    "    parser.add_argument('--min_token_threshold', type=int, default=None,\n",
    "                        help='Minimum number of tokens required for a sample')\n",
    "    \n",
    "    # Token reduction parameters for handling long tokens\n",
    "    parser.add_argument('--token_reduction_strategy', type=str, \n",
    "                        choices=['simple', 'smart_truncation', 'extractive_summarization', 'hybrid'], \n",
    "                        default=None,\n",
    "                        help='Strategy to handle long tokens exceeding max_length: '\n",
    "                             'simple=simple truncation, '\n",
    "                             'smart_truncation=keep beginning and end, '\n",
    "                             'extractive_summarization=extract key sentences, '\n",
    "                             'hybrid=combine summarization and truncation')\n",
    "    \n",
    "    # Feature selection parameters\n",
    "    parser.add_argument('--feature_selection', action='store_true', \n",
    "                        help='Enable hybrid feature selection')\n",
    "    parser.add_argument('--filter_k', type=int, default=20, \n",
    "                        help='Number of labels to retain after filter stage')\n",
    "    parser.add_argument('--final_k', type=int, default=10, \n",
    "                        help='Final number of labels to select')\n",
    "    parser.add_argument('--vectorizer', type=str, choices=['count', 'tfidf'], default='count',\n",
    "                        help='Vectorizer to use for feature selection')\n",
    "    parser.add_argument('--wrapper_method', type=str, choices=['rf', 'lr'], default='rf',\n",
    "                        help='Wrapper method to use for feature selection (rf: Random Forest, lr: Logistic Regression)')\n",
    "    \n",
    "    # Parse arguments, ignore unknown args for compatibility with Jupyter/Colab\n",
    "    args, unknown = parser.parse_known_args()\n",
    "    \n",
    "    # If the script is run directly, not imported\n",
    "    results = main(args)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "542a0610",
   "metadata": {
    "papermill": {
     "duration": 0.044069,
     "end_time": "2025-04-29T15:35:18.780696",
     "exception": false,
     "start_time": "2025-04-29T15:35:18.736627",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 2 labels"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e07ef60",
   "metadata": {
    "papermill": {
     "duration": 0.044354,
     "end_time": "2025-04-29T15:35:18.869386",
     "exception": false,
     "start_time": "2025-04-29T15:35:18.825032",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "with weighted class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "1e6c5deb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T15:35:18.959372Z",
     "iopub.status.busy": "2025-04-29T15:35:18.958831Z",
     "iopub.status.idle": "2025-04-29T15:56:56.102384Z",
     "shell.execute_reply": "2025-04-29T15:56:56.101777Z"
    },
    "papermill": {
     "duration": 1297.190057,
     "end_time": "2025-04-29T15:56:56.103786",
     "exception": false,
     "start_time": "2025-04-29T15:35:18.913729",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using 2 GPUs: [0, 1]\n",
      "Loading tokenizer...\n",
      "Loading training data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv...\n",
      "Loading testing data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv...\n",
      "\n",
      "=== PROCESSING TRAINING DATA ===\n",
      "\n",
      "Applying token length filtering to training data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1268/1268 [00:03<00:00, 374.49it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 268.78, Std Dev: 229.74\n",
      "  Min: 26, Max: 3448\n",
      "  25th percentile: 120.75\n",
      "  50th percentile (median): 209.50\n",
      "  75th percentile: 349.25\n",
      "Applied 3.0 std dev threshold: (1.00, 957.99)\n",
      "Removed 17 samples by std dev filtering (1.34% of data)\n",
      "Total removed: 17 samples (1.34% of original data)\n",
      "Remaining: 1251 samples (98.66% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 252.85, Std Dev: 168.56\n",
      "  Min: 26, Max: 951\n",
      "  25th percentile: 120.00\n",
      "  50th percentile (median): 207.00\n",
      "  75th percentile: 346.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 1251\n",
      "Dataset size after basic cleaning: 1251 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 25\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 25 (100.00% of labels)\n",
      "Samples remaining after label filtering: 1251 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 107\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 107 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 2)\n",
      "Removed 87 samples with too many or zero labels (6.95% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 1251\n",
      "Final dataset size: 1164 (93.05% of original data)\n",
      "Total samples removed: 87 (6.95% of original data)\n",
      "\n",
      "=== TRAINING DATASET STATISTICS ===\n",
      "Initial training dataset size: 1268\n",
      "Final training dataset size: 1164\n",
      "Total samples removed: 104 (8.20% of original training data)\n",
      "\n",
      "Training Label Distribution:\n",
      "0. area/kubelet: 269\n",
      "1. area/test: 263\n",
      "2. area/apiserver: 123\n",
      "3. area/cloudprovider: 106\n",
      "4. area/kubectl: 82\n",
      "5. area/provider/azure: 62\n",
      "6. area/api: 28\n",
      "7. area/ipvs: 28\n",
      "8. area/batch: 28\n",
      "9. area/provider/aws: 28\n",
      "10. area/conformance: 27\n",
      "11. area/code-organization: 27\n",
      "12. area/security: 27\n",
      "13. area/custom-resources: 27\n",
      "14. area/client-libraries: 27\n",
      "15. area/network-policy: 26\n",
      "16. area/deflake: 26\n",
      "17. area/kubeadm: 25\n",
      "18. area/dependency: 25\n",
      "19. area/provider/gcp: 25\n",
      "20. area/etcd: 23\n",
      "21. area/code-generation: 21\n",
      "22. area/kube-proxy: 21\n",
      "23. area/release-eng: 21\n",
      "24. area/e2e-test-framework: 11\n",
      "\n",
      "=== PROCESSING TESTING DATA ===\n",
      "\n",
      "Applying token length filtering to testing data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 245/245 [00:00<00:00, 633.39it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 229.49, Std Dev: 206.61\n",
      "  Min: 31, Max: 1604\n",
      "  25th percentile: 102.00\n",
      "  50th percentile (median): 161.00\n",
      "  75th percentile: 287.00\n",
      "Applied 3.0 std dev threshold: (1.00, 849.30)\n",
      "Removed 4 samples by std dev filtering (1.63% of data)\n",
      "Total removed: 4 samples (1.63% of original data)\n",
      "Remaining: 241 samples (98.37% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 213.93, Std Dev: 164.74\n",
      "  Min: 31, Max: 810\n",
      "  25th percentile: 101.00\n",
      "  50th percentile (median): 160.00\n",
      "  75th percentile: 271.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 241\n",
      "Dataset size after basic cleaning: 241 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 18\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 18 (100.00% of labels)\n",
      "Samples remaining after label filtering: 241 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 47\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 47 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 2)\n",
      "Removed 17 samples with too many or zero labels (7.05% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 241\n",
      "Final dataset size: 224 (92.95% of original data)\n",
      "Total samples removed: 17 (7.05% of original data)\n",
      "\n",
      "=== TESTING DATASET STATISTICS ===\n",
      "Initial testing dataset size: 245\n",
      "Final testing dataset size: 224\n",
      "Total samples removed: 21 (8.57% of original testing data)\n",
      "Calculating final token lengths for metadata...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1164/1164 [00:01<00:00, 685.77it/s]\n",
      "Calculating token lengths: 100%|██████████| 224/224 [00:00<00:00, 800.89it/s]\n",
      "/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_label.py:895: UserWarning: unknown class(es) ['area/provider/openstack', 'area/provider/vmware'] will be ignored\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== TOKEN LENGTH SUMMARY ===\n",
      "Training set:\n",
      "  Maximum token length: 925\n",
      "  Mean token length: 234.08\n",
      "  Median token length: 197.00\n",
      "Testing set:\n",
      "  Maximum token length: 810\n",
      "  Mean token length: 196.65\n",
      "  Median token length: 152.50\n",
      "Encoding labels...\n",
      "Training set label density: 0.0473\n",
      "Average labels per sample: 1.18\n",
      "Feature selection enabled: False\n",
      "Feature selection disabled\n",
      "Feature selection disabled, using all labels\n",
      "Training samples: 1164, Testing samples: 224\n",
      "Computing class weights for imbalanced labels...\n",
      "Using larger batch size of 32 for 2 GPUs\n",
      "Initializing model...\n",
      "Model wrapped in DataParallel\n",
      "Using weighted BCE loss\n",
      "Starting training for 20 epochs...\n",
      "\n",
      "Epoch 1/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:56<00:00,  1.52s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.8215, Train Accuracy (Exact Match): 0.0155\n",
      "Test Loss: 0.5980\n",
      "Test Accuracy (Exact Match): 0.0000\n",
      "Test Accuracy (Partial Match): 0.5759\n",
      "Test Accuracy (Jaccard): 0.1598\n",
      "Test Precision: 0.1667, Test Recall: 0.5759, Test F1: 0.2516\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 2/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:54<00:00,  1.48s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.6262, Train Accuracy (Exact Match): 0.0223\n",
      "Test Loss: 0.5668\n",
      "Test Accuracy (Exact Match): 0.0045\n",
      "Test Accuracy (Partial Match): 0.6652\n",
      "Test Accuracy (Jaccard): 0.1893\n",
      "Test Precision: 0.1940, Test Recall: 0.6652, Test F1: 0.2928\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 3/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:54<00:00,  1.48s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.5095, Train Accuracy (Exact Match): 0.0799\n",
      "Test Loss: 0.5212\n",
      "Test Accuracy (Exact Match): 0.0268\n",
      "Test Accuracy (Partial Match): 0.6786\n",
      "Test Accuracy (Jaccard): 0.2391\n",
      "Test Precision: 0.2452, Test Recall: 0.6786, Test F1: 0.3452\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 4/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.4078, Train Accuracy (Exact Match): 0.2191\n",
      "Test Loss: 0.4383\n",
      "Test Accuracy (Exact Match): 0.1607\n",
      "Test Accuracy (Partial Match): 0.7143\n",
      "Test Accuracy (Jaccard): 0.3978\n",
      "Test Precision: 0.4131, Test Recall: 0.7143, Test F1: 0.4958\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 5/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:54<00:00,  1.48s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.3131, Train Accuracy (Exact Match): 0.4046\n",
      "Test Loss: 0.3576\n",
      "Test Accuracy (Exact Match): 0.3080\n",
      "Test Accuracy (Partial Match): 0.8013\n",
      "Test Accuracy (Jaccard): 0.5397\n",
      "Test Precision: 0.5574, Test Recall: 0.8013, Test F1: 0.6278\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 6/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2473, Train Accuracy (Exact Match): 0.5421\n",
      "Test Loss: 0.3185\n",
      "Test Accuracy (Exact Match): 0.4286\n",
      "Test Accuracy (Partial Match): 0.8371\n",
      "Test Accuracy (Jaccard): 0.6376\n",
      "Test Precision: 0.6585, Test Recall: 0.8371, Test F1: 0.7124\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 7/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2027, Train Accuracy (Exact Match): 0.6521\n",
      "Test Loss: 0.2971\n",
      "Test Accuracy (Exact Match): 0.4554\n",
      "Test Accuracy (Partial Match): 0.8281\n",
      "Test Accuracy (Jaccard): 0.6496\n",
      "Test Precision: 0.6722, Test Recall: 0.8281, Test F1: 0.7179\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 8/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1777, Train Accuracy (Exact Match): 0.6899\n",
      "Test Loss: 0.2964\n",
      "Test Accuracy (Exact Match): 0.4777\n",
      "Test Accuracy (Partial Match): 0.8259\n",
      "Test Accuracy (Jaccard): 0.6596\n",
      "Test Precision: 0.6801, Test Recall: 0.8259, Test F1: 0.7235\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 9/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1543, Train Accuracy (Exact Match): 0.7328\n",
      "Test Loss: 0.2929\n",
      "Test Accuracy (Exact Match): 0.5000\n",
      "Test Accuracy (Partial Match): 0.8326\n",
      "Test Accuracy (Jaccard): 0.6749\n",
      "Test Precision: 0.6949, Test Recall: 0.8326, Test F1: 0.7359\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 10/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1433, Train Accuracy (Exact Match): 0.7440\n",
      "Test Loss: 0.2953\n",
      "Test Accuracy (Exact Match): 0.5000\n",
      "Test Accuracy (Partial Match): 0.8281\n",
      "Test Accuracy (Jaccard): 0.6726\n",
      "Test Precision: 0.6927, Test Recall: 0.8281, Test F1: 0.7329\n",
      "\n",
      "Epoch 11/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1293, Train Accuracy (Exact Match): 0.7637\n",
      "Test Loss: 0.2871\n",
      "Test Accuracy (Exact Match): 0.4955\n",
      "Test Accuracy (Partial Match): 0.8214\n",
      "Test Accuracy (Jaccard): 0.6689\n",
      "Test Precision: 0.6912, Test Recall: 0.8214, Test F1: 0.7292\n",
      "\n",
      "Epoch 12/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1195, Train Accuracy (Exact Match): 0.7818\n",
      "Test Loss: 0.2938\n",
      "Test Accuracy (Exact Match): 0.5045\n",
      "Test Accuracy (Partial Match): 0.8326\n",
      "Test Accuracy (Jaccard): 0.6771\n",
      "Test Precision: 0.6972, Test Recall: 0.8326, Test F1: 0.7374\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 13/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1083, Train Accuracy (Exact Match): 0.7861\n",
      "Test Loss: 0.2915\n",
      "Test Accuracy (Exact Match): 0.5000\n",
      "Test Accuracy (Partial Match): 0.8259\n",
      "Test Accuracy (Jaccard): 0.6741\n",
      "Test Precision: 0.6979, Test Recall: 0.8259, Test F1: 0.7342\n",
      "\n",
      "Epoch 14/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:54<00:00,  1.47s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1048, Train Accuracy (Exact Match): 0.7921\n",
      "Test Loss: 0.2872\n",
      "Test Accuracy (Exact Match): 0.5357\n",
      "Test Accuracy (Partial Match): 0.8348\n",
      "Test Accuracy (Jaccard): 0.6923\n",
      "Test Precision: 0.7098, Test Recall: 0.8348, Test F1: 0.7473\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 15/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0941, Train Accuracy (Exact Match): 0.8179\n",
      "Test Loss: 0.2966\n",
      "Test Accuracy (Exact Match): 0.5268\n",
      "Test Accuracy (Partial Match): 0.8281\n",
      "Test Accuracy (Jaccard): 0.6856\n",
      "Test Precision: 0.7068, Test Recall: 0.8281, Test F1: 0.7414\n",
      "\n",
      "Epoch 16/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:54<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0877, Train Accuracy (Exact Match): 0.8325\n",
      "Test Loss: 0.2876\n",
      "Test Accuracy (Exact Match): 0.5312\n",
      "Test Accuracy (Partial Match): 0.8281\n",
      "Test Accuracy (Jaccard): 0.6882\n",
      "Test Precision: 0.7083, Test Recall: 0.8281, Test F1: 0.7433\n",
      "\n",
      "Epoch 17/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0844, Train Accuracy (Exact Match): 0.8376\n",
      "Test Loss: 0.2947\n",
      "Test Accuracy (Exact Match): 0.5670\n",
      "Test Accuracy (Partial Match): 0.8237\n",
      "Test Accuracy (Jaccard): 0.7042\n",
      "Test Precision: 0.7254, Test Recall: 0.8237, Test F1: 0.7525\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 18/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0767, Train Accuracy (Exact Match): 0.8574\n",
      "Test Loss: 0.2974\n",
      "Test Accuracy (Exact Match): 0.5625\n",
      "Test Accuracy (Partial Match): 0.8281\n",
      "Test Accuracy (Jaccard): 0.7046\n",
      "Test Precision: 0.7262, Test Recall: 0.8281, Test F1: 0.7545\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 19/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0733, Train Accuracy (Exact Match): 0.8703\n",
      "Test Loss: 0.2981\n",
      "Test Accuracy (Exact Match): 0.5759\n",
      "Test Accuracy (Partial Match): 0.8259\n",
      "Test Accuracy (Jaccard): 0.7098\n",
      "Test Precision: 0.7307, Test Recall: 0.8259, Test F1: 0.7567\n",
      "Saved new best model to ./results/run_20250429_153518_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 20/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 37/37 [00:55<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0677, Train Accuracy (Exact Match): 0.8789\n",
      "Test Loss: 0.3102\n",
      "Test Accuracy (Exact Match): 0.5714\n",
      "Test Accuracy (Partial Match): 0.8214\n",
      "Test Accuracy (Jaccard): 0.7042\n",
      "Test Precision: 0.7232, Test Recall: 0.8214, Test F1: 0.7510\n",
      "\n",
      "Loading best model for final evaluation...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_19/3276856348.py:1425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n",
      "  model.module.load_state_dict(torch.load(best_model_path))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Final evaluation with default threshold (0.5):\n",
      "Exact Match Accuracy: 0.5759\n",
      "Partial Match Accuracy: 0.8259\n",
      "Jaccard Similarity: 0.7098\n",
      "Precision: 0.7307\n",
      "Recall: 0.8259\n",
      "F1 Score: 0.7567\n",
      "\n",
      "Training completed! Results saved to ./results/run_20250429_153518_all_text\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x2500 with 40 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    # Create parser and handle Jupyter/Colab environment by ignoring unknown args\n",
    "    parser = argparse.ArgumentParser(description='Train DeBERTa for multi-label classification')\n",
    "    \n",
    "    # Data parameters\n",
    "    parser.add_argument('--train_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv\",\n",
    "                        help='Path to the JSON training data file')\n",
    "    parser.add_argument('--test_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv\",\n",
    "                        help='Path to the JSON testing data file')\n",
    "    parser.add_argument('--text_column', type=str, default='all_text',\n",
    "                        help='Column name with the text data to use for training (e.g., all_text, all_text_0.5)')\n",
    "    parser.add_argument('--results_dir', type=str, default='./results',\n",
    "                        help='Directory to save results')\n",
    "    \n",
    "    # Label filtering parameters\n",
    "    parser.add_argument('--min_label_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label to be considered')\n",
    "    parser.add_argument('--max_label_len', type=int, default=2,\n",
    "                        help='Maximum number of labels per sample (default: 5)')\n",
    "    parser.add_argument('--min_label_comb_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label combination')\n",
    "    \n",
    "    # Training parameters\n",
    "    parser.add_argument('--batch_size', type=int, default=16, help='Training batch size')\n",
    "    parser.add_argument('--epochs', type=int, default=20, help='Number of training epochs')\n",
    "    parser.add_argument('--learning_rate', type=float, default=2e-5, help='Learning rate')\n",
    "    parser.add_argument('--patience', type=int, default=3, help='Early stopping patience')\n",
    "    parser.add_argument('--use_class_weights', action='store_true', default=True, help='Use class weights for imbalanced data')\n",
    "    \n",
    "    # Token length parameters\n",
    "    parser.add_argument('--max_length', type=int, default=512, help='Maximum token length for model input')\n",
    "    \n",
    "    # Token length filtering parameters\n",
    "    parser.add_argument('--token_length_filter', type=str, choices=['2std', '3std', None], default='3std',\n",
    "                        help='Remove token length outliers based on standard deviation threshold')\n",
    "    parser.add_argument('--min_token_threshold', type=int, default=None,\n",
    "                        help='Minimum number of tokens required for a sample')\n",
    "    \n",
    "    # Token reduction parameters for handling long tokens\n",
    "    parser.add_argument('--token_reduction_strategy', type=str, \n",
    "                        choices=['simple', 'smart_truncation', 'extractive_summarization', 'hybrid'], \n",
    "                        default=None,\n",
    "                        help='Strategy to handle long tokens exceeding max_length: '\n",
    "                             'simple=simple truncation, '\n",
    "                             'smart_truncation=keep beginning and end, '\n",
    "                             'extractive_summarization=extract key sentences, '\n",
    "                             'hybrid=combine summarization and truncation')\n",
    "    \n",
    "    # Feature selection parameters\n",
    "    parser.add_argument('--feature_selection', action='store_true', \n",
    "                        help='Enable hybrid feature selection')\n",
    "    parser.add_argument('--filter_k', type=int, default=20, \n",
    "                        help='Number of labels to retain after filter stage')\n",
    "    parser.add_argument('--final_k', type=int, default=10, \n",
    "                        help='Final number of labels to select')\n",
    "    parser.add_argument('--vectorizer', type=str, choices=['count', 'tfidf'], default='count',\n",
    "                        help='Vectorizer to use for feature selection')\n",
    "    parser.add_argument('--wrapper_method', type=str, choices=['rf', 'lr'], default='rf',\n",
    "                        help='Wrapper method to use for feature selection (rf: Random Forest, lr: Logistic Regression)')\n",
    "    \n",
    "    # Parse arguments, ignore unknown args for compatibility with Jupyter/Colab\n",
    "    args, unknown = parser.parse_known_args()\n",
    "    \n",
    "    # If the script is run directly, not imported\n",
    "    results = main(args)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d04ea514",
   "metadata": {
    "papermill": {
     "duration": 0.085637,
     "end_time": "2025-04-29T15:56:56.276993",
     "exception": false,
     "start_time": "2025-04-29T15:56:56.191356",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### 5 labels"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5a2f0c3a",
   "metadata": {
    "papermill": {
     "duration": 0.083523,
     "end_time": "2025-04-29T15:56:56.449635",
     "exception": false,
     "start_time": "2025-04-29T15:56:56.366112",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "without weight labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "16e20378",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T15:56:56.614198Z",
     "iopub.status.busy": "2025-04-29T15:56:56.613585Z",
     "iopub.status.idle": "2025-04-29T16:16:34.239676Z",
     "shell.execute_reply": "2025-04-29T16:16:34.238886Z"
    },
    "papermill": {
     "duration": 1177.710682,
     "end_time": "2025-04-29T16:16:34.240798",
     "exception": false,
     "start_time": "2025-04-29T15:56:56.530116",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using 2 GPUs: [0, 1]\n",
      "Loading tokenizer...\n",
      "Loading training data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv...\n",
      "Loading testing data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv...\n",
      "\n",
      "=== PROCESSING TRAINING DATA ===\n",
      "\n",
      "Applying token length filtering to training data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1268/1268 [00:03<00:00, 373.19it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 268.78, Std Dev: 229.74\n",
      "  Min: 26, Max: 3448\n",
      "  25th percentile: 120.75\n",
      "  50th percentile (median): 209.50\n",
      "  75th percentile: 349.25\n",
      "Applied 3.0 std dev threshold: (1.00, 957.99)\n",
      "Removed 17 samples by std dev filtering (1.34% of data)\n",
      "Total removed: 17 samples (1.34% of original data)\n",
      "Remaining: 1251 samples (98.66% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 252.85, Std Dev: 168.56\n",
      "  Min: 26, Max: 951\n",
      "  25th percentile: 120.00\n",
      "  50th percentile (median): 207.00\n",
      "  75th percentile: 346.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 1251\n",
      "Dataset size after basic cleaning: 1251 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 25\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 25 (100.00% of labels)\n",
      "Samples remaining after label filtering: 1251 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 107\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 107 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 5)\n",
      "Removed 18 samples with too many or zero labels (1.44% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 1251\n",
      "Final dataset size: 1233 (98.56% of original data)\n",
      "Total samples removed: 18 (1.44% of original data)\n",
      "\n",
      "=== TRAINING DATASET STATISTICS ===\n",
      "Initial training dataset size: 1268\n",
      "Final training dataset size: 1233\n",
      "Total samples removed: 35 (2.76% of original training data)\n",
      "\n",
      "Training Label Distribution:\n",
      "0. area/kubelet: 290\n",
      "1. area/test: 289\n",
      "2. area/apiserver: 173\n",
      "3. area/cloudprovider: 146\n",
      "4. area/kubectl: 112\n",
      "5. area/provider/azure: 63\n",
      "6. area/dependency: 62\n",
      "7. area/code-generation: 43\n",
      "8. area/ipvs: 32\n",
      "9. area/kubeadm: 29\n",
      "10. area/api: 28\n",
      "11. area/provider/gcp: 28\n",
      "12. area/batch: 28\n",
      "13. area/deflake: 28\n",
      "14. area/code-organization: 28\n",
      "15. area/security: 28\n",
      "16. area/etcd: 28\n",
      "17. area/custom-resources: 28\n",
      "18. area/provider/aws: 28\n",
      "19. area/conformance: 27\n",
      "20. area/client-libraries: 27\n",
      "21. area/network-policy: 26\n",
      "22. area/kube-proxy: 25\n",
      "23. area/release-eng: 23\n",
      "24. area/e2e-test-framework: 21\n",
      "\n",
      "=== PROCESSING TESTING DATA ===\n",
      "\n",
      "Applying token length filtering to testing data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 245/245 [00:00<00:00, 634.51it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 229.49, Std Dev: 206.61\n",
      "  Min: 31, Max: 1604\n",
      "  25th percentile: 102.00\n",
      "  50th percentile (median): 161.00\n",
      "  75th percentile: 287.00\n",
      "Applied 3.0 std dev threshold: (1.00, 849.30)\n",
      "Removed 4 samples by std dev filtering (1.63% of data)\n",
      "Total removed: 4 samples (1.63% of original data)\n",
      "Remaining: 241 samples (98.37% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 213.93, Std Dev: 164.74\n",
      "  Min: 31, Max: 810\n",
      "  25th percentile: 101.00\n",
      "  50th percentile (median): 160.00\n",
      "  75th percentile: 271.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 241\n",
      "Dataset size after basic cleaning: 241 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 18\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 18 (100.00% of labels)\n",
      "Samples remaining after label filtering: 241 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 47\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 47 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 5)\n",
      "Removed 0 samples with too many or zero labels (0.00% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 241\n",
      "Final dataset size: 241 (100.00% of original data)\n",
      "Total samples removed: 0 (0.00% of original data)\n",
      "\n",
      "=== TESTING DATASET STATISTICS ===\n",
      "Initial testing dataset size: 245\n",
      "Final testing dataset size: 241\n",
      "Total samples removed: 4 (1.63% of original testing data)\n",
      "Calculating final token lengths for metadata...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1233/1233 [00:01<00:00, 658.35it/s]\n",
      "Calculating token lengths: 100%|██████████| 241/241 [00:00<00:00, 730.99it/s]\n",
      "/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_label.py:895: UserWarning: unknown class(es) ['area/provider/openstack', 'area/provider/vmware'] will be ignored\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== TOKEN LENGTH SUMMARY ===\n",
      "Training set:\n",
      "  Maximum token length: 925\n",
      "  Mean token length: 248.07\n",
      "  Median token length: 206.00\n",
      "Testing set:\n",
      "  Maximum token length: 810\n",
      "  Mean token length: 213.93\n",
      "  Median token length: 160.00\n",
      "Encoding labels...\n",
      "Training set label density: 0.0532\n",
      "Average labels per sample: 1.33\n",
      "Feature selection enabled: False\n",
      "Feature selection disabled\n",
      "Feature selection disabled, using all labels\n",
      "Training samples: 1233, Testing samples: 241\n",
      "Using larger batch size of 32 for 2 GPUs\n",
      "Initializing model...\n",
      "Model wrapped in DataParallel\n",
      "Starting training for 20 epochs...\n",
      "\n",
      "Epoch 1/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:59<00:00,  1.53s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.4716, Train Accuracy (Exact Match): 0.0008\n",
      "Test Loss: 0.1839\n",
      "Test Accuracy (Exact Match): 0.0207\n",
      "Test Accuracy (Partial Match): 0.0000\n",
      "Test Accuracy (Jaccard): 0.0000\n",
      "Test Precision: 0.0000, Test Recall: 0.0000, Test F1: 0.0000\n",
      "Saved initial model to ./results/run_20250429_155656_all_text/best_model_all_text.pt as baseline\n",
      "\n",
      "Epoch 2/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1869, Train Accuracy (Exact Match): 0.0000\n",
      "Test Loss: 0.1647\n",
      "Test Accuracy (Exact Match): 0.0207\n",
      "Test Accuracy (Partial Match): 0.0000\n",
      "Test Accuracy (Jaccard): 0.0000\n",
      "Test Precision: 0.0000, Test Recall: 0.0000, Test F1: 0.0000\n",
      "\n",
      "Epoch 3/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1756, Train Accuracy (Exact Match): 0.0000\n",
      "Test Loss: 0.1618\n",
      "Test Accuracy (Exact Match): 0.0207\n",
      "Test Accuracy (Partial Match): 0.0000\n",
      "Test Accuracy (Jaccard): 0.0000\n",
      "Test Precision: 0.0000, Test Recall: 0.0000, Test F1: 0.0000\n",
      "\n",
      "Epoch 4/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1662, Train Accuracy (Exact Match): 0.0081\n",
      "Test Loss: 0.1547\n",
      "Test Accuracy (Exact Match): 0.0207\n",
      "Test Accuracy (Partial Match): 0.0000\n",
      "Test Accuracy (Jaccard): 0.0000\n",
      "Test Precision: 0.0000, Test Recall: 0.0000, Test F1: 0.0000\n",
      "\n",
      "Epoch 5/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1526, Train Accuracy (Exact Match): 0.0681\n",
      "Test Loss: 0.1406\n",
      "Test Accuracy (Exact Match): 0.1286\n",
      "Test Accuracy (Partial Match): 0.1470\n",
      "Test Accuracy (Jaccard): 0.1428\n",
      "Test Precision: 0.1743, Test Recall: 0.1470, Test F1: 0.1544\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 6/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1266, Train Accuracy (Exact Match): 0.2636\n",
      "Test Loss: 0.1246\n",
      "Test Accuracy (Exact Match): 0.3485\n",
      "Test Accuracy (Partial Match): 0.4665\n",
      "Test Accuracy (Jaccard): 0.4315\n",
      "Test Precision: 0.4851, Test Recall: 0.4665, Test F1: 0.4611\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 7/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1052, Train Accuracy (Exact Match): 0.4112\n",
      "Test Loss: 0.1168\n",
      "Test Accuracy (Exact Match): 0.3693\n",
      "Test Accuracy (Partial Match): 0.5124\n",
      "Test Accuracy (Jaccard): 0.4673\n",
      "Test Precision: 0.5201, Test Recall: 0.5124, Test F1: 0.5005\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 8/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0903, Train Accuracy (Exact Match): 0.5061\n",
      "Test Loss: 0.1048\n",
      "Test Accuracy (Exact Match): 0.3983\n",
      "Test Accuracy (Partial Match): 0.5363\n",
      "Test Accuracy (Jaccard): 0.4944\n",
      "Test Precision: 0.5515, Test Recall: 0.5363, Test F1: 0.5275\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 9/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0782, Train Accuracy (Exact Match): 0.5807\n",
      "Test Loss: 0.0992\n",
      "Test Accuracy (Exact Match): 0.5021\n",
      "Test Accuracy (Partial Match): 0.6642\n",
      "Test Accuracy (Jaccard): 0.6099\n",
      "Test Precision: 0.6635, Test Recall: 0.6642, Test F1: 0.6463\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 10/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0693, Train Accuracy (Exact Match): 0.6561\n",
      "Test Loss: 0.0952\n",
      "Test Accuracy (Exact Match): 0.5145\n",
      "Test Accuracy (Partial Match): 0.7088\n",
      "Test Accuracy (Jaccard): 0.6399\n",
      "Test Precision: 0.6873, Test Recall: 0.7088, Test F1: 0.6804\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 11/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0616, Train Accuracy (Exact Match): 0.6796\n",
      "Test Loss: 0.0923\n",
      "Test Accuracy (Exact Match): 0.5560\n",
      "Test Accuracy (Partial Match): 0.7515\n",
      "Test Accuracy (Jaccard): 0.6770\n",
      "Test Precision: 0.7185, Test Recall: 0.7515, Test F1: 0.7174\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 12/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0563, Train Accuracy (Exact Match): 0.7145\n",
      "Test Loss: 0.0881\n",
      "Test Accuracy (Exact Match): 0.5643\n",
      "Test Accuracy (Partial Match): 0.7598\n",
      "Test Accuracy (Jaccard): 0.6885\n",
      "Test Precision: 0.7371, Test Recall: 0.7598, Test F1: 0.7296\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 13/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0522, Train Accuracy (Exact Match): 0.7413\n",
      "Test Loss: 0.0886\n",
      "Test Accuracy (Exact Match): 0.5602\n",
      "Test Accuracy (Partial Match): 0.7764\n",
      "Test Accuracy (Jaccard): 0.6940\n",
      "Test Precision: 0.7413, Test Recall: 0.7764, Test F1: 0.7385\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 14/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0486, Train Accuracy (Exact Match): 0.7705\n",
      "Test Loss: 0.0906\n",
      "Test Accuracy (Exact Match): 0.5602\n",
      "Test Accuracy (Partial Match): 0.7743\n",
      "Test Accuracy (Jaccard): 0.6926\n",
      "Test Precision: 0.7392, Test Recall: 0.7743, Test F1: 0.7365\n",
      "\n",
      "Epoch 15/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0443, Train Accuracy (Exact Match): 0.7867\n",
      "Test Loss: 0.0849\n",
      "Test Accuracy (Exact Match): 0.5685\n",
      "Test Accuracy (Partial Match): 0.7868\n",
      "Test Accuracy (Jaccard): 0.7037\n",
      "Test Precision: 0.7517, Test Recall: 0.7868, Test F1: 0.7482\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 16/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0421, Train Accuracy (Exact Match): 0.7981\n",
      "Test Loss: 0.0875\n",
      "Test Accuracy (Exact Match): 0.5685\n",
      "Test Accuracy (Partial Match): 0.7938\n",
      "Test Accuracy (Jaccard): 0.7061\n",
      "Test Precision: 0.7498, Test Recall: 0.7938, Test F1: 0.7518\n",
      "Saved new best model to ./results/run_20250429_155656_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 17/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Early stopping triggered\n",
      "Train Loss: 0.0388, Train Accuracy (Exact Match): 0.8110\n",
      "Test Loss: 0.0877\n",
      "Test Accuracy (Exact Match): 0.5685\n",
      "Test Accuracy (Partial Match): 0.7868\n",
      "Test Accuracy (Jaccard): 0.7026\n",
      "Test Precision: 0.7475, Test Recall: 0.7868, Test F1: 0.7471\n",
      "Early stopping triggered. Terminating training.\n",
      "\n",
      "Loading best model for final evaluation...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_19/3276856348.py:1425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n",
      "  model.module.load_state_dict(torch.load(best_model_path))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Final evaluation with default threshold (0.5):\n",
      "Exact Match Accuracy: 0.5685\n",
      "Partial Match Accuracy: 0.7938\n",
      "Jaccard Similarity: 0.7061\n",
      "Precision: 0.7498\n",
      "Recall: 0.7938\n",
      "F1 Score: 0.7518\n",
      "\n",
      "Training completed! Results saved to ./results/run_20250429_155656_all_text\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x2500 with 40 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA04AAAHWCAYAAABACtmGAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABrqUlEQVR4nO3dd3iV9f3/8dcZycneZEEgjMgIQ2SpCDhQsFbFraWCtNW24kDUn9pWRG1F3F9FcbRFa13VKrUuFAQnFgRBBMSwQoAMErJ3zrl/f5zkJCHhJIQkd3LyfFzXuXLOPc55n2NM8uLzud8fi2EYhgAAAAAAR2U1uwAAAAAA6OoITgAAAADQAoITAAAAALSA4AQAAAAALSA4AQAAAEALCE4AAAAA0AKCEwAAAAC0gOAEAAAAAC0gOAEAAABACwhOAOADrrnmGiUnJ7fp3IULF8pisbRvQR1k7969slgsevHFF80upUtLTk7WNddc43m8Zs0aWSwWrVmzxrSaAKC7IzgBQAeyWCytuvXUP2ivueYahYSEHHW/xWLRDTfccNyv88wzzxC2jtG2bdu0cOFC7d27t8Nf64EHHtDy5cs7/HUA4HjYzS4AAHzZyy+/3OjxP/7xD33yySdNtg8dOvS4XueFF16Qy+Vq07l/+tOfdOeddx7X63eWfv36qby8XH5+fsd03jPPPKOYmJhGozDwbtu2bbr33nt1+umnt3k0s7UeeOABXXrppZoxY0aHvg4AHA+CEwB0oF/+8peNHn/zzTf65JNPmmw/UllZmYKCglr9OscaJBqy2+2y27vHrwOLxaKAgACzy5AkVVRUyN/fX1YrkzcAoCfgpz0AmOz000/X8OHDtWHDBk2ePFlBQUH6wx/+IEn6z3/+o/POO0+JiYlyOBwaOHCg7r//fjmdzkbPceQ1TnXXAj3yyCN6/vnnNXDgQDkcDo0bN07r169vdG5z1zjVTZFbvny5hg8fLofDodTUVH300UdN6l+zZo3Gjh2rgIAADRw4UM8991yHXTfV3DVOWVlZmjNnjvr06SOHw6GEhARdeOGFnilmycnJ2rp1qz777DPP1MjTTz/dc/7u3bt12WWXKSoqSkFBQTr55JP1/vvvN3mPFotFr7/+uv70pz+pd+/eCgoK0qZNm2SxWPT44483qfXrr7+WxWLRa6+91m7v/5FHHtGpp56q6OhoBQYGasyYMXrrrbfa7fnrvPjii7rsssskSWeccUazU0o//PBDTZo0ScHBwQoNDdV5552nrVu3evZ/+umnslqtWrBgQaPnfvXVV2WxWLR06VJJ7u+10tJSvfTSS57XYWQQQFfUPf6JEQB8XF5ens4991xdeeWV+uUvf6m4uDhJ7j9gQ0JCNH/+fIWEhOjTTz/VggULVFRUpIcffrjF53311VdVXFys3/72t7JYLHrooYd08cUXa/fu3S2OUn355Zd6++23df311ys0NFRPPvmkLrnkEu3bt0/R0dGSpO+++07Tp09XQkKC7r33XjmdTt13333q1avXMb3/3NzcYzq+oUsuuURbt27VjTfeqOTkZOXk5OiTTz7Rvn37lJycrCeeeEI33nijQkJC9Mc//lGSPJ9vdna2Tj31VJWVlemmm25SdHS0XnrpJV1wwQV66623dNFFFzV6rfvvv1/+/v667bbbVFlZqSFDhmjixIl65ZVXdMsttzQ69pVXXlFoaKguvPDCNr+3I/3f//2fLrjgAs2cOVNVVVV6/fXXddlll+m9997Teeed126vM3nyZN1000168skn9Yc//MEzlbTu68svv6zZs2dr2rRpWrx4scrKyrR06VKddtpp+u6775ScnKwzzzxT119/vRYtWqQZM2bopJNOUmZmpm688UZNnTpVv/vd7zzP9Zvf/Ebjx4/XddddJ0kaOHBgu70XAGg3BgCg08ydO9c48kfvlClTDEnGs88+2+T4srKyJtt++9vfGkFBQUZFRYVn2+zZs41+/fp5Hu/Zs8eQZERHRxuHDx/2bP/Pf/5jSDL++9//erbdc889TWqSZPj7+xs7d+70bNu8ebMhyXjqqac8284//3wjKCjIOHDggGdbWlqaYbfbmzxnc2bPnm1I8nqbO3duk/e1bNkywzAMIz8/35BkPPzww15fJzU11ZgyZUqT7fPmzTMkGV988YVnW3FxsdG/f38jOTnZcDqdhmEYxurVqw1JxoABA5r8N3nuuecMScb27ds926qqqoyYmBhj9uzZLX4Gx+LI166qqjKGDx9unHnmmY229+vXr9Fr19W/evXqVr/Wm2++2ew5xcXFRkREhHHttdc22p6VlWWEh4c32l5aWmoMGjTISE1NNSoqKozzzjvPCAsLM9LT0xudGxwc3O6fFQC0N6bqAUAX4HA4NGfOnCbbAwMDPfeLi4uVm5urSZMmqaysTD/++GOLz3vFFVcoMjLS83jSpEmS3NPTWjJ16tRG//I/cuRIhYWFec51Op1auXKlZsyYocTERM9xgwYN0rnnntvi89cJCAjQJ5980uytJYGBgfL399eaNWuUn5/f6tes88EHH2j8+PE67bTTPNtCQkJ03XXXae/evdq2bVuj42fPnt3ov4kkXX755QoICNArr7zi2bZixQrl5ua2eC3bsWr42vn5+SosLNSkSZO0cePGdn0dbz755BMVFBToqquuUm5urudms9k0YcIErV692nNsUFCQXnzxRW3fvl2TJ0/W+++/r8cff1x9+/bttHoBoL0wVQ8AuoDevXvL39+/yfatW7fqT3/6kz799FMVFRU12ldYWNji8x75B2pdiGpNyGjuj9vIyEjPuTk5OSovL9egQYOaHNfctqOx2WyaOnVqq49vyOFwaPHixbr11lsVFxenk08+WT//+c81a9YsxcfHt3h+enq6JkyY0GR73ZS09PR0DR8+3LO9f//+TY6NiIjQ+eefr1dffVX333+/JPc0vd69e+vMM8/0+vpZWVmNHoeHhzcJZg299957+vOf/6xNmzapsrLSs70z1+FKS0uTpKO+t7CwsEaPJ06cqN///vd6+umnNW3aNP3qV7/q8BoBoCMQnACgC2juj+WCggJNmTJFYWFhuu+++zRw4EAFBARo48aNuuOOO1rVftxmszW73TCMDj23M82bN0/nn3++li9frhUrVujuu+/WokWL9Omnn2r06NHt+lpHCzWzZs3Sm2++qa+//lojRozQu+++q+uvv77FjnsJCQmNHi9btuyojRG++OILXXDBBZo8ebKeeeYZJSQkyM/PT8uWLdOrr77apvfTFnXfdy+//HKz4fTIDo2VlZWephK7du065o6RANBVEJwAoItas2aN8vLy9Pbbb2vy5Mme7Xv27DGxqnqxsbEKCAjQzp07m+xrbltHGjhwoG699VbdeuutSktL04knnqhHH31U//znPyUdfUSmX79+2rFjR5PtddMg+/Xr16rXnz59unr16qVXXnlFEyZMUFlZma6++uoWzztyOmJqaupRj/33v/+tgIAArVixQg6Hw7N92bJlrarxWB3tM6ubvhkbG9uqkcJ77rlH27dv1yOPPKI77rhDd955p5588slWvRYAdCUEJwDooupGfBqO8FRVVemZZ54xq6RG6qbYLV++XAcPHvRc57Rz5059+OGHnVJDWVmZrFZro7WdBg4cqNDQ0EZT2YKDg1VQUNDk/J/97Gd64okntHbtWp1yyimSpNLSUj3//PNKTk7WsGHDWlWH3W7XVVddpVdffVXbt2/XiBEjNHLkyBbPO5YpijabTRaLpVEr+r1792r58uWtfo5jERwcLElNPrdp06YpLCxMDzzwgM4444wm3RkPHTrk6ar4v//9T4888ojmzZunW2+9Vbm5uVq8eLEuueQSTZkypdFrNfffBwC6EoITAHRRp556qiIjIzV79mzddNNNslgsevnll7vUVLmFCxfq448/9lzH4nQ6tWTJEg0fPlybNm3q8Nf/6aefdNZZZ+nyyy/XsGHDZLfb9c477yg7O1tXXnml57gxY8Zo6dKl+vOf/6xBgwYpNjZWZ555pu6880699tprOvfcc3XTTTcpKipKL730kvbs2aN///vfx7S47axZs/Tkk09q9erVWrx4cbu/1/POO0+PPfaYpk+frl/84hfKycnR008/rUGDBun7779v99c78cQTZbPZtHjxYhUWFsrhcOjMM89UbGysli5dqquvvlonnXSSrrzySvXq1Uv79u3T+++/r4kTJ2rJkiWqqKjQ7NmzlZKSor/85S+SpHvvvVf//e9/NWfOHG3ZssUTzsaMGaOVK1fqscceU2Jiovr379/stWcAYCaCEwB0UdHR0Xrvvfd066236k9/+pMiIyP1y1/+UmeddZamTZtmdnmS3H/wfvjhh7rtttt09913KykpSffdd5+2b9/eqq5/xyspKUlXXXWVVq1apZdffll2u11DhgzRv/71L11yySWe4xYsWKD09HQ99NBDKi4u1pQpU3TmmWcqLi5OX3/9te644w499dRTqqio0MiRI/Xf//73mNdFGjNmjFJTU7V9+3bNnDmzvd+qzjzzTP3tb3/Tgw8+qHnz5ql///5avHix9u7d2yHBKT4+Xs8++6wWLVqkX//613I6nVq9erViY2P1i1/8QomJiXrwwQf18MMPq7KyUr1799akSZM83SH/8Ic/aOfOnfr66689I4L+/v566aWXdPLJJ+v222/3jJ4+9thjuu666/SnP/1J5eXlmj17NsEJQJdjMbrSP10CAHzCjBkztHXrVk8Htp5i9OjRioqK0qpVq8wuBQDQzljHCQBwXMrLyxs9TktL0wcffKDTTz/dnIJM8u2332rTpk2aNWuW2aUAADoAI04AgOOSkJCga665RgMGDFB6erqWLl2qyspKfffdd0pJSTG7vA73ww8/aMOGDXr00UeVm5ur3bt3N2pW0dWUl5e3uAZYVFRUs+uKAUBPxjVOAIDjMn36dL322mvKysqSw+HQKaecogceeKBHhCZJeuutt3Tfffdp8ODBeu2117p0aJKkN954w3Md0tGsXr26x40YAkBLGHECAKAHyczM1NatW70eM2bMGEVGRnZSRQDQPRCcAAAAAKAFNIcAAAAAgBb0uGucXC6XDh48qNDQUFksFrPLAQAAAGASwzBUXFysxMTEFhc973HB6eDBg0pKSjK7DAAAAABdREZGhvr06eP1mB4XnEJDQyW5P5ywsDCTqwEAAABglqKiIiUlJXkygjc9LjjVTc8LCwsjOAEAAABo1SU8NIcAAAAAgBYQnAAAAACgBQQnAAAAAGhBj7vGCQAAAL7D6XSqurra7DLQhfn5+clmsx338xCcAAAA0C2VlJRo//79MgzD7FLQhVksFvXp00chISHH9TwEJwAAAHQ7TqdT+/fvV1BQkHr16tWqrmjoeQzD0KFDh7R//36lpKQc18gTwQkAAADdTnV1tQzDUK9evRQYGGh2OejCevXqpb1796q6uvq4ghPNIQAAANBtMdKElrTX9wjBCQAAAABaQHACAAAAgBYQnAAAAIBuLDk5WU888USrj1+zZo0sFosKCgo6rCZfRHACAAAAOoHFYvF6W7hwYZued/369bruuutaffypp56qzMxMhYeHt+n1WsvXAhpd9QAAAIBOkJmZ6bn/xhtvaMGCBdqxY4dnW8N1hgzDkNPplN3e8p/rvXr1OqY6/P39FR8ff0zngBEnU73w+W6d9egavbx2r9mlAAAAdGuGYaisqsaUW2sX4I2Pj/fcwsPDZbFYPI9//PFHhYaG6sMPP9SYMWPkcDj05ZdfateuXbrwwgsVFxenkJAQjRs3TitXrmz0vEdO1bNYLPrrX/+qiy66SEFBQUpJSdG7777r2X/kSNCLL76oiIgIrVixQkOHDlVISIimT5/eKOjV1NTopptuUkREhKKjo3XHHXdo9uzZmjFjRpv/m+Xn52vWrFmKjIxUUFCQzj33XKWlpXn2p6en6/zzz1dkZKSCg4OVmpqqDz74wHPuzJkzPe3oU1JStGzZsjbX0hqMOJmouKJauw6V6vv9hWaXAgAA0K2VVzs1bMEKU157233TFOTfPn9W33nnnXrkkUc0YMAARUZGKiMjQz/72c/0l7/8RQ6HQ//4xz90/vnna8eOHerbt+9Rn+fee+/VQw89pIcfflhPPfWUZs6cqfT0dEVFRTV7fFlZmR555BG9/PLLslqt+uUvf6nbbrtNr7zyiiRp8eLFeuWVV7Rs2TINHTpU//d//6fly5frjDPOaPN7veaaa5SWlqZ3331XYWFhuuOOO/Szn/1M27Ztk5+fn+bOnauqqip9/vnnCg4O1rZt2zyjcnfffbe2bdumDz/8UDExMdq5c6fKy8vbXEtrEJxMNCzRPa9068EikysBAABAV3Dffffp7LPP9jyOiorSqFGjPI/vv/9+vfPOO3r33Xd1ww03HPV5rrnmGl111VWSpAceeEBPPvmk1q1bp+nTpzd7fHV1tZ599lkNHDhQknTDDTfovvvu8+x/6qmndNddd+miiy6SJC1ZssQz+tMWdYHpq6++0qmnnipJeuWVV5SUlKTly5frsssu0759+3TJJZdoxIgRkqQBAwZ4zt+3b59Gjx6tsWPHSnKPunU0gpOJUhPDJElpOcWqqnHJ387MSQAAgLYI9LNp233TTHvt9lIXBOqUlJRo4cKFev/995WZmamamhqVl5dr3759Xp9n5MiRnvvBwcEKCwtTTk7OUY8PCgryhCZJSkhI8BxfWFio7OxsjR8/3rPfZrNpzJgxcrlcx/T+6mzfvl12u10TJkzwbIuOjtbgwYO1fft2SdJNN92k3//+9/r44481depUXXLJJZ739fvf/16XXHKJNm7cqHPOOUczZszwBLCOwl/qJuoTGajwQD9VOw39lF1sdjkAAADdlsViUZC/3ZSbxWJpt/cRHBzc6PFtt92md955Rw888IC++OILbdq0SSNGjFBVVZXX5/Hz82vy+XgLOc0d39prtzrKb37zG+3evVtXX321tmzZorFjx+qpp56SJJ177rlKT0/XLbfcooMHD+qss87Sbbfd1qH1EJxMZLFYNCzBPeq0jel6AAAAOMJXX32la665RhdddJFGjBih+Ph47d27t1NrCA8PV1xcnNavX+/Z5nQ6tXHjxjY/59ChQ1VTU6P//e9/nm15eXnasWOHhg0b5tmW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xSKXy3Vc9R+vZcuWae3atTr11FP1xhtv6IQTTvC874ULF2rr1q0677zz9Omnn2rYsGF65513TKmT4NSFWCwWpusBAAD0MHFxcUpMTNTu3bs1aNCgRrf+/ft7jgsLC9MVV1yhF154QW+88Yb+/e9/6/Dhw5LcgcjpdB5XHYMHD1ZNTY2+++47z7adO3cqPz+/zc85dOhQbd68WaWlpZ5tX331laxWqwYPHuzZNnr0aN111136+uuvNXz4cL366quefSeccIJuueUWffzxx7r44ou1bNmyNtdzPJiq18UMSwzTF2m5dNYDAADoQe69917ddNNNCg8P1/Tp01VZWalvv/1W+fn5mj9/vh577DElJCRo9OjRslqtevPNNxUfH6+IiAhJ7s56q1at0sSJE+VwONo0vW7IkCGaOnWqrrvuOi1dulR+fn669dZbFRgY6GnWcDTl5eXatGlTo22hoaGaOXOm7rnnHs2ePVsLFy7UoUOHdOONN+rqq69WXFyc9uzZo+eff14XXHCBEhMTtWPHDqWlpWnWrFkqLy/X7bffrksvvVT9+/fX/v37tX79el1yySXH/N7aA8Gpi0lNdM9jZcQJAACg5/jNb36joKAgPfzww7r99tsVHBysESNGaN68eZLcIeShhx5SWlqabDabxo0bpw8++EBWq3sC2aOPPqr58+frhRdeUO/evbV379421fGPf/xDv/71rzV58mTFx8dr0aJF2rp1qwICArye99NPP2n06NGNtp111llauXKlVqxYoZtvvlnjxo1TUFCQLrnkEj322GOSpKCgIP3444966aWXlJeXp4SEBM2dO1e//e1vVVNTo7y8PM2aNUvZ2dmKiYnRxRdfrHvvvbdN7+14WQyjlY3nfURRUZHCw8NVWFiosLAws8tpYtehEp316GcK8LNq673TZbMe35xZAAAAX1RRUaE9e/aof//+Lf5Rj7bbv3+/kpKStHLlSp111llml9Mm3r5XjiUbMOLUxfSPDlaQv01lVU7tPlSilLhQs0sCAABAD/Hpp5+qpKREI0aMUGZmpv7f//t/Sk5O1uTJk80uzXQ0h+hirFaLhibQIAIAAACdr7q6Wn/4wx+Umpqqiy66SL169fIshtvTMeLUBaUmhmlDer62HizUjNG9zS4HAAAAPcS0adM0bdo0s8vokhhx6oKGMeIEAAAAdCkEpy6o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\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    # Create parser and handle Jupyter/Colab environment by ignoring unknown args\n",
    "    parser = argparse.ArgumentParser(description='Train DeBERTa for multi-label classification')\n",
    "    \n",
    "    # Data parameters\n",
    "    parser.add_argument('--train_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv\",\n",
    "                        help='Path to the JSON training data file')\n",
    "    parser.add_argument('--test_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv\",\n",
    "                        help='Path to the JSON testing data file')\n",
    "    parser.add_argument('--text_column', type=str, default='all_text',\n",
    "                        help='Column name with the text data to use for training (e.g., all_text, all_text_0.5)')\n",
    "    parser.add_argument('--results_dir', type=str, default='./results',\n",
    "                        help='Directory to save results')\n",
    "    \n",
    "    # Label filtering parameters\n",
    "    parser.add_argument('--min_label_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label to be considered')\n",
    "    parser.add_argument('--max_label_len', type=int, default=5,\n",
    "                        help='Maximum number of labels per sample (default: 5)')\n",
    "    parser.add_argument('--min_label_comb_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label combination')\n",
    "    \n",
    "    # Training parameters\n",
    "    parser.add_argument('--batch_size', type=int, default=16, help='Training batch size')\n",
    "    parser.add_argument('--epochs', type=int, default=20, help='Number of training epochs')\n",
    "    parser.add_argument('--learning_rate', type=float, default=2e-5, help='Learning rate')\n",
    "    parser.add_argument('--patience', type=int, default=3, help='Early stopping patience')\n",
    "    parser.add_argument('--use_class_weights', action='store_true', help='Use class weights for imbalanced data')\n",
    "    \n",
    "    # Token length parameters\n",
    "    parser.add_argument('--max_length', type=int, default=512, help='Maximum token length for model input')\n",
    "    \n",
    "    # Token length filtering parameters\n",
    "    parser.add_argument('--token_length_filter', type=str, choices=['2std', '3std', None], default='3std',\n",
    "                        help='Remove token length outliers based on standard deviation threshold')\n",
    "    parser.add_argument('--min_token_threshold', type=int, default=None,\n",
    "                        help='Minimum number of tokens required for a sample')\n",
    "    \n",
    "    # Token reduction parameters for handling long tokens\n",
    "    parser.add_argument('--token_reduction_strategy', type=str, \n",
    "                        choices=['simple', 'smart_truncation', 'extractive_summarization', 'hybrid'], \n",
    "                        default=None,\n",
    "                        help='Strategy to handle long tokens exceeding max_length: '\n",
    "                             'simple=simple truncation, '\n",
    "                             'smart_truncation=keep beginning and end, '\n",
    "                             'extractive_summarization=extract key sentences, '\n",
    "                             'hybrid=combine summarization and truncation')\n",
    "    \n",
    "    # Feature selection parameters\n",
    "    parser.add_argument('--feature_selection', action='store_true', \n",
    "                        help='Enable hybrid feature selection')\n",
    "    parser.add_argument('--filter_k', type=int, default=20, \n",
    "                        help='Number of labels to retain after filter stage')\n",
    "    parser.add_argument('--final_k', type=int, default=10, \n",
    "                        help='Final number of labels to select')\n",
    "    parser.add_argument('--vectorizer', type=str, choices=['count', 'tfidf'], default='count',\n",
    "                        help='Vectorizer to use for feature selection')\n",
    "    parser.add_argument('--wrapper_method', type=str, choices=['rf', 'lr'], default='rf',\n",
    "                        help='Wrapper method to use for feature selection (rf: Random Forest, lr: Logistic Regression)')\n",
    "    \n",
    "    # Parse arguments, ignore unknown args for compatibility with Jupyter/Colab\n",
    "    args, unknown = parser.parse_known_args()\n",
    "    \n",
    "    # If the script is run directly, not imported\n",
    "    results = main(args)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0015d09b",
   "metadata": {
    "papermill": {
     "duration": 0.120001,
     "end_time": "2025-04-29T16:16:34.484808",
     "exception": false,
     "start_time": "2025-04-29T16:16:34.364807",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "with weight labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "450505f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T16:16:34.721406Z",
     "iopub.status.busy": "2025-04-29T16:16:34.720790Z",
     "iopub.status.idle": "2025-04-29T16:39:38.014117Z",
     "shell.execute_reply": "2025-04-29T16:39:38.013275Z"
    },
    "papermill": {
     "duration": 1383.412551,
     "end_time": "2025-04-29T16:39:38.015506",
     "exception": false,
     "start_time": "2025-04-29T16:16:34.602955",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using 2 GPUs: [0, 1]\n",
      "Loading tokenizer...\n",
      "Loading training data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv...\n",
      "Loading testing data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv...\n",
      "\n",
      "=== PROCESSING TRAINING DATA ===\n",
      "\n",
      "Applying token length filtering to training data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1268/1268 [00:03<00:00, 370.74it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 268.78, Std Dev: 229.74\n",
      "  Min: 26, Max: 3448\n",
      "  25th percentile: 120.75\n",
      "  50th percentile (median): 209.50\n",
      "  75th percentile: 349.25\n",
      "Applied 3.0 std dev threshold: (1.00, 957.99)\n",
      "Removed 17 samples by std dev filtering (1.34% of data)\n",
      "Total removed: 17 samples (1.34% of original data)\n",
      "Remaining: 1251 samples (98.66% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 252.85, Std Dev: 168.56\n",
      "  Min: 26, Max: 951\n",
      "  25th percentile: 120.00\n",
      "  50th percentile (median): 207.00\n",
      "  75th percentile: 346.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 1251\n",
      "Dataset size after basic cleaning: 1251 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 25\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 25 (100.00% of labels)\n",
      "Samples remaining after label filtering: 1251 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 107\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 107 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 5)\n",
      "Removed 18 samples with too many or zero labels (1.44% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 1251\n",
      "Final dataset size: 1233 (98.56% of original data)\n",
      "Total samples removed: 18 (1.44% of original data)\n",
      "\n",
      "=== TRAINING DATASET STATISTICS ===\n",
      "Initial training dataset size: 1268\n",
      "Final training dataset size: 1233\n",
      "Total samples removed: 35 (2.76% of original training data)\n",
      "\n",
      "Training Label Distribution:\n",
      "0. area/kubelet: 290\n",
      "1. area/test: 289\n",
      "2. area/apiserver: 173\n",
      "3. area/cloudprovider: 146\n",
      "4. area/kubectl: 112\n",
      "5. area/provider/azure: 63\n",
      "6. area/dependency: 62\n",
      "7. area/code-generation: 43\n",
      "8. area/ipvs: 32\n",
      "9. area/kubeadm: 29\n",
      "10. area/api: 28\n",
      "11. area/provider/gcp: 28\n",
      "12. area/batch: 28\n",
      "13. area/deflake: 28\n",
      "14. area/code-organization: 28\n",
      "15. area/security: 28\n",
      "16. area/etcd: 28\n",
      "17. area/custom-resources: 28\n",
      "18. area/provider/aws: 28\n",
      "19. area/conformance: 27\n",
      "20. area/client-libraries: 27\n",
      "21. area/network-policy: 26\n",
      "22. area/kube-proxy: 25\n",
      "23. area/release-eng: 23\n",
      "24. area/e2e-test-framework: 21\n",
      "\n",
      "=== PROCESSING TESTING DATA ===\n",
      "\n",
      "Applying token length filtering to testing data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 245/245 [00:00<00:00, 630.97it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 229.49, Std Dev: 206.61\n",
      "  Min: 31, Max: 1604\n",
      "  25th percentile: 102.00\n",
      "  50th percentile (median): 161.00\n",
      "  75th percentile: 287.00\n",
      "Applied 3.0 std dev threshold: (1.00, 849.30)\n",
      "Removed 4 samples by std dev filtering (1.63% of data)\n",
      "Total removed: 4 samples (1.63% of original data)\n",
      "Remaining: 241 samples (98.37% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 213.93, Std Dev: 164.74\n",
      "  Min: 31, Max: 810\n",
      "  25th percentile: 101.00\n",
      "  50th percentile (median): 160.00\n",
      "  75th percentile: 271.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 241\n",
      "Dataset size after basic cleaning: 241 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 18\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 18 (100.00% of labels)\n",
      "Samples remaining after label filtering: 241 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 47\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 47 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 5)\n",
      "Removed 0 samples with too many or zero labels (0.00% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 241\n",
      "Final dataset size: 241 (100.00% of original data)\n",
      "Total samples removed: 0 (0.00% of original data)\n",
      "\n",
      "=== TESTING DATASET STATISTICS ===\n",
      "Initial testing dataset size: 245\n",
      "Final testing dataset size: 241\n",
      "Total samples removed: 4 (1.63% of original testing data)\n",
      "Calculating final token lengths for metadata...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1233/1233 [00:01<00:00, 652.84it/s]\n",
      "Calculating token lengths: 100%|██████████| 241/241 [00:00<00:00, 752.56it/s]\n",
      "/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_label.py:895: UserWarning: unknown class(es) ['area/provider/openstack', 'area/provider/vmware'] will be ignored\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== TOKEN LENGTH SUMMARY ===\n",
      "Training set:\n",
      "  Maximum token length: 925\n",
      "  Mean token length: 248.07\n",
      "  Median token length: 206.00\n",
      "Testing set:\n",
      "  Maximum token length: 810\n",
      "  Mean token length: 213.93\n",
      "  Median token length: 160.00\n",
      "Encoding labels...\n",
      "Training set label density: 0.0532\n",
      "Average labels per sample: 1.33\n",
      "Feature selection enabled: False\n",
      "Feature selection disabled\n",
      "Feature selection disabled, using all labels\n",
      "Training samples: 1233, Testing samples: 241\n",
      "Computing class weights for imbalanced labels...\n",
      "Using larger batch size of 32 for 2 GPUs\n",
      "Initializing model...\n",
      "Model wrapped in DataParallel\n",
      "Using weighted BCE loss\n",
      "Starting training for 20 epochs...\n",
      "\n",
      "Epoch 1/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:59<00:00,  1.53s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.8315, Train Accuracy (Exact Match): 0.0097\n",
      "Test Loss: 0.6249\n",
      "Test Accuracy (Exact Match): 0.0000\n",
      "Test Accuracy (Partial Match): 0.3733\n",
      "Test Accuracy (Jaccard): 0.1416\n",
      "Test Precision: 0.1582, Test Recall: 0.3733, Test F1: 0.2112\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 2/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.6563, Train Accuracy (Exact Match): 0.0292\n",
      "Test Loss: 0.5875\n",
      "Test Accuracy (Exact Match): 0.0083\n",
      "Test Accuracy (Partial Match): 0.7017\n",
      "Test Accuracy (Jaccard): 0.2037\n",
      "Test Precision: 0.2133, Test Recall: 0.7017, Test F1: 0.3122\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 3/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.5315, Train Accuracy (Exact Match): 0.0868\n",
      "Test Loss: 0.5335\n",
      "Test Accuracy (Exact Match): 0.0539\n",
      "Test Accuracy (Partial Match): 0.6831\n",
      "Test Accuracy (Jaccard): 0.2663\n",
      "Test Precision: 0.2733, Test Recall: 0.6831, Test F1: 0.3691\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 4/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.4358, Train Accuracy (Exact Match): 0.1906\n",
      "Test Loss: 0.4691\n",
      "Test Accuracy (Exact Match): 0.1618\n",
      "Test Accuracy (Partial Match): 0.6817\n",
      "Test Accuracy (Jaccard): 0.3745\n",
      "Test Precision: 0.3923, Test Recall: 0.6817, Test F1: 0.4664\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 5/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.3447, Train Accuracy (Exact Match): 0.3439\n",
      "Test Loss: 0.4141\n",
      "Test Accuracy (Exact Match): 0.2946\n",
      "Test Accuracy (Partial Match): 0.7632\n",
      "Test Accuracy (Jaccard): 0.5195\n",
      "Test Precision: 0.5435, Test Recall: 0.7632, Test F1: 0.6060\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 6/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2798, Train Accuracy (Exact Match): 0.4566\n",
      "Test Loss: 0.3758\n",
      "Test Accuracy (Exact Match): 0.3071\n",
      "Test Accuracy (Partial Match): 0.7680\n",
      "Test Accuracy (Jaccard): 0.5437\n",
      "Test Precision: 0.5721, Test Recall: 0.7680, Test F1: 0.6284\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 7/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2393, Train Accuracy (Exact Match): 0.5264\n",
      "Test Loss: 0.3662\n",
      "Test Accuracy (Exact Match): 0.3527\n",
      "Test Accuracy (Partial Match): 0.7687\n",
      "Test Accuracy (Jaccard): 0.5761\n",
      "Test Precision: 0.6090, Test Recall: 0.7687, Test F1: 0.6533\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 8/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2087, Train Accuracy (Exact Match): 0.5856\n",
      "Test Loss: 0.3465\n",
      "Test Accuracy (Exact Match): 0.4025\n",
      "Test Accuracy (Partial Match): 0.7867\n",
      "Test Accuracy (Jaccard): 0.6102\n",
      "Test Precision: 0.6420, Test Recall: 0.7867, Test F1: 0.6814\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 9/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1860, Train Accuracy (Exact Match): 0.6545\n",
      "Test Loss: 0.3268\n",
      "Test Accuracy (Exact Match): 0.3983\n",
      "Test Accuracy (Partial Match): 0.8095\n",
      "Test Accuracy (Jaccard): 0.6155\n",
      "Test Precision: 0.6446, Test Recall: 0.8095, Test F1: 0.6910\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 10/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1714, Train Accuracy (Exact Match): 0.6829\n",
      "Test Loss: 0.3325\n",
      "Test Accuracy (Exact Match): 0.3983\n",
      "Test Accuracy (Partial Match): 0.8220\n",
      "Test Accuracy (Jaccard): 0.6202\n",
      "Test Precision: 0.6493, Test Recall: 0.8220, Test F1: 0.6977\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 11/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1520, Train Accuracy (Exact Match): 0.7113\n",
      "Test Loss: 0.3137\n",
      "Test Accuracy (Exact Match): 0.4523\n",
      "Test Accuracy (Partial Match): 0.8303\n",
      "Test Accuracy (Jaccard): 0.6523\n",
      "Test Precision: 0.6831, Test Recall: 0.8303, Test F1: 0.7222\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 12/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:59<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1412, Train Accuracy (Exact Match): 0.7259\n",
      "Test Loss: 0.3181\n",
      "Test Accuracy (Exact Match): 0.4564\n",
      "Test Accuracy (Partial Match): 0.8282\n",
      "Test Accuracy (Jaccard): 0.6561\n",
      "Test Precision: 0.6868, Test Recall: 0.8282, Test F1: 0.7249\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 13/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1293, Train Accuracy (Exact Match): 0.7494\n",
      "Test Loss: 0.3086\n",
      "Test Accuracy (Exact Match): 0.4772\n",
      "Test Accuracy (Partial Match): 0.8241\n",
      "Test Accuracy (Jaccard): 0.6637\n",
      "Test Precision: 0.6944, Test Recall: 0.8241, Test F1: 0.7284\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 14/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1210, Train Accuracy (Exact Match): 0.7559\n",
      "Test Loss: 0.3099\n",
      "Test Accuracy (Exact Match): 0.4896\n",
      "Test Accuracy (Partial Match): 0.8261\n",
      "Test Accuracy (Jaccard): 0.6725\n",
      "Test Precision: 0.7032, Test Recall: 0.8261, Test F1: 0.7348\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 15/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1132, Train Accuracy (Exact Match): 0.7883\n",
      "Test Loss: 0.3055\n",
      "Test Accuracy (Exact Match): 0.5228\n",
      "Test Accuracy (Partial Match): 0.8241\n",
      "Test Accuracy (Jaccard): 0.6851\n",
      "Test Precision: 0.7165, Test Recall: 0.8241, Test F1: 0.7423\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 16/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1063, Train Accuracy (Exact Match): 0.7989\n",
      "Test Loss: 0.3054\n",
      "Test Accuracy (Exact Match): 0.5104\n",
      "Test Accuracy (Partial Match): 0.8365\n",
      "Test Accuracy (Jaccard): 0.6845\n",
      "Test Precision: 0.7131, Test Recall: 0.8365, Test F1: 0.7449\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 17/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0995, Train Accuracy (Exact Match): 0.8054\n",
      "Test Loss: 0.3025\n",
      "Test Accuracy (Exact Match): 0.5187\n",
      "Test Accuracy (Partial Match): 0.8241\n",
      "Test Accuracy (Jaccard): 0.6866\n",
      "Test Precision: 0.7203, Test Recall: 0.8241, Test F1: 0.7441\n",
      "\n",
      "Epoch 18/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0927, Train Accuracy (Exact Match): 0.8248\n",
      "Test Loss: 0.3172\n",
      "Test Accuracy (Exact Match): 0.5145\n",
      "Test Accuracy (Partial Match): 0.8324\n",
      "Test Accuracy (Jaccard): 0.6888\n",
      "Test Precision: 0.7225, Test Recall: 0.8324, Test F1: 0.7485\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 19/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0859, Train Accuracy (Exact Match): 0.8345\n",
      "Test Loss: 0.3198\n",
      "Test Accuracy (Exact Match): 0.5104\n",
      "Test Accuracy (Partial Match): 0.8241\n",
      "Test Accuracy (Jaccard): 0.6806\n",
      "Test Precision: 0.7132, Test Recall: 0.8241, Test F1: 0.7396\n",
      "\n",
      "Epoch 20/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0819, Train Accuracy (Exact Match): 0.8427\n",
      "Test Loss: 0.3145\n",
      "Test Accuracy (Exact Match): 0.5353\n",
      "Test Accuracy (Partial Match): 0.8241\n",
      "Test Accuracy (Jaccard): 0.6989\n",
      "Test Precision: 0.7344, Test Recall: 0.8241, Test F1: 0.7536\n",
      "Saved new best model to ./results/run_20250429_161634_all_text/best_model_all_text.pt\n",
      "\n",
      "Loading best model for final evaluation...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_19/3276856348.py:1425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n",
      "  model.module.load_state_dict(torch.load(best_model_path))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Final evaluation with default threshold (0.5):\n",
      "Exact Match Accuracy: 0.5353\n",
      "Partial Match Accuracy: 0.8241\n",
      "Jaccard Similarity: 0.6989\n",
      "Precision: 0.7344\n",
      "Recall: 0.8241\n",
      "F1 Score: 0.7536\n",
      "\n",
      "Training completed! Results saved to ./results/run_20250429_161634_all_text\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x2500 with 40 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    # Create parser and handle Jupyter/Colab environment by ignoring unknown args\n",
    "    parser = argparse.ArgumentParser(description='Train DeBERTa for multi-label classification')\n",
    "    \n",
    "    # Data parameters\n",
    "    parser.add_argument('--train_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv\",\n",
    "                        help='Path to the JSON training data file')\n",
    "    parser.add_argument('--test_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv\",\n",
    "                        help='Path to the JSON testing data file')\n",
    "    parser.add_argument('--text_column', type=str, default='all_text',\n",
    "                        help='Column name with the text data to use for training (e.g., all_text, all_text_0.5)')\n",
    "    parser.add_argument('--results_dir', type=str, default='./results',\n",
    "                        help='Directory to save results')\n",
    "    \n",
    "    # Label filtering parameters\n",
    "    parser.add_argument('--min_label_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label to be considered')\n",
    "    parser.add_argument('--max_label_len', type=int, default=5,\n",
    "                        help='Maximum number of labels per sample (default: 5)')\n",
    "    parser.add_argument('--min_label_comb_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label combination')\n",
    "    \n",
    "    # Training parameters\n",
    "    parser.add_argument('--batch_size', type=int, default=16, help='Training batch size')\n",
    "    parser.add_argument('--epochs', type=int, default=20, help='Number of training epochs')\n",
    "    parser.add_argument('--learning_rate', type=float, default=2e-5, help='Learning rate')\n",
    "    parser.add_argument('--patience', type=int, default=3, help='Early stopping patience')\n",
    "    parser.add_argument('--use_class_weights', action='store_true', default=True, help='Use class weights for imbalanced data')\n",
    "    \n",
    "    # Token length parameters\n",
    "    parser.add_argument('--max_length', type=int, default=512, help='Maximum token length for model input')\n",
    "    \n",
    "    # Token length filtering parameters\n",
    "    parser.add_argument('--token_length_filter', type=str, choices=['2std', '3std', None], default='3std',\n",
    "                        help='Remove token length outliers based on standard deviation threshold')\n",
    "    parser.add_argument('--min_token_threshold', type=int, default=None,\n",
    "                        help='Minimum number of tokens required for a sample')\n",
    "    \n",
    "    # Token reduction parameters for handling long tokens\n",
    "    parser.add_argument('--token_reduction_strategy', type=str, \n",
    "                        choices=['simple', 'smart_truncation', 'extractive_summarization', 'hybrid'], \n",
    "                        default=None,\n",
    "                        help='Strategy to handle long tokens exceeding max_length: '\n",
    "                             'simple=simple truncation, '\n",
    "                             'smart_truncation=keep beginning and end, '\n",
    "                             'extractive_summarization=extract key sentences, '\n",
    "                             'hybrid=combine summarization and truncation')\n",
    "    \n",
    "    # Feature selection parameters\n",
    "    parser.add_argument('--feature_selection', action='store_true', \n",
    "                        help='Enable hybrid feature selection')\n",
    "    parser.add_argument('--filter_k', type=int, default=20, \n",
    "                        help='Number of labels to retain after filter stage')\n",
    "    parser.add_argument('--final_k', type=int, default=10, \n",
    "                        help='Final number of labels to select')\n",
    "    parser.add_argument('--vectorizer', type=str, choices=['count', 'tfidf'], default='count',\n",
    "                        help='Vectorizer to use for feature selection')\n",
    "    parser.add_argument('--wrapper_method', type=str, choices=['rf', 'lr'], default='rf',\n",
    "                        help='Wrapper method to use for feature selection (rf: Random Forest, lr: Logistic Regression)')\n",
    "    \n",
    "    # Parse arguments, ignore unknown args for compatibility with Jupyter/Colab\n",
    "    args, unknown = parser.parse_known_args()\n",
    "    \n",
    "    # If the script is run directly, not imported\n",
    "    results = main(args)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50ec80d6",
   "metadata": {
    "papermill": {
     "duration": 0.164523,
     "end_time": "2025-04-29T16:39:38.351261",
     "exception": false,
     "start_time": "2025-04-29T16:39:38.186738",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### With Feature Selection"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f35389ec",
   "metadata": {
    "papermill": {
     "duration": 0.163491,
     "end_time": "2025-04-29T16:39:38.681226",
     "exception": false,
     "start_time": "2025-04-29T16:39:38.517735",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "with weighted class"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "60d20f24",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-29T16:39:39.005351Z",
     "iopub.status.busy": "2025-04-29T16:39:39.005029Z",
     "iopub.status.idle": "2025-04-29T17:04:49.239540Z",
     "shell.execute_reply": "2025-04-29T17:04:49.238856Z"
    },
    "papermill": {
     "duration": 1510.395621,
     "end_time": "2025-04-29T17:04:49.240851",
     "exception": false,
     "start_time": "2025-04-29T16:39:38.845230",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Using 2 GPUs: [0, 1]\n",
      "Loading tokenizer...\n",
      "Loading training data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv...\n",
      "Loading testing data from /kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv...\n",
      "\n",
      "=== PROCESSING TRAINING DATA ===\n",
      "\n",
      "Applying token length filtering to training data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1268/1268 [00:03<00:00, 373.05it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 268.78, Std Dev: 229.74\n",
      "  Min: 26, Max: 3448\n",
      "  25th percentile: 120.75\n",
      "  50th percentile (median): 209.50\n",
      "  75th percentile: 349.25\n",
      "Applied 3.0 std dev threshold: (1.00, 957.99)\n",
      "Removed 17 samples by std dev filtering (1.34% of data)\n",
      "Total removed: 17 samples (1.34% of original data)\n",
      "Remaining: 1251 samples (98.66% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 252.85, Std Dev: 168.56\n",
      "  Min: 26, Max: 951\n",
      "  25th percentile: 120.00\n",
      "  50th percentile (median): 207.00\n",
      "  75th percentile: 346.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 1251\n",
      "Dataset size after basic cleaning: 1251 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 25\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 25 (100.00% of labels)\n",
      "Samples remaining after label filtering: 1251 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 107\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 107 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 5)\n",
      "Removed 18 samples with too many or zero labels (1.44% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 1251\n",
      "Final dataset size: 1233 (98.56% of original data)\n",
      "Total samples removed: 18 (1.44% of original data)\n",
      "\n",
      "=== TRAINING DATASET STATISTICS ===\n",
      "Initial training dataset size: 1268\n",
      "Final training dataset size: 1233\n",
      "Total samples removed: 35 (2.76% of original training data)\n",
      "\n",
      "Training Label Distribution:\n",
      "0. area/kubelet: 290\n",
      "1. area/test: 289\n",
      "2. area/apiserver: 173\n",
      "3. area/cloudprovider: 146\n",
      "4. area/kubectl: 112\n",
      "5. area/provider/azure: 63\n",
      "6. area/dependency: 62\n",
      "7. area/code-generation: 43\n",
      "8. area/ipvs: 32\n",
      "9. area/kubeadm: 29\n",
      "10. area/api: 28\n",
      "11. area/provider/gcp: 28\n",
      "12. area/batch: 28\n",
      "13. area/deflake: 28\n",
      "14. area/code-organization: 28\n",
      "15. area/security: 28\n",
      "16. area/etcd: 28\n",
      "17. area/custom-resources: 28\n",
      "18. area/provider/aws: 28\n",
      "19. area/conformance: 27\n",
      "20. area/client-libraries: 27\n",
      "21. area/network-policy: 26\n",
      "22. area/kube-proxy: 25\n",
      "23. area/release-eng: 23\n",
      "24. area/e2e-test-framework: 21\n",
      "\n",
      "=== PROCESSING TESTING DATA ===\n",
      "\n",
      "Applying token length filtering to testing data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 245/245 [00:00<00:00, 641.13it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Token length statistics before filtering:\n",
      "  Mean: 229.49, Std Dev: 206.61\n",
      "  Min: 31, Max: 1604\n",
      "  25th percentile: 102.00\n",
      "  50th percentile (median): 161.00\n",
      "  75th percentile: 287.00\n",
      "Applied 3.0 std dev threshold: (1.00, 849.30)\n",
      "Removed 4 samples by std dev filtering (1.63% of data)\n",
      "Total removed: 4 samples (1.63% of original data)\n",
      "Remaining: 241 samples (98.37% of original data)\n",
      "\n",
      "Token length statistics after all filtering:\n",
      "  Mean: 213.93, Std Dev: 164.74\n",
      "  Min: 31, Max: 810\n",
      "  25th percentile: 101.00\n",
      "  50th percentile (median): 160.00\n",
      "  75th percentile: 271.00\n",
      "\n",
      "=== DATA PREPROCESSING STATISTICS ===\n",
      "Initial dataset size: 241\n",
      "Dataset size after basic cleaning: 241 (100.00% of original data)\n",
      "\n",
      "Step 4: Filtering infrequent labels (min frequency: 0)\n",
      "Total unique labels before filtering: 18\n",
      "Removed 0 infrequent labels (0.00% of labels)\n",
      "Number of labels remaining: 18 (100.00% of labels)\n",
      "Samples remaining after label filtering: 241 (100.00% of data)\n",
      "\n",
      "Step 5: Filtering infrequent label combinations (min frequency: 0)\n",
      "Total unique label combinations before filtering: 47\n",
      "Removed 0 infrequent label combinations (0.00% of combinations)\n",
      "Number of label combinations remaining: 47 (100.00% of combinations)\n",
      "\n",
      "Step 6: Filtering samples with too many labels (max labels per sample: 5)\n",
      "Removed 0 samples with too many or zero labels (0.00% of data)\n",
      "\n",
      "=== FINAL PREPROCESSING RESULTS ===\n",
      "Original dataset size: 241\n",
      "Final dataset size: 241 (100.00% of original data)\n",
      "Total samples removed: 0 (0.00% of original data)\n",
      "\n",
      "=== TESTING DATASET STATISTICS ===\n",
      "Initial testing dataset size: 245\n",
      "Final testing dataset size: 241\n",
      "Total samples removed: 4 (1.63% of original testing data)\n",
      "Calculating final token lengths for metadata...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Calculating token lengths: 100%|██████████| 1233/1233 [00:01<00:00, 666.94it/s]\n",
      "Calculating token lengths: 100%|██████████| 241/241 [00:00<00:00, 755.84it/s]\n",
      "/usr/local/lib/python3.11/dist-packages/sklearn/preprocessing/_label.py:895: UserWarning: unknown class(es) ['area/provider/openstack', 'area/provider/vmware'] will be ignored\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "=== TOKEN LENGTH SUMMARY ===\n",
      "Training set:\n",
      "  Maximum token length: 925\n",
      "  Mean token length: 248.07\n",
      "  Median token length: 206.00\n",
      "Testing set:\n",
      "  Maximum token length: 810\n",
      "  Mean token length: 213.93\n",
      "  Median token length: 160.00\n",
      "Encoding labels...\n",
      "Training set label density: 0.0532\n",
      "Average labels per sample: 1.33\n",
      "Feature selection enabled: True\n",
      "Filter top-k: 20, Final top-k: 15\n",
      "Wrapper method: RF\n",
      "\n",
      "Performing hybrid feature selection...\n",
      "Using TF-IDF vectorizer for feature selection\n",
      "Starting hybrid feature selection to select 15 out of 25 labels...\n",
      "Vectorizing text data...\n",
      "Applying filter methods...\n",
      "Filter stage selected 20 labels\n",
      "Applying wrapper method using RF...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Wrapper evaluation: 100%|██████████| 20/20 [00:05<00:00,  3.68it/s]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Final selection: 15 labels\n",
      "Selected labels: ['area/network-policy' 'area/cloudprovider' 'area/kubelet'\n",
      " 'area/provider/aws' 'area/batch' 'area/dependency'\n",
      " 'area/client-libraries' 'area/provider/azure' 'area/apiserver'\n",
      " 'area/deflake' 'area/custom-resources' 'area/code-organization'\n",
      " 'area/test' 'area/etcd' 'area/ipvs']\n",
      "Training with 15 selected labels: ['area/network-policy' 'area/cloudprovider' 'area/kubelet'\n",
      " 'area/provider/aws' 'area/batch' 'area/dependency'\n",
      " 'area/client-libraries' 'area/provider/azure' 'area/apiserver'\n",
      " 'area/deflake' 'area/custom-resources' 'area/code-organization'\n",
      " 'area/test' 'area/etcd' 'area/ipvs']\n",
      "Training samples: 1233, Testing samples: 241\n",
      "Computing class weights for imbalanced labels...\n",
      "Using larger batch size of 32 for 2 GPUs\n",
      "Initializing model...\n",
      "Model wrapped in DataParallel\n",
      "Using weighted BCE loss\n",
      "Starting training for 20 epochs...\n",
      "\n",
      "Epoch 1/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:59<00:00,  1.52s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.8668, Train Accuracy (Exact Match): 0.0422\n",
      "Test Loss: 0.6173\n",
      "Test Accuracy (Exact Match): 0.0332\n",
      "Test Accuracy (Partial Match): 0.4882\n",
      "Test Accuracy (Jaccard): 0.2187\n",
      "Test Precision: 0.2317, Test Recall: 0.4882, Test F1: 0.3017\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 2/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.6469, Train Accuracy (Exact Match): 0.0592\n",
      "Test Loss: 0.5371\n",
      "Test Accuracy (Exact Match): 0.0166\n",
      "Test Accuracy (Partial Match): 0.6103\n",
      "Test Accuracy (Jaccard): 0.2339\n",
      "Test Precision: 0.2413, Test Recall: 0.6103, Test F1: 0.3320\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 3/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.4989, Train Accuracy (Exact Match): 0.1492\n",
      "Test Loss: 0.4672\n",
      "Test Accuracy (Exact Match): 0.1577\n",
      "Test Accuracy (Partial Match): 0.5820\n",
      "Test Accuracy (Jaccard): 0.3348\n",
      "Test Precision: 0.3436, Test Recall: 0.5820, Test F1: 0.4113\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 4/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.3574, Train Accuracy (Exact Match): 0.3877\n",
      "Test Loss: 0.3836\n",
      "Test Accuracy (Exact Match): 0.3734\n",
      "Test Accuracy (Partial Match): 0.5989\n",
      "Test Accuracy (Jaccard): 0.4772\n",
      "Test Precision: 0.4958, Test Recall: 0.5989, Test F1: 0.5238\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 5/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2507, Train Accuracy (Exact Match): 0.5896\n",
      "Test Loss: 0.3295\n",
      "Test Accuracy (Exact Match): 0.4315\n",
      "Test Accuracy (Partial Match): 0.6639\n",
      "Test Accuracy (Jaccard): 0.5485\n",
      "Test Precision: 0.5708, Test Recall: 0.6639, Test F1: 0.5963\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 6/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.2003, Train Accuracy (Exact Match): 0.6894\n",
      "Test Loss: 0.3052\n",
      "Test Accuracy (Exact Match): 0.4481\n",
      "Test Accuracy (Partial Match): 0.6743\n",
      "Test Accuracy (Jaccard): 0.5663\n",
      "Test Precision: 0.5882, Test Recall: 0.6743, Test F1: 0.6116\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 7/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1674, Train Accuracy (Exact Match): 0.7178\n",
      "Test Loss: 0.3153\n",
      "Test Accuracy (Exact Match): 0.4689\n",
      "Test Accuracy (Partial Match): 0.6470\n",
      "Test Accuracy (Jaccard): 0.5564\n",
      "Test Precision: 0.5823, Test Recall: 0.6470, Test F1: 0.5976\n",
      "\n",
      "Epoch 8/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.49s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1517, Train Accuracy (Exact Match): 0.7461\n",
      "Test Loss: 0.3162\n",
      "Test Accuracy (Exact Match): 0.5145\n",
      "Test Accuracy (Partial Match): 0.6511\n",
      "Test Accuracy (Jaccard): 0.5809\n",
      "Test Precision: 0.6072, Test Recall: 0.6511, Test F1: 0.6154\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 9/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1330, Train Accuracy (Exact Match): 0.8021\n",
      "Test Loss: 0.2883\n",
      "Test Accuracy (Exact Match): 0.5519\n",
      "Test Accuracy (Partial Match): 0.6553\n",
      "Test Accuracy (Jaccard): 0.5869\n",
      "Test Precision: 0.6107, Test Recall: 0.6553, Test F1: 0.6198\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 10/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1160, Train Accuracy (Exact Match): 0.8256\n",
      "Test Loss: 0.3164\n",
      "Test Accuracy (Exact Match): 0.5768\n",
      "Test Accuracy (Partial Match): 0.6456\n",
      "Test Accuracy (Jaccard): 0.5732\n",
      "Test Precision: 0.5996, Test Recall: 0.6456, Test F1: 0.6076\n",
      "\n",
      "Epoch 11/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.1019, Train Accuracy (Exact Match): 0.8532\n",
      "Test Loss: 0.2981\n",
      "Test Accuracy (Exact Match): 0.5851\n",
      "Test Accuracy (Partial Match): 0.6642\n",
      "Test Accuracy (Jaccard): 0.5869\n",
      "Test Precision: 0.6058, Test Recall: 0.6642, Test F1: 0.6206\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 12/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0931, Train Accuracy (Exact Match): 0.8654\n",
      "Test Loss: 0.3106\n",
      "Test Accuracy (Exact Match): 0.5934\n",
      "Test Accuracy (Partial Match): 0.6656\n",
      "Test Accuracy (Jaccard): 0.5893\n",
      "Test Precision: 0.6107, Test Recall: 0.6656, Test F1: 0.6238\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 13/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0881, Train Accuracy (Exact Match): 0.8816\n",
      "Test Loss: 0.3291\n",
      "Test Accuracy (Exact Match): 0.5975\n",
      "Test Accuracy (Partial Match): 0.6594\n",
      "Test Accuracy (Jaccard): 0.5785\n",
      "Test Precision: 0.6003, Test Recall: 0.6594, Test F1: 0.6144\n",
      "\n",
      "Epoch 14/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0790, Train Accuracy (Exact Match): 0.8929\n",
      "Test Loss: 0.2913\n",
      "Test Accuracy (Exact Match): 0.6224\n",
      "Test Accuracy (Partial Match): 0.6677\n",
      "Test Accuracy (Jaccard): 0.5962\n",
      "Test Precision: 0.6189, Test Recall: 0.6677, Test F1: 0.6295\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 15/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0718, Train Accuracy (Exact Match): 0.8929\n",
      "Test Loss: 0.3123\n",
      "Test Accuracy (Exact Match): 0.6266\n",
      "Test Accuracy (Partial Match): 0.6677\n",
      "Test Accuracy (Jaccard): 0.5979\n",
      "Test Precision: 0.6196, Test Recall: 0.6677, Test F1: 0.6303\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 16/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0678, Train Accuracy (Exact Match): 0.9059\n",
      "Test Loss: 0.3266\n",
      "Test Accuracy (Exact Match): 0.6183\n",
      "Test Accuracy (Partial Match): 0.6691\n",
      "Test Accuracy (Jaccard): 0.5961\n",
      "Test Precision: 0.6210, Test Recall: 0.6691, Test F1: 0.6302\n",
      "\n",
      "Epoch 17/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0612, Train Accuracy (Exact Match): 0.9205\n",
      "Test Loss: 0.3167\n",
      "Test Accuracy (Exact Match): 0.6266\n",
      "Test Accuracy (Partial Match): 0.6698\n",
      "Test Accuracy (Jaccard): 0.5979\n",
      "Test Precision: 0.6183, Test Recall: 0.6698, Test F1: 0.6305\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 18/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0587, Train Accuracy (Exact Match): 0.9157\n",
      "Test Loss: 0.3291\n",
      "Test Accuracy (Exact Match): 0.6349\n",
      "Test Accuracy (Partial Match): 0.6656\n",
      "Test Accuracy (Jaccard): 0.5997\n",
      "Test Precision: 0.6231, Test Recall: 0.6656, Test F1: 0.6309\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "\n",
      "Epoch 19/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.50s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train Loss: 0.0541, Train Accuracy (Exact Match): 0.9205\n",
      "Test Loss: 0.3236\n",
      "Test Accuracy (Exact Match): 0.6349\n",
      "Test Accuracy (Partial Match): 0.6677\n",
      "Test Accuracy (Jaccard): 0.5983\n",
      "Test Precision: 0.6183, Test Recall: 0.6677, Test F1: 0.6300\n",
      "\n",
      "Epoch 20/20\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Training: 100%|██████████| 39/39 [00:58<00:00,  1.51s/it]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Early stopping triggered\n",
      "Train Loss: 0.0527, Train Accuracy (Exact Match): 0.9294\n",
      "Test Loss: 0.3288\n",
      "Test Accuracy (Exact Match): 0.6390\n",
      "Test Accuracy (Partial Match): 0.6677\n",
      "Test Accuracy (Jaccard): 0.6052\n",
      "Test Precision: 0.6335, Test Recall: 0.6677, Test F1: 0.6364\n",
      "Saved new best model to ./results/run_20250429_163939_all_text/best_model_all_text.pt\n",
      "Early stopping triggered. Terminating training.\n",
      "\n",
      "Loading best model for final evaluation...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/tmp/ipykernel_19/3276856348.py:1425: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.\n",
      "  model.module.load_state_dict(torch.load(best_model_path))\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Final evaluation with default threshold (0.5):\n",
      "Exact Match Accuracy: 0.6390\n",
      "Partial Match Accuracy: 0.6677\n",
      "Jaccard Similarity: 0.6052\n",
      "Precision: 0.6335\n",
      "Recall: 0.6677\n",
      "F1 Score: 0.6364\n",
      "\n",
      "Training completed! Results saved to ./results/run_20250429_163939_all_text\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2000x2000 with 30 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "if __name__ == \"__main__\":\n",
    "    # Create parser and handle Jupyter/Colab environment by ignoring unknown args\n",
    "    parser = argparse.ArgumentParser(description='Train DeBERTa for multi-label classification')\n",
    "    \n",
    "    # Data parameters\n",
    "    parser.add_argument('--train_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_train_data.csv\",\n",
    "                        help='Path to the JSON training data file')\n",
    "    parser.add_argument('--test_data_path', type=str, \n",
    "                        default=\"/kaggle/input/kubernetes-preprocessed-augmented-data/preprocessed_val_data.csv\",\n",
    "                        help='Path to the JSON testing data file')\n",
    "    parser.add_argument('--text_column', type=str, default='all_text',\n",
    "                        help='Column name with the text data to use for training (e.g., all_text, all_text_0.5)')\n",
    "    parser.add_argument('--results_dir', type=str, default='./results',\n",
    "                        help='Directory to save results')\n",
    "    \n",
    "    # Label filtering parameters\n",
    "    parser.add_argument('--min_label_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label to be considered')\n",
    "    parser.add_argument('--max_label_len', type=int, default=5,\n",
    "                        help='Maximum number of labels per sample (default: 5)')\n",
    "    parser.add_argument('--min_label_comb_freq', type=int, default=0,\n",
    "                        help='Minimum frequency for a label combination')\n",
    "    \n",
    "    # Training parameters\n",
    "    parser.add_argument('--batch_size', type=int, default=16, help='Training batch size')\n",
    "    parser.add_argument('--epochs', type=int, default=20, help='Number of training epochs')\n",
    "    parser.add_argument('--learning_rate', type=float, default=2e-5, help='Learning rate')\n",
    "    parser.add_argument('--patience', type=int, default=3, help='Early stopping patience')\n",
    "    parser.add_argument('--use_class_weights', action='store_true', default=True, help='Use class weights for imbalanced data')\n",
    "    \n",
    "    # Token length parameters\n",
    "    parser.add_argument('--max_length', type=int, default=512, help='Maximum token length for model input')\n",
    "    \n",
    "    # Token length filtering parameters\n",
    "    parser.add_argument('--token_length_filter', type=str, choices=['2std', '3std', None], default='3std',\n",
    "                        help='Remove token length outliers based on standard deviation threshold')\n",
    "    parser.add_argument('--min_token_threshold', type=int, default=None,\n",
    "                        help='Minimum number of tokens required for a sample')\n",
    "    \n",
    "    # Token reduction parameters for handling long tokens\n",
    "    parser.add_argument('--token_reduction_strategy', type=str, \n",
    "                        choices=['simple', 'smart_truncation', 'extractive_summarization', 'hybrid'], \n",
    "                        default=None,\n",
    "                        help='Strategy to handle long tokens exceeding max_length: '\n",
    "                             'simple=simple truncation, '\n",
    "                             'smart_truncation=keep beginning and end, '\n",
    "                             'extractive_summarization=extract key sentences, '\n",
    "                             'hybrid=combine summarization and truncation')\n",
    "    \n",
    "    # Feature selection parameters\n",
    "    parser.add_argument('--feature_selection', action='store_true', default=True,\n",
    "                        help='Enable hybrid feature selection')\n",
    "    parser.add_argument('--filter_k', type=int, default=20, \n",
    "                        help='Number of labels to retain after filter stage')\n",
    "    parser.add_argument('--final_k', type=int, default=15, \n",
    "                        help='Final number of labels to select')\n",
    "    parser.add_argument('--vectorizer', type=str, choices=['count', 'tfidf'], default='tfidf',\n",
    "                        help='Vectorizer to use for feature selection')\n",
    "    parser.add_argument('--wrapper_method', type=str, choices=['rf', 'lr'], default='rf',\n",
    "                        help='Wrapper method to use for feature selection (rf: Random Forest, lr: Logistic Regression)')\n",
    "    \n",
    "    # Parse arguments, ignore unknown args for compatibility with Jupyter/Colab\n",
    "    args, unknown = parser.parse_known_args()\n",
    "    \n",
    "    # If the script is run directly, not imported\n",
    "    results = main(args)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 7277052,
     "sourceId": 11603144,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7283460,
     "sourceId": 11611774,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31011,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6804.427875,
   "end_time": "2025-04-29T17:04:52.476270",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-29T15:11:28.048395",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0834348b60064fdf89be9c74101806a7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3d6db60ffba14b628edb0c628668ee15",
       "max": 52.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_a17e53648ba546959ecdab08efb48fbf",
       "tabbable": null,
       "tooltip": null,
       "value": 52.0
      }
     },
     "08361e163d9a4c8998a19ec114454da6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0966c5985d8b4103b9b968a1909c079e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9047cd0ca122486595ab6da8979ba5d7",
       "placeholder": "​",
       "style": "IPY_MODEL_b0b8934264b542799113d313f82a2dd0",
       "tabbable": null,
       "tooltip": null,
       "value": " 474/474 [00:00&lt;00:00, 56.5kB/s]"
      }
     },
     "0e715f59d72a4447866bd7462ef976f2": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "13b504a50b5d41c083f5f8cea377c81f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d2954ce57a52471483b15c02bba5732e",
       "placeholder": "​",
       "style": "IPY_MODEL_abc04109f6f348758eac5be14e5a6ed4",
       "tabbable": null,
       "tooltip": null,
       "value": " 52.0/52.0 [00:00&lt;00:00, 5.65kB/s]"
      }
     },
     "14c00012d69846849f5009d8e1244924": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "18b922e15e6f46f8b0a4d0ae9395b4ab": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "193c695a3911428ea5e78132766e73f2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2346d3d49d9b43528907afed85a67ee1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_51f60bfb8cd646a69c83d8506f52a17b",
       "placeholder": "​",
       "style": "IPY_MODEL_d0f54350537d4767aa608606a735a66e",
       "tabbable": null,
       "tooltip": null,
       "value": "pytorch_model.bin: 100%"
      }
     },
     "23490e806d4f4d068edc9ab52429537b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2346d3d49d9b43528907afed85a67ee1",
        "IPY_MODEL_b91c274183494ee7abb55060c74ad13a",
        "IPY_MODEL_518194f0eaef40d5b7e0a7ab03515e61"
       ],
       "layout": "IPY_MODEL_fd0c66d79cc14f2cbec1bafc473a4d54",
       "tabbable": null,
       "tooltip": null
      }
     },
     "24b87d453be44856b3abaa126d0ba164": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c2b36d2df7194ac7bc7392e7093db6fb",
       "placeholder": "​",
       "style": "IPY_MODEL_7bde09e7ec8c47e99ee946af259364d7",
       "tabbable": null,
       "tooltip": null,
       "value": "merges.txt: 100%"
      }
     },
     "2919e176f90a4f1e9c9f13cd82bb9d4f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "2dedfff78b324a048c691b476e0db140": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2f6d9b647cab469faf0cd4034311f8d8",
       "placeholder": "​",
       "style": "IPY_MODEL_95416436e9c044baaebcb4e3cd46f6fb",
       "tabbable": null,
       "tooltip": null,
       "value": "vocab.json: 100%"
      }
     },
     "2f6d9b647cab469faf0cd4034311f8d8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "32acac60c5af4fd0991fa0c256f6ea4f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3731eb5577f146f8b354e9e67993e572": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ab1bd5761ad84d1b96c303fbc4feb990",
       "placeholder": "​",
       "style": "IPY_MODEL_537b823aed164984b2ff8ecbf305eb61",
       "tabbable": null,
       "tooltip": null,
       "value": " 559M/559M [00:02&lt;00:00, 230MB/s]"
      }
     },
     "3d6db60ffba14b628edb0c628668ee15": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "41077d5caeef4c85a18b8fd0956e21a9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "44e47641c6b54942b948a17d7a6702ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "4ba52e1b282b4b10b952ab99ed42a98f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_78dbcde94e00491e9d676a572d425798",
       "max": 558573788.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_41077d5caeef4c85a18b8fd0956e21a9",
       "tabbable": null,
       "tooltip": null,
       "value": 558573788.0
      }
     },
     "4bebf646964b4f15a2d0df3420393d18": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4dd775057f764fc2a3de478f90c3bcd5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "518194f0eaef40d5b7e0a7ab03515e61": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9bfb0045e96b4e6fb3d00c9c49fa3677",
       "placeholder": "​",
       "style": "IPY_MODEL_c5c58ad34cce49ad9204c0f19794b0ab",
       "tabbable": null,
       "tooltip": null,
       "value": " 559M/559M [00:02&lt;00:00, 246MB/s]"
      }
     },
     "51f60bfb8cd646a69c83d8506f52a17b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "537b823aed164984b2ff8ecbf305eb61": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "54c3ff9241ea4f309c7010a42a56e4b0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "5b1b256afe6c410b9ab33e10e1ab08f7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "65f0c851d934445da7c1c1117508bd9d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2dedfff78b324a048c691b476e0db140",
        "IPY_MODEL_dc778980294941bda931d516579fd229",
        "IPY_MODEL_c7e3c5b6c2a94946a4e0b93d4a1f45cf"
       ],
       "layout": "IPY_MODEL_5b1b256afe6c410b9ab33e10e1ab08f7",
       "tabbable": null,
       "tooltip": null
      }
     },
     "6dc03771d57649f3afd13cdfe518b456": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6f07b3edb9e04ba0970477c38ffc8731": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9de30dde6b6847968a935d4a0b4253e2",
       "placeholder": "​",
       "style": "IPY_MODEL_0e715f59d72a4447866bd7462ef976f2",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "78dbcde94e00491e9d676a572d425798": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7bde09e7ec8c47e99ee946af259364d7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7d55d394dc9d4398b4a06b6df760b240": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4dd775057f764fc2a3de478f90c3bcd5",
       "placeholder": "​",
       "style": "IPY_MODEL_6dc03771d57649f3afd13cdfe518b456",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "8778340751254d04bb3b939683e54075": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9adc64aebc054c22a80389e6d0f548a2",
       "max": 474.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_44e47641c6b54942b948a17d7a6702ff",
       "tabbable": null,
       "tooltip": null,
       "value": 474.0
      }
     },
     "9047cd0ca122486595ab6da8979ba5d7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "95416436e9c044baaebcb4e3cd46f6fb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "9adc64aebc054c22a80389e6d0f548a2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9bfb0045e96b4e6fb3d00c9c49fa3677": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9de30dde6b6847968a935d4a0b4253e2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a17e53648ba546959ecdab08efb48fbf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "aaf74f8f7ae24d6c9fe2b7961aab311b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ab1bd5761ad84d1b96c303fbc4feb990": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "abc04109f6f348758eac5be14e5a6ed4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b0b8934264b542799113d313f82a2dd0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b788dc5f4e5f448080bb552aa41e8b77": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c524819b95e64eec8c64f429c42fbfaf",
       "placeholder": "​",
       "style": "IPY_MODEL_32acac60c5af4fd0991fa0c256f6ea4f",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: 100%"
      }
     },
     "b84d9b7893b849709194a223d481a0b8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7d55d394dc9d4398b4a06b6df760b240",
        "IPY_MODEL_4ba52e1b282b4b10b952ab99ed42a98f",
        "IPY_MODEL_3731eb5577f146f8b354e9e67993e572"
       ],
       "layout": "IPY_MODEL_4bebf646964b4f15a2d0df3420393d18",
       "tabbable": null,
       "tooltip": null
      }
     },
     "b91c274183494ee7abb55060c74ad13a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_14c00012d69846849f5009d8e1244924",
       "max": 558614189.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2919e176f90a4f1e9c9f13cd82bb9d4f",
       "tabbable": null,
       "tooltip": null,
       "value": 558614189.0
      }
     },
     "bd05b0ea7b7c472299b4194a9aabcee1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_6f07b3edb9e04ba0970477c38ffc8731",
        "IPY_MODEL_8778340751254d04bb3b939683e54075",
        "IPY_MODEL_0966c5985d8b4103b9b968a1909c079e"
       ],
       "layout": "IPY_MODEL_d1868a9adf4a4be1a846ad1371b865fc",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c2b36d2df7194ac7bc7392e7093db6fb": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c524819b95e64eec8c64f429c42fbfaf": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c5c58ad34cce49ad9204c0f19794b0ab": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c7e3c5b6c2a94946a4e0b93d4a1f45cf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_08361e163d9a4c8998a19ec114454da6",
       "placeholder": "​",
       "style": "IPY_MODEL_aaf74f8f7ae24d6c9fe2b7961aab311b",
       "tabbable": null,
       "tooltip": null,
       "value": " 899k/899k [00:00&lt;00:00, 12.5MB/s]"
      }
     },
     "cc2b4d9e532544d79bee5b1320022ad1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ef67b53258304d25977fe09ac3768569",
       "placeholder": "​",
       "style": "IPY_MODEL_ed54b862037f4cae8cb0543b95650c74",
       "tabbable": null,
       "tooltip": null,
       "value": " 456k/456k [00:00&lt;00:00, 6.47MB/s]"
      }
     },
     "d0f54350537d4767aa608606a735a66e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d1868a9adf4a4be1a846ad1371b865fc": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d2954ce57a52471483b15c02bba5732e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d5add57c2ba148c48e57e69f1e3cbf63": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_24b87d453be44856b3abaa126d0ba164",
        "IPY_MODEL_dac9e1586b734f7cb5ae35a62a0622f8",
        "IPY_MODEL_cc2b4d9e532544d79bee5b1320022ad1"
       ],
       "layout": "IPY_MODEL_18b922e15e6f46f8b0a4d0ae9395b4ab",
       "tabbable": null,
       "tooltip": null
      }
     },
     "dac9e1586b734f7cb5ae35a62a0622f8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f49d785f02c541bf9279c627fd00e7ca",
       "max": 456318.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_54c3ff9241ea4f309c7010a42a56e4b0",
       "tabbable": null,
       "tooltip": null,
       "value": 456318.0
      }
     },
     "dc778980294941bda931d516579fd229": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_193c695a3911428ea5e78132766e73f2",
       "max": 898825.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_e1cbcab5092441b5b1b5ab4778611280",
       "tabbable": null,
       "tooltip": null,
       "value": 898825.0
      }
     },
     "e1cbcab5092441b5b1b5ab4778611280": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "ed54b862037f4cae8cb0543b95650c74": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ef67b53258304d25977fe09ac3768569": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f46b3661dcfa4deea1da1aa5ea93058f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_b788dc5f4e5f448080bb552aa41e8b77",
        "IPY_MODEL_0834348b60064fdf89be9c74101806a7",
        "IPY_MODEL_13b504a50b5d41c083f5f8cea377c81f"
       ],
       "layout": "IPY_MODEL_fddbe5351cf549338f9fd47ee85f2664",
       "tabbable": null,
       "tooltip": null
      }
     },
     "f49d785f02c541bf9279c627fd00e7ca": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fd0c66d79cc14f2cbec1bafc473a4d54": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fddbe5351cf549338f9fd47ee85f2664": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
